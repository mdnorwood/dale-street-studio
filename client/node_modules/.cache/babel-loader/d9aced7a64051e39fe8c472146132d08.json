{"ast":null,"code":"var assert = require('assert');\n\nvar async = require('async');\n\nvar ndarray = require('ndarray');\n\nvar exporters = require('./exporters').exporters;\n\nfunction Canvas(width, height) {\n  var len = width * height * 4;\n  this.width = width;\n  this.height = height;\n  this.data = new Uint8ClampedArray(len);\n  this.ndarray = new ndarray(this.data, [height, width, 4]); // Create a store for images\n\n  this.images = [];\n}\n\nCanvas.prototype = {\n  'addImage': function addImage(img, x, y) {\n    // Save the image for later\n    this.images.push({\n      img: img,\n      x: x,\n      y: y\n    });\n  },\n  'export': function exportFn(options, cb) {\n    // Grab the exporter\n    var format = options.format || 'png',\n        exporter = exporters[format]; // Assert it exists\n\n    assert(exporter, 'Exporter ' + format + ' does not exist for spritesmith\\'s png engine'); // Render the item\n\n    exporter.call(this, options, cb);\n  }\n};\n\nfunction createCanvas(width, height, cb) {\n  // Create a new canvas and callback\n  var canvas = new Canvas(width, height);\n  cb(null, canvas);\n} // Expose Canvas and createCanvas to engine\n\n\nmodule.exports = {\n  Canvas: Canvas,\n  createCanvas: createCanvas\n};","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/pngsmith/lib/canvas.js"],"names":["assert","require","async","ndarray","exporters","Canvas","width","height","len","data","Uint8ClampedArray","images","prototype","addImage","img","x","y","push","exportFn","options","cb","format","exporter","call","createCanvas","canvas","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,aAAD,CAAP,CAAuBG,SAAvC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AAC7B,MAAIC,GAAG,GAAGF,KAAK,GAAGC,MAAR,GAAiB,CAA3B;AACA,OAAKD,KAAL,GAAaA,KAAb;AACA,OAAKC,MAAL,GAAcA,MAAd;AACA,OAAKE,IAAL,GAAY,IAAIC,iBAAJ,CAAsBF,GAAtB,CAAZ;AACA,OAAKL,OAAL,GAAe,IAAIA,OAAJ,CAAY,KAAKM,IAAjB,EAAuB,CAACF,MAAD,EAASD,KAAT,EAAgB,CAAhB,CAAvB,CAAf,CAL6B,CAO7B;;AACA,OAAKK,MAAL,GAAc,EAAd;AACD;;AACDN,MAAM,CAACO,SAAP,GAAmB;AACjB,cAAY,SAASC,QAAT,CAAmBC,GAAnB,EAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AACxC;AACA,SAAKL,MAAL,CAAYM,IAAZ,CAAiB;AACfH,MAAAA,GAAG,EAAEA,GADU;AAEfC,MAAAA,CAAC,EAAEA,CAFY;AAGfC,MAAAA,CAAC,EAAEA;AAHY,KAAjB;AAKD,GARgB;AASjB,YAAU,SAASE,QAAT,CAAmBC,OAAnB,EAA4BC,EAA5B,EAAgC;AACxC;AACA,QAAIC,MAAM,GAAGF,OAAO,CAACE,MAAR,IAAkB,KAA/B;AAAA,QACIC,QAAQ,GAAGlB,SAAS,CAACiB,MAAD,CADxB,CAFwC,CAKxC;;AACArB,IAAAA,MAAM,CAACsB,QAAD,EAAW,cAAcD,MAAd,GAAuB,+CAAlC,CAAN,CANwC,CAQxC;;AACAC,IAAAA,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoBJ,OAApB,EAA6BC,EAA7B;AACD;AAnBgB,CAAnB;;AAsBA,SAASI,YAAT,CAAsBlB,KAAtB,EAA6BC,MAA7B,EAAqCa,EAArC,EAAyC;AACvC;AACA,MAAIK,MAAM,GAAG,IAAIpB,MAAJ,CAAWC,KAAX,EAAkBC,MAAlB,CAAb;AACAa,EAAAA,EAAE,CAAC,IAAD,EAAOK,MAAP,CAAF;AACD,C,CAED;;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACftB,EAAAA,MAAM,EAAEA,MADO;AAEfmB,EAAAA,YAAY,EAAEA;AAFC,CAAjB","sourcesContent":["var assert = require('assert');\nvar async = require('async');\nvar ndarray = require('ndarray');\nvar exporters = require('./exporters').exporters;\n\nfunction Canvas(width, height) {\n  var len = width * height * 4;\n  this.width = width;\n  this.height = height;\n  this.data = new Uint8ClampedArray(len);\n  this.ndarray = new ndarray(this.data, [height, width, 4]);\n\n  // Create a store for images\n  this.images = [];\n}\nCanvas.prototype = {\n  'addImage': function addImage (img, x, y) {\n    // Save the image for later\n    this.images.push({\n      img: img,\n      x: x,\n      y: y\n    });\n  },\n  'export': function exportFn (options, cb) {\n    // Grab the exporter\n    var format = options.format || 'png',\n        exporter = exporters[format];\n\n    // Assert it exists\n    assert(exporter, 'Exporter ' + format + ' does not exist for spritesmith\\'s png engine');\n\n    // Render the item\n    exporter.call(this, options, cb);\n  }\n};\n\nfunction createCanvas(width, height, cb) {\n  // Create a new canvas and callback\n  var canvas = new Canvas(width, height);\n  cb(null, canvas);\n}\n\n// Expose Canvas and createCanvas to engine\nmodule.exports = {\n  Canvas: Canvas,\n  createCanvas: createCanvas\n};"]},"metadata":{},"sourceType":"script"}