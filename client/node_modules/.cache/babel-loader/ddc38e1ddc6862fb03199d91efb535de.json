{"ast":null,"code":"var _jsxFileName = \"/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/src/components/file-upload/file-upload.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { storage } from '../../firebase/firebase.utils';\nimport { ImageContainer } from './file-upload.style';\nimport bannerImageSrcWebP from '../../images/WebPFiles/Banner-Background.webp';\nimport bannerImageSrcJPX from '../../images/JPXFiles/Banner-Background.jpx';\nimport bannerImageSrcJPG from '../../images/Banner-Background.jpg';\nimport NextGenImgsWithFallback from '../ImgWithFallback/ImgWithFallback.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUploader = () => {\n  _s();\n\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n    }, () => {\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        setUrl(url);\n      });\n    });\n  };\n\n  console.log('image: ', image);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Image File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Image Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), url, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n      src: url || 'https://via.placholder.com/300x400',\n      alt: \"firebase-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NextGenImgsWithFallback, {\n      srcWebP: bannerImageSrcWebP,\n      srcJPX: bannerImageSrcJPX,\n      fallbackSrc: bannerImageSrcJPG,\n      alt: \"banner Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUploader, \"vIxVUXyNJ6QoroZRdNsUUCK3y6U=\");\n\n_c = FileUploader;\nexport default FileUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/src/components/file-upload/file-upload.component.jsx"],"names":["React","useState","storage","ImageContainer","bannerImageSrcWebP","bannerImageSrcJPX","bannerImageSrcJPG","NextGenImgsWithFallback","FileUploader","image","setImage","url","setUrl","progress","setProgress","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { storage } from '../../firebase/firebase.utils';\n\nimport { ImageContainer } from './file-upload.style';\n\nimport bannerImageSrcWebP from '../../images/WebPFiles/Banner-Background.webp';\nimport bannerImageSrcJPX from '../../images/JPXFiles/Banner-Background.jpx';\nimport bannerImageSrcJPG from '../../images/Banner-Background.jpg';\n\nimport NextGenImgsWithFallback from '../ImgWithFallback/ImgWithFallback.component';\n\nconst FileUploader = () => {\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const[ progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            setUrl(url)\n          });\n      }\n    );\n  };\n\n  console.log('image: ', image);\n\n  return (\n    <div>\n      <progress value={progress} max='100' />\n      <br/><br/>\n      <p>Image File Upload</p>\n      <input type='file' accept=\"image/*\" onChange={handleChange} />\n      <button onClick={handleUpload}>Image Upload</button>\n      <br/>\n      {url}\n      <br/>\n      <ImageContainer src={url || 'https://via.placholder.com/300x400'} alt=\"firebase-image\" />\n\n\n      <NextGenImgsWithFallback\n      srcWebP={bannerImageSrcWebP}\n      srcJPX={bannerImageSrcJPX}\n      fallbackSrc={bannerImageSrcJPG}\n      alt=\"banner Image\"\n    />\n    </div>\n  );\n};\n\nexport default FileUploader;"]},"metadata":{},"sourceType":"module"}