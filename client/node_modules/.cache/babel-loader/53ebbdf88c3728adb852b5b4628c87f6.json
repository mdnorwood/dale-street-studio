{"ast":null,"code":"module.exports = {\n  readUInt8: read_uint8,\n  readInt8: read_int8,\n  readUInt16LE: read_uint16_le,\n  readUInt32LE: read_uint32_le,\n  readInt16LE: read_int16_le,\n  readInt32LE: read_int32_le,\n  readFloatLE: read_float_le,\n  readDoubleLE: read_double_le,\n  readUInt16BE: read_uint16_be,\n  readUInt32BE: read_uint32_be,\n  readInt16BE: read_int16_be,\n  readInt32BE: read_int32_be,\n  readFloatBE: read_float_be,\n  readDoubleBE: read_double_be\n};\n\nvar map = require('./mapped.js');\n\nfunction read_uint8(target, at) {\n  return target[at];\n}\n\nfunction read_int8(target, at) {\n  var v = target[at];\n  return v < 0x80 ? v : v - 0x100;\n}\n\nfunction read_uint16_le(target, at) {\n  var dv = map.get(target);\n  return dv.getUint16(at + target.byteOffset, true);\n}\n\nfunction read_uint32_le(target, at) {\n  var dv = map.get(target);\n  return dv.getUint32(at + target.byteOffset, true);\n}\n\nfunction read_int16_le(target, at) {\n  var dv = map.get(target);\n  return dv.getInt16(at + target.byteOffset, true);\n}\n\nfunction read_int32_le(target, at) {\n  var dv = map.get(target);\n  return dv.getInt32(at + target.byteOffset, true);\n}\n\nfunction read_float_le(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat32(at + target.byteOffset, true);\n}\n\nfunction read_double_le(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat64(at + target.byteOffset, true);\n}\n\nfunction read_uint16_be(target, at) {\n  var dv = map.get(target);\n  return dv.getUint16(at + target.byteOffset, false);\n}\n\nfunction read_uint32_be(target, at) {\n  var dv = map.get(target);\n  return dv.getUint32(at + target.byteOffset, false);\n}\n\nfunction read_int16_be(target, at) {\n  var dv = map.get(target);\n  return dv.getInt16(at + target.byteOffset, false);\n}\n\nfunction read_int32_be(target, at) {\n  var dv = map.get(target);\n  return dv.getInt32(at + target.byteOffset, false);\n}\n\nfunction read_float_be(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat32(at + target.byteOffset, false);\n}\n\nfunction read_double_be(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat64(at + target.byteOffset, false);\n}","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/bops/typedarray/read.js"],"names":["module","exports","readUInt8","read_uint8","readInt8","read_int8","readUInt16LE","read_uint16_le","readUInt32LE","read_uint32_le","readInt16LE","read_int16_le","readInt32LE","read_int32_le","readFloatLE","read_float_le","readDoubleLE","read_double_le","readUInt16BE","read_uint16_be","readUInt32BE","read_uint32_be","readInt16BE","read_int16_be","readInt32BE","read_int32_be","readFloatBE","read_float_be","readDoubleBE","read_double_be","map","require","target","at","v","dv","get","getUint16","byteOffset","getUint32","getInt16","getInt32","getFloat32","getFloat64"],"mappings":"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","sourcesContent":["module.exports = {\n    readUInt8:      read_uint8\n  , readInt8:       read_int8\n  , readUInt16LE:   read_uint16_le\n  , readUInt32LE:   read_uint32_le\n  , readInt16LE:    read_int16_le\n  , readInt32LE:    read_int32_le\n  , readFloatLE:    read_float_le\n  , readDoubleLE:   read_double_le\n  , readUInt16BE:   read_uint16_be\n  , readUInt32BE:   read_uint32_be\n  , readInt16BE:    read_int16_be\n  , readInt32BE:    read_int32_be\n  , readFloatBE:    read_float_be\n  , readDoubleBE:   read_double_be\n}\n\nvar map = require('./mapped.js')\n\nfunction read_uint8(target, at) {\n  return target[at]\n}\n\nfunction read_int8(target, at) {\n  var v = target[at];\n  return v < 0x80 ? v : v - 0x100\n}\n\nfunction read_uint16_le(target, at) {\n  var dv = map.get(target);\n  return dv.getUint16(at + target.byteOffset, true)\n}\n\nfunction read_uint32_le(target, at) {\n  var dv = map.get(target);\n  return dv.getUint32(at + target.byteOffset, true)\n}\n\nfunction read_int16_le(target, at) {\n  var dv = map.get(target);\n  return dv.getInt16(at + target.byteOffset, true)\n}\n\nfunction read_int32_le(target, at) {\n  var dv = map.get(target);\n  return dv.getInt32(at + target.byteOffset, true)\n}\n\nfunction read_float_le(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat32(at + target.byteOffset, true)\n}\n\nfunction read_double_le(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat64(at + target.byteOffset, true)\n}\n\nfunction read_uint16_be(target, at) {\n  var dv = map.get(target);\n  return dv.getUint16(at + target.byteOffset, false)\n}\n\nfunction read_uint32_be(target, at) {\n  var dv = map.get(target);\n  return dv.getUint32(at + target.byteOffset, false)\n}\n\nfunction read_int16_be(target, at) {\n  var dv = map.get(target);\n  return dv.getInt16(at + target.byteOffset, false)\n}\n\nfunction read_int32_be(target, at) {\n  var dv = map.get(target);\n  return dv.getInt32(at + target.byteOffset, false)\n}\n\nfunction read_float_be(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat32(at + target.byteOffset, false)\n}\n\nfunction read_double_be(target, at) {\n  var dv = map.get(target);\n  return dv.getFloat64(at + target.byteOffset, false)\n}\n"]},"metadata":{},"sourceType":"script"}