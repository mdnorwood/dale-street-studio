{"ast":null,"code":"var path = require('path'),\n    sizeOf = require('image-size'),\n    Datauri = require('datauri');\n/**\n * imageWidth\n * @param {String} args[0] image path\n * @param {Function} done\n */\n\n\nfunction imageWidth(args, done) {\n  var arg = args[0],\n      image = path.join(this.imagePath, arg),\n      dimensions = this.dimensions[image],\n      self = this;\n\n  if (dimensions) {\n    done(dimensions.width + 'px');\n  } else {\n    sizeOf(image, function (err, dimensions) {\n      if (err) return console.error(err);\n      self.dimensions[image] = dimensions;\n      done(dimensions.width + 'px');\n    });\n  }\n}\n/**\n * imageHeight\n * @param {String} args[0] image path\n * @param {Function} done\n */\n\n\nfunction imageHeight(args, done) {\n  var arg = args[0],\n      image = path.join(this.imagePath, arg),\n      dimensions = this.dimensions[image],\n      self = this;\n\n  if (dimensions) {\n    done(dimensions.height + 'px');\n  } else {\n    sizeOf(image, function (err, dimensions) {\n      if (err) return console.error(err);\n      self.dimensions[image] = dimensions;\n      done(dimensions.height + 'px');\n    });\n  }\n}\n/**\n * inlineImage\n * @param {String} args[0] image path\n */\n\n\nfunction inlineImage(args) {\n  var arg = unquote(args),\n      image = path.join(this.imagePath, arg),\n      self = this;\n  return \"url('\" + new Datauri(image).content + \"')\";\n}\n/**\n * unquote\n * @param {String} args[0] anything string need unquote\n */\n\n\nfunction unquote(args) {\n  var arg = args[0];\n  return arg.replace(/^\"|\"$/g, '');\n}\n/**\n * variable\n * @param {String} key\n */\n\n\nfunction variable(key) {\n  var value = this.variables[key];\n  return value ? value : '$' + key;\n}\n\nmodule.exports = {\n  'image-width': imageWidth,\n  'image-height': imageHeight,\n  'image_width': imageWidth,\n  'image_height': imageHeight,\n  'inline-image': inlineImage,\n  'unquote': unquote,\n  'variable': variable\n};","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/compass-node/lib/tools.js"],"names":["path","require","sizeOf","Datauri","imageWidth","args","done","arg","image","join","imagePath","dimensions","self","width","err","console","error","imageHeight","height","inlineImage","unquote","content","replace","variable","key","value","variables","module","exports"],"mappings":"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","sourcesContent":["var path = require('path')\n  , sizeOf = require('image-size')\n  , Datauri = require('datauri');\n\n/**\n * imageWidth\n * @param {String} args[0] image path\n * @param {Function} done\n */\nfunction imageWidth(args, done) {\n  var arg = args[0]\n    , image = path.join(this.imagePath, arg)\n    , dimensions = this.dimensions[image]\n    , self = this;\n  if (dimensions) {\n    done(dimensions.width + 'px');\n  } else {\n    sizeOf(image, function (err, dimensions) {\n      if (err) return console.error(err);\n      self.dimensions[image] = dimensions;\n      done(dimensions.width + 'px');\n    });\n  }\n}\n\n/**\n * imageHeight\n * @param {String} args[0] image path\n * @param {Function} done\n */\nfunction imageHeight(args, done) {\n  var arg = args[0]\n    , image = path.join(this.imagePath, arg)\n    , dimensions = this.dimensions[image]\n    , self = this;\n  if (dimensions) {\n    done(dimensions.height + 'px');\n  } else {\n    sizeOf(image, function (err, dimensions) {\n      if (err) return console.error(err);\n      self.dimensions[image] = dimensions;\n      done(dimensions.height + 'px');\n    });\n  }\n}\n\n/**\n * inlineImage\n * @param {String} args[0] image path\n */\nfunction inlineImage(args) {\n  var arg = unquote(args)\n    , image = path.join(this.imagePath, arg)\n    , self = this;\n\n  return \"url('\" + new Datauri(image).content + \"')\";\n}\n\n/**\n * unquote\n * @param {String} args[0] anything string need unquote\n */\nfunction unquote(args) {\n  var arg = args[0];\n  return arg.replace(/^\"|\"$/g, '');\n}\n\n/**\n * variable\n * @param {String} key\n */\nfunction variable(key) {\n  var value = this.variables[key];\n  return value ? value : '$' + key;\n}\n\nmodule.exports = {\n  'image-width': imageWidth,\n  'image-height': imageHeight,\n  'image_width': imageWidth,\n  'image_height': imageHeight,\n  'inline-image': inlineImage,\n  'unquote': unquote,\n  'variable': variable\n}"]},"metadata":{},"sourceType":"script"}