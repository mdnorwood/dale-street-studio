{"ast":null,"code":"var _jsxFileName = \"/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/src/components/post/use-reducer.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  user: null,\n  searchQuery: 'Bret'\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'SET_SEARCH_QUERY':\n      return { ...state,\n        searchQuery: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setUser = user => ({\n  type: 'SET_USER',\n  payload: user\n});\n\nconst setSearchQuery = queryString => ({\n  type: 'SET_SEARCH_QUERY',\n  payload: queryString\n});\n\nconst UseReducerExample = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n  const {\n    user,\n    searchQuery\n  } = state;\n  useEffect(() => {\n    if (searchQuery.length > 0) {\n      const fetchFunc = async () => {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users?username=${searchQuery}`);\n        const resJson = await response.json();\n        dispatch(setUser(resJson[0]));\n      };\n\n      fetchFunc();\n    }\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      value: searchQuery,\n      onChange: event => dispatch(setSearchQuery(event.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No user found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseReducerExample, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n\n_c = UseReducerExample;\nexport default UseReducerExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseReducerExample\");","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/src/components/post/use-reducer.component.jsx"],"names":["React","useEffect","useReducer","INITIAL_STATE","user","searchQuery","reducer","state","action","type","payload","setUser","setSearchQuery","queryString","UseReducerExample","dispatch","length","fetchFunc","response","fetch","resJson","json","event","target","value","name","username","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,WAAW,EAAE;AAFO,CAAtB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAAzB,OAAP;;AACF,SAAK,kBAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAAhC,OAAP;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAWA,MAAMI,OAAO,GAAGP,IAAI,KAAK;AACvBK,EAAAA,IAAI,EAAE,UADiB;AAEvBC,EAAAA,OAAO,EAACN;AAFe,CAAL,CAApB;;AAKA,MAAMQ,cAAc,GAAGC,WAAW,KAAK;AACrCJ,EAAAA,IAAI,EAAE,kBAD+B;AAErCC,EAAAA,OAAO,EAAEG;AAF4B,CAAL,CAAlC;;AAKA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBb,UAAU,CAACI,OAAD,EAAUH,aAAV,CAApC;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAwBE,KAA9B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGI,WAAW,CAACW,MAAZ,GAAqB,CAAxB,EAA2B;AACzB,YAAMC,SAAS,GAAG,YAAY;AAC5B,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,uDAAsDd,WAAY,EADzC,CAA5B;AAGA,cAAMe,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAN,QAAAA,QAAQ,CAACJ,OAAO,CAACS,OAAO,CAAC,CAAD,CAAR,CAAR,CAAR;AACD,OAND;;AAQAH,MAAAA,SAAS;AACV;AACF,GAZQ,EAYN,CAACZ,WAAD,CAZM,CAAT;AAcA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAEA,WAFT;AAGE,MAAA,QAAQ,EAAEiB,KAAK,IAAIP,QAAQ,CAACH,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAH7B;AAAA;AAAA;AAAA;AAAA,YADF,EAMGpB,IAAI,gBACH;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACqB;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKrB,IAAI,CAACsB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAKtB,IAAI,CAACuB;AAAV;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,gBAOH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApCD;;GAAMb,iB;;KAAAA,iB;AAsCN,eAAeA,iBAAf","sourcesContent":["import React, { useEffect, useReducer } from 'react';\n\nconst INITIAL_STATE = {\n  user: null,\n  searchQuery: 'Bret'\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...state, user: action.payload };\n    case 'SET_SEARCH_QUERY':\n      return { ...state, searchQuery: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst setUser = user => ({\n  type: 'SET_USER',\n  payload:user\n});\n\nconst setSearchQuery = queryString => ({\n  type: 'SET_SEARCH_QUERY',\n  payload: queryString\n});\n\nconst UseReducerExample = () => {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n  const { user, searchQuery } = state;\n\n  useEffect(() => {\n    if(searchQuery.length > 0) {\n      const fetchFunc = async () => {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/users?username=${searchQuery}`\n        );\n        const resJson = await response.json();\n        dispatch(setUser(resJson[0]));\n      };\n\n      fetchFunc();\n    }\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <input\n        type='search'\n        value={searchQuery}\n        onChange={event => dispatch(setSearchQuery(event.target.value))}\n      />\n      {user ? (\n        <div>\n          <h3>{user.name}</h3>\n          <h3>{user.username}</h3>\n          <h3>{user.email}</h3>\n        </div>\n      ) : (\n        <p>No user found</p>\n      )}\n    </div>\n  );\n};\n\nexport default UseReducerExample;"]},"metadata":{},"sourceType":"module"}