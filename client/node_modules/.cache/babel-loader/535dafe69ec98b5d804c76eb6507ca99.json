{"ast":null,"code":"import _regeneratorRuntime from\"/Users/marcusnorwood/Sites/music-site/definition-music-and-mastering/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/marcusnorwood/Sites/music-site/definition-music-and-mastering/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/marcusnorwood/Sites/music-site/definition-music-and-mastering/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';import'firebase/storage';var firebaseConfig={apiKey:\"AIzaSyDbSkHxjmcvdfxDoOISMGNo6Mz68zr-v6c\",authDomain:\"definition-music-and-mastering.firebaseapp.com\",databaseURL:\"https://definition-music-and-mastering.firebaseio.com\",projectId:\"definition-music-and-mastering\",storageBucket:\"definition-music-and-mastering.appspot.com\",messagingSenderId:\"975793061103\",appId:\"1:975793061103:web:9f7c0111daab60ba186f1a\",measurementId:\"G-FMB26CKX8V\"};var reduxFirebase={userProfile:'users',useFirestoreForProfile:true,// use Firestore for profile instead of RTDB\nprofileParamsToPopulate:[{child:'role',root:'roles'}// populates user's role with matching role object from roles\n],enableLogging:'false'};firebase.initializeApp(firebaseConfig);export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt,_user,role;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=18;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_user='user',role=_user.role;_context.prev=10;_context.next=13;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt,role:role},additionalData));case 13:_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](10);console.log('error creating user',_context.t0.message);case 18:return _context.abrupt(\"return\",userRef);case 19:case\"end\":return _context.stop();}}},_callee,null,[[10,15]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var getUserCartRef=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userId){var cartsRef,snapShot,cartDocRef;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:cartsRef=firestore.collection('carts').where('userId','==',userId);_context2.next=3;return cartsRef.get();case 3:snapShot=_context2.sent;if(!snapShot.empty){_context2.next=11;break;}cartDocRef=firestore.collection('carts').doc();_context2.next=8;return cartDocRef.set({userId:userId,cartItems:[]});case 8:return _context2.abrupt(\"return\",cartDocRef);case 11:return _context2.abrupt(\"return\",snapShot.docs[0].ref);case 12:case\"end\":return _context2.stop();}}},_callee2);}));return function getUserCartRef(_x3){return _ref2.apply(this,arguments);};}();export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context3.next=5;return batch.commit();case 5:return _context3.abrupt(\"return\",_context3.sent);case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function addCollectionAndDocuments(_x4,_x5){return _ref3.apply(this,arguments);};}();export var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();var db=firebase.firestore();export{db};var storage=firebase.storage();export{storage};export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/definition-music-and-mastering/client/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","reduxFirebase","userProfile","useFirestoreForProfile","profileParamsToPopulate","child","root","enableLogging","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","role","set","console","log","message","getUserCartRef","userId","cartsRef","collection","where","empty","cartDocRef","cartItems","docs","ref","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","db","storage","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDbSkHxjmcvdfxDoOISMGNo6Mz68zr-v6c\",\n  authDomain: \"definition-music-and-mastering.firebaseapp.com\",\n  databaseURL: \"https://definition-music-and-mastering.firebaseio.com\",\n  projectId: \"definition-music-and-mastering\",\n  storageBucket: \"definition-music-and-mastering.appspot.com\",\n  messagingSenderId: \"975793061103\",\n  appId: \"1:975793061103:web:9f7c0111daab60ba186f1a\",\n  measurementId: \"G-FMB26CKX8V\"\n};\n\nconst reduxFirebase = {\n  userProfile: 'users',\n  useFirestoreForProfile: true, // use Firestore for profile instead of RTDB\n  profileParamsToPopulate: [\n    { child: 'role', root: 'roles' }, // populates user's role with matching role object from roles\n  ],\n  enableLogging: 'false'\n}\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if(!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    const { role } = 'user';\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        role,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const getUserCartRef = async userId => {\n  const cartsRef = firestore.collection('carts').where('userId', '==', userId);\n  const snapShot = await cartsRef.get();\n\n  if (snapShot.empty) {\n    const cartDocRef = firestore.collection('carts').doc();\n    await cartDocRef.set({ userId, cartItems: [] });\n    return cartDocRef;\n  } else {\n    return snapShot.docs[0].ref;\n  }\n};\n\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    }\n  });\n\n return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject)\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nvar db = firebase.firestore();\nexport { db };\n\nconst storage = firebase.storage();\nexport { storage };\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}