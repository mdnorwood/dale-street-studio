{"ast":null,"code":"var fs = require('fs'),\n    path = require('path');\n\nrequire('./extensions');\n/**\n * Get binding\n *\n * @api private\n */\n\n\nfunction getBinding() {\n  var candidates = [path.join(__dirname, '..', 'build', 'Debug', 'binding.node'), path.join(__dirname, '..', 'build', 'Release', 'binding.node'), path.join(__dirname, '..', 'vendor', process.sassBinaryName, 'binding.node')];\n  var candidate = candidates.filter(fs.existsSync).shift();\n\n  if (!candidate) {\n    throw new Error('`libsass` bindings not found. Try reinstalling `node-sass`?');\n  }\n\n  return candidate;\n}\n/**\n * Get outfile\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getOutFile(options) {\n  var file = options.file;\n  var outFile = options.outFile;\n\n  if (!outFile || typeof outFile !== 'string' || !options.data && !file) {\n    return null;\n  }\n\n  if (path.resolve(outFile) === path.normalize(outFile).replace(/(.+)([\\/|\\\\])$/, '$1')) {\n    return outFile;\n  }\n\n  return path.resolve(path.dirname(file), outFile);\n}\n/**\n * Get stats\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getStats(options) {\n  var stats = {};\n  stats.entry = options.file || 'data';\n  stats.start = Date.now();\n  return stats;\n}\n/**\n * End stats\n *\n * @param {Object} stats\n * @param {Object} sourceMap\n * @api private\n */\n\n\nfunction endStats(stats) {\n  stats.end = Date.now();\n  stats.duration = stats.end - stats.start;\n  return stats;\n}\n/**\n * Get style\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getStyle(options) {\n  var style = options.output_style || options.outputStyle;\n  var styles = {\n    nested: 0,\n    expanded: 1,\n    compact: 2,\n    compressed: 3\n  };\n  return styles[style];\n}\n/**\n * Get source map\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getSourceMap(options) {\n  var file = options.file;\n  var outFile = options.outFile;\n  var sourceMap = options.sourceMap;\n\n  if (sourceMap) {\n    if (typeof sourceMap !== 'string') {\n      sourceMap = outFile ? outFile + '.map' : '';\n    } else if (outFile) {\n      sourceMap = path.resolve(path.dirname(file), sourceMap);\n    }\n  }\n\n  return sourceMap;\n}\n/**\n * Get options\n *\n * @param {Object} options\n * @api private\n */\n\n\nfunction getOptions(options) {\n  options = options || {};\n  options.comments = options.source_comments || options.sourceComments || false;\n  options.data = options.data || null;\n  options.file = options.file || null;\n  options.imagePath = options.image_path || options.imagePath || '';\n  options.outFile = getOutFile(options);\n  options.paths = (options.include_paths || options.includePaths || []).join(path.delimiter);\n  options.precision = parseInt(options.precision) || 5;\n  options.sourceMap = getSourceMap(options);\n  options.style = getStyle(options) || 0;\n\n  if (options.imagePath && typeof options.imagePath !== 'string') {\n    throw new Error('`imagePath` needs to be a string');\n  }\n\n  var error = options.error;\n  var success = options.success;\n\n  options.error = function (err, code) {\n    err = JSON.parse(err);\n    err.code = code;\n\n    if (error) {\n      error(err);\n    }\n  };\n\n  options.success = function () {\n    var result = options.result;\n    var stats = endStats(result.stats);\n\n    if (success) {\n      success({\n        css: result.css,\n        map: result.map,\n        stats: stats\n      });\n    }\n  };\n\n  delete options.image_path;\n  delete options.include_paths;\n  delete options.includePaths;\n  delete options.source_comments;\n  delete options.sourceComments;\n  options.result = {\n    stats: getStats(options)\n  };\n  return options;\n}\n/**\n * Require binding\n */\n\n\nvar binding = require(getBinding());\n/**\n * Render\n *\n * @param {Object} options\n * @api public\n */\n\n\nmodule.exports.render = function (options) {\n  options = getOptions(options);\n  var importer = options.importer;\n\n  if (importer) {\n    options.importer = function (file, prev, key) {\n      function done(data) {\n        console.log(data); // ugly hack\n\n        binding.importedCallback({\n          index: key,\n          objectLiteral: data\n        });\n      }\n\n      var result = importer(file, prev, done);\n\n      if (result) {\n        done(result);\n      }\n    };\n  }\n\n  options.data ? binding.render(options) : binding.renderFile(options);\n};\n/**\n * Render sync\n *\n * @param {Object} options\n * @api public\n */\n\n\nmodule.exports.renderSync = function (options) {\n  options = getOptions(options);\n  var importer = options.importer;\n\n  if (importer) {\n    options.importer = function (file, prev) {\n      return {\n        objectLiteral: importer(file, prev)\n      };\n    };\n  }\n\n  var status = options.data ? binding.renderSync(options) : binding.renderFileSync(options);\n  var result = options.result;\n\n  if (status) {\n    result.stats = endStats(result.stats);\n    return result;\n  }\n};\n/**\n * API Info\n *\n * @api public\n */\n\n\nmodule.exports.info = function () {\n  var package = require('../package.json');\n\n  return ['node-sass version: ' + package.version, 'libsass version: ' + package.libsass].join('\\n');\n};","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/node-sass/lib/index.js"],"names":["fs","require","path","getBinding","candidates","join","__dirname","process","sassBinaryName","candidate","filter","existsSync","shift","Error","getOutFile","options","file","outFile","data","resolve","normalize","replace","dirname","getStats","stats","entry","start","Date","now","endStats","end","duration","getStyle","style","output_style","outputStyle","styles","nested","expanded","compact","compressed","getSourceMap","sourceMap","getOptions","comments","source_comments","sourceComments","imagePath","image_path","paths","include_paths","includePaths","delimiter","precision","parseInt","error","success","err","code","JSON","parse","result","css","map","binding","module","exports","render","importer","prev","key","done","console","log","importedCallback","index","objectLiteral","renderFile","renderSync","status","renderFileSync","info","package","version","libsass"],"mappings":"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","sourcesContent":["var fs = require('fs'),\n    path = require('path');\n\nrequire('./extensions');\n\n/**\n * Get binding\n *\n * @api private\n */\n\nfunction getBinding() {\n  var candidates = [\n    path.join(__dirname, '..', 'build', 'Debug', 'binding.node'),\n    path.join(__dirname, '..', 'build', 'Release', 'binding.node'),\n    path.join(__dirname, '..', 'vendor', process.sassBinaryName, 'binding.node')\n  ];\n\n  var candidate = candidates.filter(fs.existsSync).shift();\n\n  if (!candidate) {\n    throw new Error('`libsass` bindings not found. Try reinstalling `node-sass`?');\n  }\n\n  return candidate;\n}\n\n/**\n * Get outfile\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getOutFile(options) {\n  var file = options.file;\n  var outFile = options.outFile;\n\n  if (!outFile || typeof outFile !== 'string' || (!options.data && !file)) {\n    return null;\n  }\n\n  if (path.resolve(outFile) === path.normalize(outFile).replace(/(.+)([\\/|\\\\])$/, '$1')) {\n    return outFile;\n  }\n\n  return path.resolve(path.dirname(file), outFile);\n}\n\n/**\n * Get stats\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getStats(options) {\n  var stats = {};\n\n  stats.entry = options.file || 'data';\n  stats.start = Date.now();\n\n  return stats;\n}\n\n/**\n * End stats\n *\n * @param {Object} stats\n * @param {Object} sourceMap\n * @api private\n */\n\nfunction endStats(stats) {\n  stats.end = Date.now();\n  stats.duration = stats.end - stats.start;\n\n  return stats;\n}\n\n/**\n * Get style\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getStyle(options) {\n  var style = options.output_style || options.outputStyle;\n  var styles = {\n    nested: 0,\n    expanded: 1,\n    compact: 2,\n    compressed: 3\n  };\n\n  return styles[style];\n}\n\n/**\n * Get source map\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getSourceMap(options) {\n  var file = options.file;\n  var outFile = options.outFile;\n  var sourceMap = options.sourceMap;\n\n  if (sourceMap) {\n    if (typeof sourceMap !== 'string') {\n      sourceMap = outFile ? outFile + '.map' : '';\n    } else if (outFile) {\n      sourceMap = path.resolve(path.dirname(file), sourceMap);\n    }\n  }\n\n  return sourceMap;\n}\n\n/**\n * Get options\n *\n * @param {Object} options\n * @api private\n */\n\nfunction getOptions(options) {\n  options = options || {};\n  options.comments = options.source_comments || options.sourceComments || false;\n  options.data = options.data || null;\n  options.file = options.file || null;\n  options.imagePath = options.image_path || options.imagePath || '';\n  options.outFile = getOutFile(options);\n  options.paths = (options.include_paths || options.includePaths || []).join(path.delimiter);\n  options.precision = parseInt(options.precision) || 5;\n  options.sourceMap = getSourceMap(options);\n  options.style = getStyle(options) || 0;\n\n  if (options.imagePath && typeof options.imagePath !== 'string') {\n    throw new Error('`imagePath` needs to be a string');\n  }\n\n  var error = options.error;\n  var success = options.success;\n\n  options.error = function(err, code) {\n    err = JSON.parse(err);\n    err.code = code;\n\n    if (error) {\n      error(err);\n    }\n  };\n\n  options.success = function() {\n    var result = options.result;\n    var stats = endStats(result.stats);\n\n    if (success) {\n      success({\n        css: result.css,\n        map: result.map,\n        stats: stats\n      });\n    }\n  };\n\n  delete options.image_path;\n  delete options.include_paths;\n  delete options.includePaths;\n  delete options.source_comments;\n  delete options.sourceComments;\n\n  options.result = {\n    stats: getStats(options)\n  };\n\n  return options;\n}\n\n/**\n * Require binding\n */\n\nvar binding = require(getBinding());\n\n/**\n * Render\n *\n * @param {Object} options\n * @api public\n */\n\nmodule.exports.render = function(options) {\n  options = getOptions(options);\n\n  var importer = options.importer;\n\n  if (importer) {\n    options.importer = function(file, prev, key) {\n      function done(data) {\n        console.log(data); // ugly hack\n        binding.importedCallback({\n          index: key,\n          objectLiteral: data\n        });\n      }\n\n      var result = importer(file, prev, done);\n\n      if (result) {\n        done(result);\n      }\n    };\n  }\n\n  options.data ? binding.render(options) : binding.renderFile(options);\n};\n\n/**\n * Render sync\n *\n * @param {Object} options\n * @api public\n */\n\nmodule.exports.renderSync = function(options) {\n  options = getOptions(options);\n\n  var importer = options.importer;\n\n  if (importer) {\n    options.importer = function(file, prev) {\n      return { objectLiteral: importer(file, prev) };\n    };\n  }\n\n  var status = options.data ? binding.renderSync(options) : binding.renderFileSync(options);\n  var result = options.result;\n\n  if(status) {\n    result.stats = endStats(result.stats);\n\n    return result;\n  }\n};\n\n/**\n * API Info\n *\n * @api public\n */\n\nmodule.exports.info = function() {\n  var package = require('../package.json');\n\n  return [\n           'node-sass version: ' + package.version,\n           'libsass version: ' + package.libsass\n         ].join('\\n');\n};\n"]},"metadata":{},"sourceType":"script"}