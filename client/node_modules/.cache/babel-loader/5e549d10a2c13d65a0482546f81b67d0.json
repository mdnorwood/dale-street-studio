{"ast":null,"code":"'use strict';\n\nvar glob = require('glob'),\n    spritesmith = require('spritesmith'),\n    crypto = require('crypto'),\n    path = require('path'),\n    fs = require('fs');\n/**\n * sprite\n * @param {Object} opts\n * @param {Function} cb\n */\n\n\nfunction sprite(opts, cb) {\n  var images = opts.images,\n      imagePath = opts.imagePath,\n      dist = opts.dist;\n  glob(path.join(imagePath, images), function (err, files) {\n    spritesmith({\n      src: files,\n      algorithm: 'binary-tree',\n      engine: 'pngsmith'\n    }, function (err, result) {\n      var md5 = crypto.createHash('md5'),\n          name = [];\n      md5.update(result.image, 'binary');\n      images.split('/').forEach(function (path) {\n        if (!~path.indexOf('*')) {\n          name.push(path);\n        }\n      });\n      name.push(md5.digest('hex').slice(0, 11));\n      fs.writeFile(path.join(dist, name.join('-') + '.png'), result.image, 'binary', function (err) {\n        cb(name, result.coordinates);\n      });\n    });\n  });\n}\n\nmodule.exports = sprite;","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/compass-node/lib/sprite.js"],"names":["glob","require","spritesmith","crypto","path","fs","sprite","opts","cb","images","imagePath","dist","join","err","files","src","algorithm","engine","result","md5","createHash","name","update","image","split","forEach","indexOf","push","digest","slice","writeFile","coordinates","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CADzB;AAAA,IAEIE,MAAM,GAAGF,OAAO,CAAC,QAAD,CAFpB;AAAA,IAGIG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAHlB;AAAA,IAIII,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAJhB;AAMA;AACA;AACA;AACA;AACA;;;AACA,SAASK,MAAT,CAAgBC,IAAhB,EAAsBC,EAAtB,EAA0B;AACxB,MAAIC,MAAM,GAAGF,IAAI,CAACE,MAAlB;AAAA,MACIC,SAAS,GAAGH,IAAI,CAACG,SADrB;AAAA,MAEIC,IAAI,GAAGJ,IAAI,CAACI,IAFhB;AAGAX,EAAAA,IAAI,CAACI,IAAI,CAACQ,IAAL,CAAUF,SAAV,EAAqBD,MAArB,CAAD,EAA+B,UAAUI,GAAV,EAAeC,KAAf,EAAsB;AACvDZ,IAAAA,WAAW,CAAC;AACVa,MAAAA,GAAG,EAAED,KADK;AAEVE,MAAAA,SAAS,EAAE,aAFD;AAGVC,MAAAA,MAAM,EAAE;AAHE,KAAD,EAIR,UAAUJ,GAAV,EAAeK,MAAf,EAAuB;AACxB,UAAIC,GAAG,GAAGhB,MAAM,CAACiB,UAAP,CAAkB,KAAlB,CAAV;AAAA,UAAoCC,IAAI,GAAG,EAA3C;AACAF,MAAAA,GAAG,CAACG,MAAJ,CAAWJ,MAAM,CAACK,KAAlB,EAAyB,QAAzB;AACAd,MAAAA,MAAM,CAACe,KAAP,CAAa,GAAb,EAAkBC,OAAlB,CAA0B,UAAUrB,IAAV,EAAgB;AACxC,YAAI,CAAE,CAACA,IAAI,CAACsB,OAAL,CAAa,GAAb,CAAP,EAA2B;AACzBL,UAAAA,IAAI,CAACM,IAAL,CAAUvB,IAAV;AACD;AACF,OAJD;AAKAiB,MAAAA,IAAI,CAACM,IAAL,CAAUR,GAAG,CAACS,MAAJ,CAAW,KAAX,EAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,EAA3B,CAAV;AACAxB,MAAAA,EAAE,CAACyB,SAAH,CAAa1B,IAAI,CAACQ,IAAL,CAAUD,IAAV,EAAgBU,IAAI,CAACT,IAAL,CAAU,GAAV,IAAiB,MAAjC,CAAb,EAAuDM,MAAM,CAACK,KAA9D,EAAqE,QAArE,EAA+E,UAAUV,GAAV,EAAe;AAC5FL,QAAAA,EAAE,CAACa,IAAD,EAAOH,MAAM,CAACa,WAAd,CAAF;AACD,OAFD;AAGD,KAhBU,CAAX;AAiBD,GAlBG,CAAJ;AAmBD;;AAEDC,MAAM,CAACC,OAAP,GAAiB3B,MAAjB","sourcesContent":["'use strict';\n\nvar glob = require('glob')\n  , spritesmith = require('spritesmith')\n  , crypto = require('crypto')\n  , path = require('path')\n  , fs = require('fs');\n\n/**\n * sprite\n * @param {Object} opts\n * @param {Function} cb\n */\nfunction sprite(opts, cb) {\n  var images = opts.images\n    , imagePath = opts.imagePath\n    , dist = opts.dist;\n  glob(path.join(imagePath, images), function (err, files) {\n    spritesmith({\n      src: files,\n      algorithm: 'binary-tree',\n      engine: 'pngsmith'\n    }, function (err, result) {\n      var md5 = crypto.createHash('md5'), name = [];\n      md5.update(result.image, 'binary');\n      images.split('/').forEach(function (path) {\n        if (!(~path.indexOf('*'))) {\n          name.push(path);\n        }\n      });\n      name.push(md5.digest('hex').slice(0, 11));\n      fs.writeFile(path.join(dist, name.join('-') + '.png'), result.image, 'binary', function (err) {\n        cb(name, result.coordinates);\n      });\n    });\n  });\n}\n\nmodule.exports = sprite;"]},"metadata":{},"sourceType":"script"}