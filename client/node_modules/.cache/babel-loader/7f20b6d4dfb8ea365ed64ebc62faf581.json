{"ast":null,"code":"var sass = require('node-sass'),\n    fs = require('fs'),\n    path = require('path'),\n    merge = require('./lib/merge'),\n    Scss = require('./lib/scss');\n\nfunction _fixPath(path) {\n  if (!/\\/$/.test(path)) {\n    return path + '/';\n  } else {\n    return path;\n  }\n}\n/**\n * render(file, opts)\n * @param {String} file\n * @param {Object} opts\n *    @param {String} [opts.data]\n *    @param {Function} [opts.success]\n *    @param {Function} [opts.error]\n */\n\n\nfunction render(file, opts) {\n  opts = opts || {};\n  var data = opts.data || fs.readFileSync(file, {\n    encoding: 'utf8'\n  }),\n      includePaths = [path.dirname(file)],\n      css = opts.css || 'css',\n      font = opts.font || 'font',\n      imagePath = opts.imagePath || '/images',\n      image = opts.httpImagesPath || '/images',\n      spriteDist = opts.spriteDist || '/images',\n      param = {\n    includePaths: [path.join(__dirname, 'frameworks/stylesheets')]\n  };\n  new Scss(data, {\n    includePaths: opts.includePaths ? includePaths.concat(opts.includePaths) : includePaths,\n    spriteDist: spriteDist,\n    imagePath: imagePath\n  }).done(function (data) {\n    param.data = ['$compass-font-path : \"' + _fixPath(font) + '\";', '$compass-stylesheet-path : \"' + _fixPath(css) + '\";', '$compass-image-path : \"' + _fixPath(image) + '\";', '@import \"compass-prefix\";', data].join('\\n');\n    sass.render(merge(param, opts, ['success', 'error', 'imagePath', 'outputStyle', 'precision', 'sourceComments', 'sourceMap', 'stats']));\n  });\n}\n\nmodule.exports = {\n  render: render,\n  version: require('./package').version\n};","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/compass-node/index.js"],"names":["sass","require","fs","path","merge","Scss","_fixPath","test","render","file","opts","data","readFileSync","encoding","includePaths","dirname","css","font","imagePath","image","httpImagesPath","spriteDist","param","join","__dirname","concat","done","module","exports","version"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;AAAA,IACIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CADhB;AAAA,IAEIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAFlB;AAAA,IAGIG,KAAK,GAAGH,OAAO,CAAC,aAAD,CAHnB;AAAA,IAIII,IAAI,GAAGJ,OAAO,CAAC,YAAD,CAJlB;;AAMA,SAASK,QAAT,CAAkBH,IAAlB,EAAwB;AACtB,MAAI,CAAC,MAAMI,IAAN,CAAWJ,IAAX,CAAL,EAAuB;AACrB,WAAOA,IAAI,GAAG,GAAd;AACD,GAFD,MAEO;AACL,WAAOA,IAAP;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AAC1BA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,IAAaT,EAAE,CAACU,YAAH,CAAgBH,IAAhB,EAAsB;AAAEI,IAAAA,QAAQ,EAAE;AAAZ,GAAtB,CAAxB;AAAA,MACIC,YAAY,GAAG,CAACX,IAAI,CAACY,OAAL,CAAaN,IAAb,CAAD,CADnB;AAAA,MAEIO,GAAG,GAAGN,IAAI,CAACM,GAAL,IAAY,KAFtB;AAAA,MAGIC,IAAI,GAAGP,IAAI,CAACO,IAAL,IAAa,MAHxB;AAAA,MAIIC,SAAS,GAAGR,IAAI,CAACQ,SAAL,IAAkB,SAJlC;AAAA,MAKIC,KAAK,GAAGT,IAAI,CAACU,cAAL,IAAuB,SALnC;AAAA,MAMIC,UAAU,GAAGX,IAAI,CAACW,UAAL,IAAmB,SANpC;AAAA,MAOIC,KAAK,GAAG;AACRR,IAAAA,YAAY,EAAE,CAACX,IAAI,CAACoB,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CAAD;AADN,GAPZ;AAWA,MAAInB,IAAJ,CAASM,IAAT,EAAe;AACbG,IAAAA,YAAY,EAAEJ,IAAI,CAACI,YAAL,GACZA,YAAY,CAACW,MAAb,CAAoBf,IAAI,CAACI,YAAzB,CADY,GAEVA,YAHS;AAIbO,IAAAA,UAAU,EAAEA,UAJC;AAKbH,IAAAA,SAAS,EAAEA;AALE,GAAf,EAMGQ,IANH,CAMQ,UAAUf,IAAV,EAAgB;AACtBW,IAAAA,KAAK,CAACX,IAAN,GAAa,CACX,2BAA2BL,QAAQ,CAACW,IAAD,CAAnC,GAA4C,IADjC,EAEX,iCAAiCX,QAAQ,CAACU,GAAD,CAAzC,GAAiD,IAFtC,EAGX,4BAA4BV,QAAQ,CAACa,KAAD,CAApC,GAA8C,IAHnC,EAIX,2BAJW,EAKXR,IALW,EAMXY,IANW,CAMN,IANM,CAAb;AAQAvB,IAAAA,IAAI,CAACQ,MAAL,CAAYJ,KAAK,CAACkB,KAAD,EAAQZ,IAAR,EAAc,CAC7B,SAD6B,EAE7B,OAF6B,EAG7B,WAH6B,EAI7B,aAJ6B,EAK7B,WAL6B,EAM7B,gBAN6B,EAO7B,WAP6B,EAQ7B,OAR6B,CAAd,CAAjB;AAUD,GAzBD;AA0BD;;AAEDiB,MAAM,CAACC,OAAP,GAAiB;AACfpB,EAAAA,MAAM,EAAEA,MADO;AAEfqB,EAAAA,OAAO,EAAE5B,OAAO,CAAC,WAAD,CAAP,CAAqB4B;AAFf,CAAjB","sourcesContent":["var sass = require('node-sass')\n  , fs = require('fs')\n  , path = require('path')\n  , merge = require('./lib/merge')\n  , Scss = require('./lib/scss');\n\nfunction _fixPath(path) {\n  if (!/\\/$/.test(path)) {\n    return path + '/';\n  } else {\n    return path;\n  }\n}\n\n/**\n * render(file, opts)\n * @param {String} file\n * @param {Object} opts\n *    @param {String} [opts.data]\n *    @param {Function} [opts.success]\n *    @param {Function} [opts.error]\n */\nfunction render(file, opts) {\n  opts = opts || {};\n  var data = opts.data || fs.readFileSync(file, { encoding: 'utf8' })\n    , includePaths = [path.dirname(file)]\n    , css = opts.css || 'css'\n    , font = opts.font || 'font'\n    , imagePath = opts.imagePath || '/images'\n    , image = opts.httpImagesPath || '/images'\n    , spriteDist = opts.spriteDist || '/images'\n    , param = {\n      includePaths: [path.join(__dirname, 'frameworks/stylesheets')]\n    };\n\n  new Scss(data, {\n    includePaths: opts.includePaths ? \n      includePaths.concat(opts.includePaths) : \n        includePaths,\n    spriteDist: spriteDist,\n    imagePath: imagePath\n  }).done(function (data) {\n    param.data = [\n      '$compass-font-path : \"' + _fixPath(font) + '\";',\n      '$compass-stylesheet-path : \"' + _fixPath(css) + '\";',\n      '$compass-image-path : \"' + _fixPath(image) + '\";',\n      '@import \"compass-prefix\";',\n      data\n    ].join('\\n'); \n\n    sass.render(merge(param, opts, [\n      'success',\n      'error',\n      'imagePath',\n      'outputStyle',\n      'precision',\n      'sourceComments',\n      'sourceMap',\n      'stats'\n    ]));\n  });\n}\n\nmodule.exports = {\n  render: render,\n  version: require('./package').version\n};"]},"metadata":{},"sourceType":"script"}