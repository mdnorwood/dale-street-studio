{"ast":null,"code":"exports.alphasort = alphasort;\nexports.alphasorti = alphasorti;\nexports.isAbsolute = process.platform === \"win32\" ? absWin : absUnix;\nexports.setopts = setopts;\nexports.ownProp = ownProp;\nexports.makeAbs = makeAbs;\nexports.finish = finish;\nexports.mark = mark;\nexports.isIgnored = isIgnored;\nexports.childrenIgnored = childrenIgnored;\n\nfunction ownProp(obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field);\n}\n\nvar path = require(\"path\");\n\nvar minimatch = require(\"minimatch\");\n\nvar Minimatch = minimatch.Minimatch;\n\nfunction absWin(p) {\n  if (absUnix(p)) return true; // pull off the device/UNC bit from a windows path.\n  // from node's lib/path.js\n\n  var splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n  var result = splitDeviceRe.exec(p);\n  var device = result[1] || '';\n  var isUnc = device && device.charAt(1) !== ':';\n  var isAbsolute = !!result[2] || isUnc; // UNC paths are always absolute\n\n  return isAbsolute;\n}\n\nfunction absUnix(p) {\n  return p.charAt(0) === \"/\" || p === \"\";\n}\n\nfunction alphasorti(a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase());\n}\n\nfunction alphasort(a, b) {\n  return a.localeCompare(b);\n}\n\nfunction setupIgnores(self, options) {\n  self.ignore = options.ignore || [];\n  if (!Array.isArray(self.ignore)) self.ignore = [self.ignore];\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap);\n  }\n}\n\nfunction ignoreMap(pattern) {\n  var gmatcher = null;\n\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '');\n    gmatcher = new Minimatch(gpattern, {\n      nonegate: true\n    });\n  }\n\n  return {\n    matcher: new Minimatch(pattern, {\n      nonegate: true\n    }),\n    gmatcher: gmatcher\n  };\n}\n\nfunction setopts(self, pattern, options) {\n  if (!options) options = {}; // base-matching: just use globstar for that.\n\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\");\n    }\n\n    pattern = \"**/\" + pattern;\n  }\n\n  self.pattern = pattern;\n  self.strict = options.strict !== false;\n  self.realpath = !!options.realpath;\n  self.realpathCache = options.realpathCache || Object.create(null);\n  self.follow = !!options.follow;\n  self.dot = !!options.dot;\n  self.mark = !!options.mark;\n  self.nodir = !!options.nodir;\n  if (self.nodir) self.mark = true;\n  self.sync = !!options.sync;\n  self.nounique = !!options.nounique;\n  self.nonull = !!options.nonull;\n  self.nosort = !!options.nosort;\n  self.nocase = !!options.nocase;\n  self.stat = !!options.stat;\n  self.noprocess = !!options.noprocess;\n  self.maxLength = options.maxLength || Infinity;\n  self.cache = options.cache || Object.create(null);\n  self.statCache = options.statCache || Object.create(null);\n  self.symlinks = options.symlinks || Object.create(null);\n  setupIgnores(self, options);\n  self.changedCwd = false;\n  var cwd = process.cwd();\n  if (!ownProp(options, \"cwd\")) self.cwd = cwd;else {\n    self.cwd = options.cwd;\n    self.changedCwd = path.resolve(options.cwd) !== cwd;\n  }\n  self.root = options.root || path.resolve(self.cwd, \"/\");\n  self.root = path.resolve(self.root);\n  if (process.platform === \"win32\") self.root = self.root.replace(/\\\\/g, \"/\");\n  self.nomount = !!options.nomount;\n  self.minimatch = new Minimatch(pattern, options);\n  self.options = self.minimatch.options;\n}\n\nfunction finish(self) {\n  var nou = self.nounique;\n  var all = nou ? [] : Object.create(null);\n\n  for (var i = 0, l = self.matches.length; i < l; i++) {\n    var matches = self.matches[i];\n\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i];\n        if (nou) all.push(literal);else all[literal] = true;\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches);\n      if (nou) all.push.apply(all, m);else m.forEach(function (m) {\n        all[m] = true;\n      });\n    }\n  }\n\n  if (!nou) all = Object.keys(all);\n  if (!self.nosort) all = all.sort(self.nocase ? alphasorti : alphasort); // at *some* point we statted all of these\n\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i]);\n    }\n\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        return !/\\/$/.test(e);\n      });\n    }\n  }\n\n  if (self.ignore.length) all = all.filter(function (m) {\n    return !isIgnored(self, m);\n  });\n  self.found = all;\n}\n\nfunction mark(self, p) {\n  var abs = makeAbs(self, p);\n  var c = self.cache[abs];\n  var m = p;\n\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c);\n    var slash = p.slice(-1) === '/';\n    if (isDir && !slash) m += '/';else if (!isDir && slash) m = m.slice(0, -1);\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m);\n      self.statCache[mabs] = self.statCache[abs];\n      self.cache[mabs] = self.cache[abs];\n    }\n  }\n\n  return m;\n} // lotta situps...\n\n\nfunction makeAbs(self, f) {\n  var abs = f;\n\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f);\n  } else if (exports.isAbsolute(f)) {\n    abs = f;\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f);\n  } else if (self.realpath) {\n    abs = path.resolve(f);\n  }\n\n  return abs;\n} // Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\n\n\nfunction isIgnored(self, path) {\n  if (!self.ignore.length) return false;\n  return self.ignore.some(function (item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path));\n  });\n}\n\nfunction childrenIgnored(self, path) {\n  if (!self.ignore.length) return false;\n  return self.ignore.some(function (item) {\n    return !!(item.gmatcher && item.gmatcher.match(path));\n  });\n}","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/compass-node/node_modules/glob/common.js"],"names":["exports","alphasort","alphasorti","isAbsolute","process","platform","absWin","absUnix","setopts","ownProp","makeAbs","finish","mark","isIgnored","childrenIgnored","obj","field","Object","prototype","hasOwnProperty","call","path","require","minimatch","Minimatch","p","splitDeviceRe","result","exec","device","isUnc","charAt","a","b","toLowerCase","localeCompare","setupIgnores","self","options","ignore","Array","isArray","length","map","ignoreMap","pattern","gmatcher","slice","gpattern","replace","nonegate","matcher","matchBase","indexOf","noglobstar","Error","strict","realpath","realpathCache","create","follow","dot","nodir","sync","nounique","nonull","nosort","nocase","stat","noprocess","maxLength","Infinity","cache","statCache","symlinks","changedCwd","cwd","resolve","root","nomount","nou","all","i","l","matches","keys","literal","globSet","push","m","apply","forEach","sort","_mark","filter","e","test","found","abs","c","isDir","slash","mabs","f","join","some","item","match"],"mappings":"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","sourcesContent":["exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.isAbsolute = process.platform === \"win32\" ? absWin : absUnix\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar Minimatch = minimatch.Minimatch\n\nfunction absWin (p) {\n  if (absUnix(p)) return true\n  // pull off the device/UNC bit from a windows path.\n  // from node's lib/path.js\n  var splitDeviceRe =\n      /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/\n  var result = splitDeviceRe.exec(p)\n  var device = result[1] || ''\n  var isUnc = device && device.charAt(1) !== ':'\n  var isAbsolute = !!result[2] || isUnc // UNC paths are always absolute\n\n  return isAbsolute\n}\n\nfunction absUnix (p) {\n  return p.charAt(0) === \"/\" || p === \"\"\n}\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { nonegate: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { nonegate: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = options.cwd\n    self.changedCwd = path.resolve(options.cwd) !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  self.nomount = !!options.nomount\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        return !(/\\/$/.test(e))\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (exports.isAbsolute(f)) {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else if (self.realpath) {\n    abs = path.resolve(f)\n  }\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n"]},"metadata":{},"sourceType":"script"}