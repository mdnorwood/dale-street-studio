{"ast":null,"code":"var _jsxFileName = \"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/src/components/music-player/music-player.component.jsx\";\nimport Switch from 'rc-switch';\nimport React, { useEffect } from 'react';\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\nimport 'react-jinke-music-player/assets/index.css';\nimport { MusicPlayerButtonList } from './music-player.styles';\nimport CustomButton from './../custom-button/custom-button.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet topPosition = null;\nlet leftPosition = null;\n\nconst handleResize = () => {\n  if (window.innerWidth < 800) {\n    topPosition = 10;\n    leftPosition = 300;\n  } else {\n    topPosition = 30;\n    leftPosition = 600;\n  }\n};\n\nconst audioList1 = [{\n  name: 'Slow It Down - Hybrid Master',\n  singer: 'M.D. Norwood',\n  cover: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FMDNorwood.jpeg?alt=media&token=3846b743-e39f-4fd4-8169-8feac4d26ff2',\n  musicSrc: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSlow-It-Down-Analog-Master.wav?alt=media&token=68be23f4-78f0-4e0f-9ecc-71bd45cca3ad' // support async fetch music src. eg.\n  // musicSrc: async () => {\n  //   return await fetch('/api')\n  // },\n\n}, {\n  name: 'Slow It Down - Original Mix',\n  singer: 'M.D. Norwood',\n  cover: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FMDNorwood.jpeg?alt=media&token=3846b743-e39f-4fd4-8169-8feac4d26ff2',\n  musicSrc: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSlow-it-Down-Original-Mix.wav?alt=media&token=acb47746-c56d-4ad4-b1f5-eae90f85b4b5'\n}, {\n  name: 'Slow It Down - Premix Demo',\n  singer: 'M.D. Norwood',\n  cover: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FMDNorwood.jpeg?alt=media&token=3846b743-e39f-4fd4-8169-8feac4d26ff2',\n  musicSrc: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSlow-it-down-Original-Demo.wav?alt=media&token=a4199b91-5c9f-4b33-bd81-da8492d39272'\n}];\nconst audioList2 = [{\n  name: 'The Low Mids',\n  singer: 'Moonlight - Hybrid Master',\n  cover: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FLow-Mids-Moonlight.png?alt=media&token=8f07993d-37b3-467a-82bd-989e15cea7d2',\n  musicSrc: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FLow-Mids-feat-SteelyDanimal-Moonlight-Master.wav?alt=media&token=2b6e5a8c-99a7-4396-a574-861b8850cdd3 '\n}, {\n  name: 'the Low Mids',\n  singer: 'Moonlight - Original Mix',\n  cover: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FLow-Mids-Moonlight.png?alt=media&token=8f07993d-37b3-467a-82bd-989e15cea7d2',\n  musicSrc: () => {\n    return Promise.resolve('https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2Fthe-Low-Mids-feat-SteelyDanimal-Moonlight-Original-Mix.wav?alt=media&token=929f8a8a-b5f8-4c07-9db2-f0472e4f43e0');\n  }\n}];\nconst audioList3 = [{\n  name: 'Small Wonders',\n  singer: 'The Jam - Master',\n  cover: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FSWs.jpeg?alt=media&token=2922d128-b04f-49ea-ab0e-bf3cc6ea873d',\n  musicSrc: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSmall-Wonders-The-Jam-MASTER.wav?alt=media&token=28fc0158-2f0f-4149-9928-9915d2c22e2e'\n}, {\n  name: 'Small Wonders',\n  singer: 'The Jam - Original Mix',\n  cover: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FSWs.jpeg?alt=media&token=2922d128-b04f-49ea-ab0e-bf3cc6ea873d',\n  musicSrc: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSmall-Wonders-The-Jam-ORIGINAL-MIX.wav?alt=media&token=10cfdfe4-345b-4d4d-80c5-aab2965a6f98'\n}];\nconst audioList4 = [{\n  name: 'S.T.E.V.E.',\n  singer: 'Bright Sized Life - Master',\n  cover: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2Fjazz.png?alt=media&token=ca292504-027e-4920-b34a-6bf694d30a62',\n  musicSrc: 'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FBright-Sized-Life-Jazz-Analog-Master.wav?alt=media&token=e19c975a-8f38-4235-a389-a8ac5b710465'\n}];\nconst options = {\n  // audio lists model\n  audioLists: audioList1,\n  // default play index of the audio player  [type `number` default `0`]\n  defaultPlayIndex: 0,\n  // if you want dynamic change current play audio you can change it [type `number` default `0`]\n  // playIndex: 0,\n  // color of the music player theme    [ type: 'light' | 'dark' | 'auto'  default `dark` ]\n  theme: 'auto',\n  // Specifies movement boundaries. Accepted values:\n  // - `parent` restricts movement within the node's offsetParent\n  //    (nearest node with position relative or absolute), or\n  // - a selector, restricts movement within the targeted node\n  // - An object with `left, top, right, and bottom` properties.\n  //   These indicate how far in each direction the draggable\n  //   can be moved.\n  // Ref: https://github.com/STRML/react-draggable#draggable-api\n  bounds: 'body',\n\n  /**\n   * Don't interrupt current playing state when audio list updated\n   * audioLists eg. (A) is current playing...\n   * [A,B] => [A,C,B]\n   * [A,B] => [A,B,C]\n   *\n   * if (A) not in updated audio lists\n   * [A,B] => [C]\n   * (C) is playing\n   */\n  // [type `boolean`, default `false`]\n  quietUpdate: false,\n  // Replace a new playlist with the first loaded playlist\n  // instead of adding it at the end of it.\n  // [type `boolean`, default `false`]\n  clearPriorAudioLists: false,\n  // Play your new play list right after your new play list is loaded turn false.\n  // [type `boolean`, default `false`]\n  autoPlayInitLoadPlayList: false,\n  // Whether to load audio immediately after the page loads.  [type `Boolean | String`, default `false`]\n  // \"auto|metadata|none\" \"true| false\"\n  preload: false,\n  // Whether the player's background displays frosted glass effect  [type `Boolean`, default `false`]\n  glassBg: true,\n  // The next time you access the player, do you keep the last state  [type `Boolean` default `false`]\n  remember: true,\n  // The Audio Can be deleted  [type `Boolean`, default `true`]\n  remove: true,\n  // audio controller initial position    [ type `Object` default '{top:0,left:0}' ]\n  defaultPosition: {\n    left: leftPosition,\n    top: topPosition\n  },\n  // if you want dynamic change current play mode you can change it\n  // [type`order | orderLoop | singleLoop | shufflePlay`, default `order`]\n  // playMode: 'order',\n  defaultPlayMode: 'order',\n  // audio mode        mini | full          [type `String`  default `mini`]\n  mode: 'mini',\n\n  /**\n   * [ type `Boolean` default 'false' ]\n   * The default audioPlay handle function will be played again after each pause, If you only want to trigger it once, you can set 'true'\n   */\n  once: false,\n  // Whether the audio is played after loading is completed. [type `Boolean` default 'true']\n  autoPlay: false,\n  // Whether you can switch between two modes, full => mini  or mini => full   [type 'Boolean' default 'true']\n  toggleMode: true,\n  // audio cover is show of the \"mini\" mode [type `Boolean` default 'true']\n  showMiniModeCover: true,\n  // audio playing progress is show of the \"mini\"  mode\n  showMiniProcessBar: false,\n  // audio controller is can be drag of the \"mini\" mode     [type `Boolean` default `true`]\n  drag: true,\n  // drag the audio progress bar [type `Boolean` default `true`]\n  seeked: true,\n  // Display chrome media session.  [type `Boolean` default `false`]\n  showMediaSession: true,\n  // Displays the audio load progress bar.  [type `Boolean` default `true`]\n  showProgressLoadBar: true,\n  // play button display of the audio player panel   [type `Boolean` default `true`]\n  showPlay: true,\n  // reload button display of the audio player panel   [type `Boolean` default `true`]\n  showReload: true,\n  // download button display of the audio player panel   [type `Boolean` default `true`]\n  showDownload: false,\n  // loop button display of the audio player panel   [type `Boolean` default `true`]\n  showPlayMode: true,\n  // theme toggle switch  display of the audio player panel   [type `Boolean` default `true`]\n  showThemeSwitch: true,\n  // lyric display of the audio player panel   [type `Boolean` default `false`]\n  showLyric: false,\n  // destroy player button display  [type `Boolean` default `false`]\n  showDestroy: false,\n  // Extensible custom content       [type 'Array' default '-' ]\n  extendsContent: null,\n  // default volume of the audio player [type `Number` default `1` range `0-1`]\n  defaultVolume: 1,\n  // playModeText show time [type `Number(ms)` default `700`]\n  playModeShowTime: 600,\n  // Whether to try playing the next audio when the current audio playback fails [type `Boolean` default `true`]\n  loadAudioErrorPlayNext: true,\n  // Auto hide the cover photo if no cover photo is available [type `Boolean` default `false`]\n  autoHiddenCover: false,\n  // Play and pause audio through blank space [type `Boolean` default `false`]\n  spaceBar: true,\n  // Enable responsive player, auto toggle desktop and mobile [type `Boolean` default `true`]\n  responsive: true,\n\n  /**\n   * Custom mobile media query string, eg use the mobile version UI on iPad.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   * [type `String` default '(max-width: 768px) and (orientation : portrait)']\n   */\n  mobileMediaQuery: '(max-width: 1024px)',\n  // Audio volume with fade in and fade out [type `{ fadeIn: number, fadeOut: number }` default `{ fadeIn: 0, fadeOut: 0 }`]\n  volumeFade: {\n    fadeIn: 1000,\n    fadeOut: 1000\n  },\n  // https://github.com/SortableJS/Sortable#options\n  sortableOptions: {},\n\n  // Music is downloaded handle\n  onAudioDownload(audioInfo) {\n    console.log('audio download', audioInfo);\n  },\n\n  // audio play handle\n  onAudioPlay(audioInfo) {\n    console.log('audio playing', audioInfo);\n  },\n\n  // audio pause handle\n  onAudioPause(audioInfo) {\n    console.log('audio pause', audioInfo);\n  },\n\n  // When the user has moved/jumped to a new location in audio\n  onAudioSeeked(audioInfo) {\n    console.log('audio seeked', audioInfo);\n  },\n\n  // When the volume has changed  min = 0.0  max = 1.0\n  onAudioVolumeChange(currentVolume) {\n    console.log('audio volume change', currentVolume);\n  },\n\n  // The single song is ended handle\n  onAudioEnded(currentPlayId, audioLists, audioInfo) {\n    console.log('audio ended', currentPlayId, audioLists, audioInfo);\n  },\n\n  // audio load abort\n  onAudioAbort(currentPlayId, audioLists, audioInfo) {\n    console.log('audio abort', currentPlayId, audioLists, audioInfo);\n  },\n\n  // audio play progress handle\n  // eslint-disable-next-line no-unused-vars\n  onAudioProgress(audioInfo) {// console.log('audio progress', audioInfo)\n  },\n\n  // audio reload handle\n  onAudioReload(audioInfo) {\n    console.log('audio reload:', audioInfo);\n  },\n\n  // audio load failed error handle\n  onAudioError(errMsg, currentPlayId, audioLists, audioInfo) {\n    console.error('audio error', errMsg, currentPlayId, audioLists, audioInfo);\n  },\n\n  // theme change handle\n  // onThemeChange(theme) {\n  //   console.log('theme change:', theme)\n  // },\n  onAudioListsChange(currentPlayId, audioLists, audioInfo) {\n    console.log('audio lists change:', currentPlayId, audioLists, audioInfo);\n  },\n\n  onAudioPlayTrackChange(currentPlayId, audioLists, audioInfo) {\n    console.log('audio play track change:', currentPlayId, audioLists, audioInfo);\n  },\n\n  // onPlayModeChange(playMode) {\n  //   console.log('play mode change:', playMode)\n  // },\n  // onModeChange(mode) {\n  //   console.log('mode change:', mode)\n  // },\n  onAudioListsPanelChange(panelVisible) {\n    console.log('audio lists panel visible:', panelVisible);\n  },\n\n  onAudioListsSortEnd(oldIndex, newIndex) {\n    console.log('audio lists sort end:', oldIndex, newIndex);\n  },\n\n  onAudioLyricChange(lineNum, currentLyric) {\n    console.log('audio lyric change:', lineNum, currentLyric);\n  },\n\n  // custom music player root node\n  getContainer() {\n    return document.body;\n  },\n\n  /**\n   * @description get origin audio element instance , you can use it do everything\n   * @example\n   * audio.playbackRate = 1.5  // set play back rate\n   * audio.crossOrigin = 'xxx' // config cross origin\n   */\n  getAudioInstance(audio) {\n    console.log('audio instance', audio);\n  },\n\n  onBeforeDestroy(currentPlayId, audioLists, audioInfo) {\n    console.log('onBeforeDestroy currentPlayId: ', currentPlayId);\n    console.log('onBeforeDestroy audioLists: ', audioLists);\n    console.log('onBeforeDestroy audioInfo: ', audioInfo);\n    return new Promise((resolve, reject) => {\n      // your custom validate\n      // eslint-disable-next-line no-alert\n      if (window.confirm('Are you confirm destroy the player?')) {\n        // if resolve, player destroyed\n        resolve();\n      } else {\n        // if reject, skip.\n        reject();\n      }\n    });\n  },\n\n  onDestroyed(currentPlayId, audioLists, audioInfo) {\n    console.log('onDestroyed:', currentPlayId, audioLists, audioInfo);\n  },\n\n  onCoverClick(mode, audioLists, audioInfo) {\n    console.log('onCoverClick: ', mode, audioLists, audioInfo);\n  } // custom audio title\n  // renderAudioTitle(audioInfo) {\n  //   return <a href=\"#\">{audioInfo.name}</a>\n  // },\n  // onPlayIndexChange (playIndex) {\n  //   console.log('onPlayIndexChange: ', playIndex);\n  // }\n  // transform audio info like return a Promise\n\n  /**\n   * @return\n   *  {\n   *    src: 'xxx',\n   *    filename: 'xxx',\n   *    mimeType: 'xxx'\n   *  }\n   */\n  // onBeforeAudioDownload() {\n  //   return Promise.resolve({\n  //     src: '1.mp3',\n  //   })\n  // },\n\n  /**\n   * customer download handler\n   * eg. a link , or https://www.npmjs.com/package/file-saver\n   * @param {*} downloadInfo\n   * @example\n   *\n        customDownloader(downloadInfo) {\n        const link = document.createElement('a')\n        link.href = downloadInfo.src\n        link.download = downloadInfo.filename || 'test'\n        document.body.appendChild(link)\n        link.click()\n      },\n   */\n  // customDownloader(downloadInfo) {\n  //   console.log(downloadInfo.src)\n  //   console.log(downloadInfo.filename)\n  //   console.log(downloadInfo.mimeType)\n  // },\n\n\n};\n\nclass MusicPlayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unmount: false,\n      params: { ...options,\n        getAudioInstance: audio => {\n          this.audio = audio;\n        }\n      }\n    };\n\n    this.onAddAudio = () => {\n      this.updateParams({\n        clearPriorAudioLists: false,\n        audioLists: [...this.state.params.audioLists, {\n          name: \"I'm new here\",\n          singer: 'jack',\n          cover: 'http://www.lijinke.cn/music/1387583682387727.jpg',\n          musicSrc: `http://www.lijinke.cn/music/${Date.now()}.mp3`\n        }]\n      });\n    };\n\n    this.extendsContent = () => {\n      this.updateParams({\n        extendsContent: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            // eslint-disable-next-line no-alert\n            alert(\"I'm extends content\");\n          },\n          children: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 9\n        }, this)\n      });\n    };\n\n    this.onChangeToFirstAudioList = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: false,\n        audioLists: audioList1\n      });\n    };\n\n    this.onChangeToSecondAudioList = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: false,\n        audioLists: audioList2\n      });\n    };\n\n    this.onChangeToThirdAudioList = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: false,\n        audioLists: audioList3\n      });\n    };\n\n    this.onChangeToFourthAudioList = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: false,\n        audioLists: audioList4\n      });\n    };\n\n    this.onQuietUpdateAudioList = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: true,\n        audioLists: audioList3\n      });\n    };\n\n    this.onQuietUpdateAudioLis2 = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: true,\n        audioLists: audioList4\n      });\n    };\n\n    this.onAutoPlayMode = () => {\n      this.updateParams({\n        autoPlay: !this.state.params.autoPlay\n      });\n    };\n\n    this.onAutoPlayInitLoadPlayList = () => {\n      this.updateParams({\n        autoPlayInitLoadPlayList: !this.state.params.autoPlayInitLoadPlayList\n      });\n    };\n\n    this.onClearPriorAudioLists = () => {\n      this.updateParams({\n        clearPriorAudioLists: !this.state.params.clearPriorAudioLists\n      });\n    };\n\n    this.onShowGlassBg = () => {\n      this.onChangeKey('glassBg');\n    };\n\n    this.onDrag = () => {\n      this.onChangeKey('drag');\n    };\n\n    this.onToggleMode = () => {\n      this.onChangeKey('toggleMode');\n    };\n\n    this.onSeeked = () => {\n      this.onChangeKey('seeked');\n    };\n\n    this.onChangeKey = key => {\n      const data = { ...this.state.params,\n        [key]: !this.state.params[key]\n      };\n\n      if (key === 'light' || key === 'dark') {\n        data.theme = key;\n      }\n\n      if (key === 'full' || key === 'mini') {\n        data.mode = key;\n      }\n\n      this.setState({\n        params: data\n      });\n    };\n\n    this.showMiniProcessBar = () => {\n      this.onChangeKey('showMiniProcessBar');\n    };\n\n    this.showMiniModeCover = () => {\n      this.onChangeKey('showMiniModeCover');\n    };\n\n    this.updateParams = params => {\n      const data = { ...this.state.params,\n        ...params\n      };\n      this.setState({\n        params: data\n      });\n    };\n\n    this.unmountPlayer = () => {\n      this.setState({\n        unmount: true\n      });\n    };\n\n    this.onPlayModeChange = e => {\n      this.updateParams({\n        playMode: e.target.value\n      });\n    };\n\n    this.onWindowChange = () => {\n      window.addEventListener('resize', handleResize);\n    };\n\n    this.audio = {};\n  }\n\n  render() {\n    const {\n      params,\n      unmount\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [params.mode === 'full' ? /*#__PURE__*/_jsxDEV(MusicPlayerButtonList, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"settings\",\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: \"Mix vs. Master\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            style: {\n              marginRight: '10px',\n              paddingBottom: '10px'\n            },\n            type: \"button\",\n            onClick: this.onChangeToFirstAudioList,\n            children: [\"M.D. Norwood (Rock/Soul) # of tracks: (\", audioList1.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            style: {\n              marginRight: '10px',\n              paddingBottom: '10px'\n            },\n            type: \"button\",\n            onClick: this.onChangeToSecondAudioList,\n            children: [\"The Low Mids (Jazz) - # of tracks: (\", audioList2.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            style: {\n              marginRight: '10px',\n              paddingBottom: '10px'\n            },\n            type: \"button\",\n            onClick: this.onChangeToThirdAudioList,\n            children: [\"Small Wonders (Hiphop) -  # of tracks:  (\", audioList3.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            style: {\n              marginRight: '10px',\n              paddingBottom: '10px'\n            },\n            type: \"button\",\n            onClick: this.onChangeToFourthAudioList,\n            children: [\"S.T.E.V.E. (Jazz) - # of tracks:  (\", audioList4.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, this), unmount ? null : /*#__PURE__*/_jsxDEV(ReactJkMusicPlayer, { ...params,\n        onThemeChange: theme => {\n          console.log('onThemeChange: ', theme);\n          this.updateParams({\n            theme\n          });\n        },\n        onModeChange: mode => {\n          console.log('onModeChange: ', mode);\n          this.updateParams({\n            mode\n          });\n        },\n        onPlayModeChange: playMode => {\n          console.log('onPlayModeChange: ', playMode);\n          this.updateParams({\n            playMode\n          });\n        },\n        onPlayIndexChange: playIndex => {\n          console.log('onPlayIndexChange: ', playIndex);\n          this.updateParams({\n            playIndex\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default MusicPlayer;","map":{"version":3,"sources":["/Volumes/T7/Sites/music-site/dale-street-studio-music/client/src/components/music-player/music-player.component.jsx"],"names":["Switch","React","useEffect","ReactJkMusicPlayer","MusicPlayerButtonList","CustomButton","topPosition","leftPosition","handleResize","window","innerWidth","audioList1","name","singer","cover","musicSrc","audioList2","Promise","resolve","audioList3","audioList4","options","audioLists","defaultPlayIndex","theme","bounds","quietUpdate","clearPriorAudioLists","autoPlayInitLoadPlayList","preload","glassBg","remember","remove","defaultPosition","left","top","defaultPlayMode","mode","once","autoPlay","toggleMode","showMiniModeCover","showMiniProcessBar","drag","seeked","showMediaSession","showProgressLoadBar","showPlay","showReload","showDownload","showPlayMode","showThemeSwitch","showLyric","showDestroy","extendsContent","defaultVolume","playModeShowTime","loadAudioErrorPlayNext","autoHiddenCover","spaceBar","responsive","mobileMediaQuery","volumeFade","fadeIn","fadeOut","sortableOptions","onAudioDownload","audioInfo","console","log","onAudioPlay","onAudioPause","onAudioSeeked","onAudioVolumeChange","currentVolume","onAudioEnded","currentPlayId","onAudioAbort","onAudioProgress","onAudioReload","onAudioError","errMsg","error","onAudioListsChange","onAudioPlayTrackChange","onAudioListsPanelChange","panelVisible","onAudioListsSortEnd","oldIndex","newIndex","onAudioLyricChange","lineNum","currentLyric","getContainer","document","body","getAudioInstance","audio","onBeforeDestroy","reject","confirm","onDestroyed","onCoverClick","MusicPlayer","PureComponent","constructor","props","state","unmount","params","onAddAudio","updateParams","Date","now","alert","onChangeToFirstAudioList","onChangeToSecondAudioList","onChangeToThirdAudioList","onChangeToFourthAudioList","onQuietUpdateAudioList","onQuietUpdateAudioLis2","onAutoPlayMode","onAutoPlayInitLoadPlayList","onClearPriorAudioLists","onShowGlassBg","onChangeKey","onDrag","onToggleMode","onSeeked","key","data","setState","unmountPlayer","onPlayModeChange","e","playMode","target","value","onWindowChange","addEventListener","render","marginBottom","textAlign","marginRight","paddingBottom","length","display","playIndex"],"mappings":"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","sourcesContent":["import Switch from 'rc-switch';\nimport React, { useEffect } from 'react';\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\nimport 'react-jinke-music-player/assets/index.css';\nimport { MusicPlayerButtonList } from './music-player.styles';\nimport CustomButton from './../custom-button/custom-button.component';\n\nlet topPosition = null;\nlet leftPosition = null;\n\nconst handleResize = () => {\n  if (window.innerWidth < 800) {\n    topPosition = 10;\n    leftPosition = 300;\n  } else {\n    topPosition = 30;\n    leftPosition = 600;\n  }\n}\n\n\nconst audioList1 = [\n  {\n    name: 'Slow It Down - Hybrid Master',\n    singer: 'M.D. Norwood',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FMDNorwood.jpeg?alt=media&token=3846b743-e39f-4fd4-8169-8feac4d26ff2',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSlow-It-Down-Analog-Master.wav?alt=media&token=68be23f4-78f0-4e0f-9ecc-71bd45cca3ad',\n    // support async fetch music src. eg.\n    // musicSrc: async () => {\n    //   return await fetch('/api')\n    // },\n  },\n  {\n    name: 'Slow It Down - Original Mix',\n    singer: 'M.D. Norwood',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FMDNorwood.jpeg?alt=media&token=3846b743-e39f-4fd4-8169-8feac4d26ff2',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSlow-it-Down-Original-Mix.wav?alt=media&token=acb47746-c56d-4ad4-b1f5-eae90f85b4b5',\n  },\n  {\n    name: 'Slow It Down - Premix Demo',\n    singer: 'M.D. Norwood',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FMDNorwood.jpeg?alt=media&token=3846b743-e39f-4fd4-8169-8feac4d26ff2',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSlow-it-down-Original-Demo.wav?alt=media&token=a4199b91-5c9f-4b33-bd81-da8492d39272',\n  },\n]\n\nconst audioList2 = [\n  {\n    name: 'The Low Mids',\n    singer: 'Moonlight - Hybrid Master',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FLow-Mids-Moonlight.png?alt=media&token=8f07993d-37b3-467a-82bd-989e15cea7d2',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FLow-Mids-feat-SteelyDanimal-Moonlight-Master.wav?alt=media&token=2b6e5a8c-99a7-4396-a574-861b8850cdd3 ',\n  },\n  {\n    name: 'the Low Mids',\n    singer: 'Moonlight - Original Mix',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FLow-Mids-Moonlight.png?alt=media&token=8f07993d-37b3-467a-82bd-989e15cea7d2',\n    musicSrc: () => {\n      return Promise.resolve(\n        'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2Fthe-Low-Mids-feat-SteelyDanimal-Moonlight-Original-Mix.wav?alt=media&token=929f8a8a-b5f8-4c07-9db2-f0472e4f43e0',\n      )\n    },\n  },\n]\n\nconst audioList3 = [\n  {\n    name: 'Small Wonders',\n    singer: 'The Jam - Master',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FSWs.jpeg?alt=media&token=2922d128-b04f-49ea-ab0e-bf3cc6ea873d',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSmall-Wonders-The-Jam-MASTER.wav?alt=media&token=28fc0158-2f0f-4149-9928-9915d2c22e2e',\n  },\n  {\n    name: 'Small Wonders',\n    singer: 'The Jam - Original Mix',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FSWs.jpeg?alt=media&token=2922d128-b04f-49ea-ab0e-bf3cc6ea873d',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSmall-Wonders-The-Jam-ORIGINAL-MIX.wav?alt=media&token=10cfdfe4-345b-4d4d-80c5-aab2965a6f98',\n  },\n]\n\nconst audioList4 = [\n  {\n    name: 'S.T.E.V.E.',\n    singer: 'Bright Sized Life - Master',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2Fjazz.png?alt=media&token=ca292504-027e-4920-b34a-6bf694d30a62',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FBright-Sized-Life-Jazz-Analog-Master.wav?alt=media&token=e19c975a-8f38-4235-a389-a8ac5b710465',\n  },\n]\n\n\nconst options = {\n  // audio lists model\n  audioLists: audioList1,\n\n  // default play index of the audio player  [type `number` default `0`]\n  defaultPlayIndex: 0,\n\n  // if you want dynamic change current play audio you can change it [type `number` default `0`]\n  // playIndex: 0,\n\n  // color of the music player theme    [ type: 'light' | 'dark' | 'auto'  default `dark` ]\n  theme: 'auto',\n\n  // Specifies movement boundaries. Accepted values:\n  // - `parent` restricts movement within the node's offsetParent\n  //    (nearest node with position relative or absolute), or\n  // - a selector, restricts movement within the targeted node\n  // - An object with `left, top, right, and bottom` properties.\n  //   These indicate how far in each direction the draggable\n  //   can be moved.\n  // Ref: https://github.com/STRML/react-draggable#draggable-api\n  bounds: 'body',\n\n  /**\n   * Don't interrupt current playing state when audio list updated\n   * audioLists eg. (A) is current playing...\n   * [A,B] => [A,C,B]\n   * [A,B] => [A,B,C]\n   *\n   * if (A) not in updated audio lists\n   * [A,B] => [C]\n   * (C) is playing\n   */\n  // [type `boolean`, default `false`]\n  quietUpdate: false,\n\n  // Replace a new playlist with the first loaded playlist\n  // instead of adding it at the end of it.\n  // [type `boolean`, default `false`]\n  clearPriorAudioLists: false,\n\n  // Play your new play list right after your new play list is loaded turn false.\n  // [type `boolean`, default `false`]\n  autoPlayInitLoadPlayList: false,\n\n  // Whether to load audio immediately after the page loads.  [type `Boolean | String`, default `false`]\n  // \"auto|metadata|none\" \"true| false\"\n  preload: false,\n\n  // Whether the player's background displays frosted glass effect  [type `Boolean`, default `false`]\n  glassBg: true,\n\n  // The next time you access the player, do you keep the last state  [type `Boolean` default `false`]\n  remember: true,\n\n  // The Audio Can be deleted  [type `Boolean`, default `true`]\n  remove: true,\n\n  // audio controller initial position    [ type `Object` default '{top:0,left:0}' ]\n\n  defaultPosition: {\n    left: leftPosition,\n    top: topPosition,\n  },\n\n  // if you want dynamic change current play mode you can change it\n  // [type`order | orderLoop | singleLoop | shufflePlay`, default `order`]\n  // playMode: 'order',\n  defaultPlayMode: 'order',\n\n  // audio mode        mini | full          [type `String`  default `mini`]\n  mode: 'mini',\n\n  /**\n   * [ type `Boolean` default 'false' ]\n   * The default audioPlay handle function will be played again after each pause, If you only want to trigger it once, you can set 'true'\n   */\n  once: false,\n\n  // Whether the audio is played after loading is completed. [type `Boolean` default 'true']\n  autoPlay: false,\n\n  // Whether you can switch between two modes, full => mini  or mini => full   [type 'Boolean' default 'true']\n  toggleMode: true,\n\n  // audio cover is show of the \"mini\" mode [type `Boolean` default 'true']\n  showMiniModeCover: true,\n\n  // audio playing progress is show of the \"mini\"  mode\n  showMiniProcessBar: false,\n\n  // audio controller is can be drag of the \"mini\" mode     [type `Boolean` default `true`]\n  drag: true,\n\n  // drag the audio progress bar [type `Boolean` default `true`]\n  seeked: true,\n\n  // Display chrome media session.  [type `Boolean` default `false`]\n  showMediaSession: true,\n\n  // Displays the audio load progress bar.  [type `Boolean` default `true`]\n  showProgressLoadBar: true,\n\n  // play button display of the audio player panel   [type `Boolean` default `true`]\n  showPlay: true,\n\n  // reload button display of the audio player panel   [type `Boolean` default `true`]\n  showReload: true,\n\n  // download button display of the audio player panel   [type `Boolean` default `true`]\n  showDownload: false,\n\n  // loop button display of the audio player panel   [type `Boolean` default `true`]\n  showPlayMode: true,\n\n  // theme toggle switch  display of the audio player panel   [type `Boolean` default `true`]\n  showThemeSwitch: true,\n\n  // lyric display of the audio player panel   [type `Boolean` default `false`]\n  showLyric: false,\n\n  // destroy player button display  [type `Boolean` default `false`]\n  showDestroy: false,\n\n  // Extensible custom content       [type 'Array' default '-' ]\n  extendsContent: null,\n\n  // default volume of the audio player [type `Number` default `1` range `0-1`]\n  defaultVolume: 1,\n\n  // playModeText show time [type `Number(ms)` default `700`]\n  playModeShowTime: 600,\n\n  // Whether to try playing the next audio when the current audio playback fails [type `Boolean` default `true`]\n  loadAudioErrorPlayNext: true,\n\n  // Auto hide the cover photo if no cover photo is available [type `Boolean` default `false`]\n  autoHiddenCover: false,\n\n  // Play and pause audio through blank space [type `Boolean` default `false`]\n  spaceBar: true,\n\n\n\n  // Enable responsive player, auto toggle desktop and mobile [type `Boolean` default `true`]\n  responsive: true,\n\n  /**\n   * Custom mobile media query string, eg use the mobile version UI on iPad.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   * [type `String` default '(max-width: 768px) and (orientation : portrait)']\n   */\n  mobileMediaQuery: '(max-width: 1024px)',\n\n  // Audio volume with fade in and fade out [type `{ fadeIn: number, fadeOut: number }` default `{ fadeIn: 0, fadeOut: 0 }`]\n  volumeFade: {\n    fadeIn: 1000,\n    fadeOut: 1000,\n  },\n\n  // https://github.com/SortableJS/Sortable#options\n  sortableOptions: {},\n\n  // Music is downloaded handle\n  onAudioDownload(audioInfo) {\n    console.log('audio download', audioInfo)\n  },\n\n  // audio play handle\n  onAudioPlay(audioInfo) {\n    console.log('audio playing', audioInfo)\n  },\n\n  // audio pause handle\n  onAudioPause(audioInfo) {\n    console.log('audio pause', audioInfo)\n  },\n\n  // When the user has moved/jumped to a new location in audio\n  onAudioSeeked(audioInfo) {\n    console.log('audio seeked', audioInfo)\n  },\n\n  // When the volume has changed  min = 0.0  max = 1.0\n  onAudioVolumeChange(currentVolume) {\n    console.log('audio volume change', currentVolume)\n  },\n\n  // The single song is ended handle\n  onAudioEnded(currentPlayId, audioLists, audioInfo) {\n    console.log('audio ended', currentPlayId, audioLists, audioInfo)\n  },\n\n  // audio load abort\n  onAudioAbort(currentPlayId, audioLists, audioInfo) {\n    console.log('audio abort', currentPlayId, audioLists, audioInfo)\n  },\n\n  // audio play progress handle\n  // eslint-disable-next-line no-unused-vars\n  onAudioProgress(audioInfo) {\n    // console.log('audio progress', audioInfo)\n  },\n\n  // audio reload handle\n  onAudioReload(audioInfo) {\n    console.log('audio reload:', audioInfo)\n  },\n\n  // audio load failed error handle\n  onAudioError(errMsg, currentPlayId, audioLists, audioInfo) {\n    console.error('audio error', errMsg, currentPlayId, audioLists, audioInfo)\n  },\n\n  // theme change handle\n  // onThemeChange(theme) {\n  //   console.log('theme change:', theme)\n  // },\n\n  onAudioListsChange(currentPlayId, audioLists, audioInfo) {\n    console.log('audio lists change:', currentPlayId, audioLists, audioInfo)\n  },\n\n  onAudioPlayTrackChange(currentPlayId, audioLists, audioInfo) {\n    console.log(\n      'audio play track change:',\n      currentPlayId,\n      audioLists,\n      audioInfo,\n    )\n  },\n\n  // onPlayModeChange(playMode) {\n  //   console.log('play mode change:', playMode)\n  // },\n\n  // onModeChange(mode) {\n  //   console.log('mode change:', mode)\n  // },\n\n  onAudioListsPanelChange(panelVisible) {\n    console.log('audio lists panel visible:', panelVisible)\n  },\n\n  onAudioListsSortEnd(oldIndex, newIndex) {\n    console.log('audio lists sort end:', oldIndex, newIndex)\n  },\n\n  onAudioLyricChange(lineNum, currentLyric) {\n    console.log('audio lyric change:', lineNum, currentLyric)\n  },\n\n  // custom music player root node\n  getContainer() {\n    return document.body\n  },\n\n  /**\n   * @description get origin audio element instance , you can use it do everything\n   * @example\n   * audio.playbackRate = 1.5  // set play back rate\n   * audio.crossOrigin = 'xxx' // config cross origin\n   */\n  getAudioInstance(audio) {\n    console.log('audio instance', audio)\n  },\n\n  onBeforeDestroy(currentPlayId, audioLists, audioInfo) {\n    console.log('onBeforeDestroy currentPlayId: ', currentPlayId)\n    console.log('onBeforeDestroy audioLists: ', audioLists)\n    console.log('onBeforeDestroy audioInfo: ', audioInfo)\n    return new Promise((resolve, reject) => {\n      // your custom validate\n      // eslint-disable-next-line no-alert\n      if (window.confirm('Are you confirm destroy the player?')) {\n        // if resolve, player destroyed\n        resolve()\n      } else {\n        // if reject, skip.\n        reject()\n      }\n    })\n  },\n\n  onDestroyed(currentPlayId, audioLists, audioInfo) {\n    console.log('onDestroyed:', currentPlayId, audioLists, audioInfo)\n  },\n\n  onCoverClick(mode, audioLists, audioInfo) {\n    console.log('onCoverClick: ', mode, audioLists, audioInfo)\n  },\n\n  // custom audio title\n  // renderAudioTitle(audioInfo) {\n  //   return <a href=\"#\">{audioInfo.name}</a>\n  // },\n\n  // onPlayIndexChange (playIndex) {\n  //   console.log('onPlayIndexChange: ', playIndex);\n  // }\n\n  // transform audio info like return a Promise\n\n  /**\n   * @return\n   *  {\n   *    src: 'xxx',\n   *    filename: 'xxx',\n   *    mimeType: 'xxx'\n   *  }\n   */\n  // onBeforeAudioDownload() {\n  //   return Promise.resolve({\n  //     src: '1.mp3',\n  //   })\n  // },\n\n  /**\n   * customer download handler\n   * eg. a link , or https://www.npmjs.com/package/file-saver\n   * @param {*} downloadInfo\n   * @example\n   *\n        customDownloader(downloadInfo) {\n        const link = document.createElement('a')\n        link.href = downloadInfo.src\n        link.download = downloadInfo.filename || 'test'\n        document.body.appendChild(link)\n        link.click()\n      },\n   */\n  // customDownloader(downloadInfo) {\n  //   console.log(downloadInfo.src)\n  //   console.log(downloadInfo.filename)\n  //   console.log(downloadInfo.mimeType)\n  // },\n}\n\nclass MusicPlayer extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.audio = {}\n  }\n\n  state = {\n    unmount: false,\n    params: {\n      ...options,\n      getAudioInstance: (audio) => {\n        this.audio = audio\n      },\n    },\n  }\n\n  onAddAudio = () => {\n    this.updateParams({\n      clearPriorAudioLists: false,\n      audioLists: [\n        ...this.state.params.audioLists,\n        {\n          name: \"I'm new here\",\n          singer: 'jack',\n          cover: 'http://www.lijinke.cn/music/1387583682387727.jpg',\n          musicSrc: `http://www.lijinke.cn/music/${Date.now()}.mp3`,\n        },\n      ],\n    })\n  }\n\n  extendsContent = () => {\n    this.updateParams({\n      extendsContent: (\n        <button\n          type=\"button\"\n          onClick={() => {\n            // eslint-disable-next-line no-alert\n            alert(\"I'm extends content\")\n          }}\n        >\n          button\n        </button>\n      ),\n    })\n  }\n\n  onChangeToFirstAudioList = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: false,\n      audioLists: audioList1,\n    })\n  }\n\n  onChangeToSecondAudioList = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: false,\n      audioLists: audioList2,\n    })\n  }\n\n  onChangeToThirdAudioList = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: false,\n      audioLists: audioList3,\n    })\n  }\n\n  onChangeToFourthAudioList = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: false,\n      audioLists: audioList4,\n    })\n  }\n\n  onQuietUpdateAudioList = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: true,\n      audioLists: audioList3,\n    })\n  }\n\n  onQuietUpdateAudioLis2 = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: true,\n      audioLists: audioList4,\n    })\n  }\n\n  onAutoPlayMode = () => {\n    this.updateParams({\n      autoPlay: !this.state.params.autoPlay,\n    })\n  }\n\n  onAutoPlayInitLoadPlayList = () => {\n    this.updateParams({\n      autoPlayInitLoadPlayList: !this.state.params.autoPlayInitLoadPlayList,\n    })\n  }\n\n  onClearPriorAudioLists = () => {\n    this.updateParams({\n      clearPriorAudioLists: !this.state.params.clearPriorAudioLists,\n    })\n  }\n\n  onShowGlassBg = () => {\n    this.onChangeKey('glassBg')\n  }\n\n  onDrag = () => {\n    this.onChangeKey('drag')\n  }\n\n  onToggleMode = () => {\n    this.onChangeKey('toggleMode')\n  }\n\n  onSeeked = () => {\n    this.onChangeKey('seeked')\n  }\n\n  onChangeKey = (key) => {\n    const data = {\n      ...this.state.params,\n      [key]: !this.state.params[key],\n    }\n    if (key === 'light' || key === 'dark') {\n      data.theme = key\n    }\n    if (key === 'full' || key === 'mini') {\n      data.mode = key\n    }\n    this.setState({ params: data })\n  }\n\n  showMiniProcessBar = () => {\n    this.onChangeKey('showMiniProcessBar')\n  }\n\n  showMiniModeCover = () => {\n    this.onChangeKey('showMiniModeCover')\n  }\n\n  updateParams = (params) => {\n    const data = {\n      ...this.state.params,\n      ...params,\n    }\n    this.setState({\n      params: data,\n    })\n  }\n\n  unmountPlayer = () => {\n    this.setState({ unmount: true })\n  }\n\n  onPlayModeChange = (e) => {\n    this.updateParams({ playMode: e.target.value })\n  }\n  \n  onWindowChange = () => {\n    window.addEventListener('resize', handleResize)\n  }\n\n\n  render() {\n    const { params, unmount } = this.state\n\n    return (\n      <div>\n      {(params.mode === 'full') ? (\n        <MusicPlayerButtonList>\n        <section className=\"settings\" style={{ marginBottom: '10px' }}>\n        <h2 style={{textAlign: 'center'}}>Mix vs. Master</h2>\n            <CustomButton style={{ marginRight: '10px', paddingBottom: '10px' }} type=\"button\" onClick={this.onChangeToFirstAudioList}>\n              M.D. Norwood (Rock/Soul) # of tracks: ({audioList1.length})\n            </CustomButton>\n            <CustomButton style={{ marginRight: '10px', paddingBottom: '10px'  }}  type=\"button\" onClick={this.onChangeToSecondAudioList}>\n              The Low Mids (Jazz) - # of tracks: ({audioList2.length})\n            </CustomButton>\n            <CustomButton style={{ marginRight: '10px', paddingBottom: '10px'  }}  type=\"button\" onClick={this.onChangeToThirdAudioList}>\n              Small Wonders (Hiphop) -  # of tracks:  ({audioList3.length})\n          </CustomButton>\n            <CustomButton style={{ marginRight: '10px', paddingBottom: '10px'}} type=\"button\" onClick={this.onChangeToFourthAudioList}>\n              S.T.E.V.E. (Jazz) - # of tracks:  ({audioList4.length})\n          </CustomButton>\n      </section>\n      </MusicPlayerButtonList>\n      ) : (\n        <div style={{ display: 'none'}}></div>\n      )}\n\n    {unmount ? null : (\n      <ReactJkMusicPlayer\n        {...params}\n        onThemeChange={(theme) => {\n          console.log('onThemeChange: ', theme)\n          this.updateParams({ theme })\n        }}\n        onModeChange={(mode) => {\n          console.log('onModeChange: ', mode)\n          this.updateParams({ mode })\n        }}\n        onPlayModeChange={(playMode) => {\n          console.log('onPlayModeChange: ', playMode)\n          this.updateParams({ playMode })\n        }}\n        onPlayIndexChange={(playIndex) => {\n          console.log('onPlayIndexChange: ', playIndex)\n          this.updateParams({ playIndex })\n        }}\n      />\n    )}\n      </div>\n    )\n  }\n};\n \nexport default MusicPlayer;"]},"metadata":{},"sourceType":"module"}