{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(clearCartOnSignOut),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(updateCartInFirebase),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(checkCartFromFirebase),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(onSignOutSuccess),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(onUserSignIn),_marked6=/*#__PURE__*/_regeneratorRuntime.mark(onCartChange),_marked7=/*#__PURE__*/_regeneratorRuntime.mark(cartSagas);import{all,call,takeLatest,put,select}from'redux-saga/effects';import{getUserCartRef}from'../../firebase/firebase.utils';import UserActionTypes from'../user/user.types';import{selectCurrentUser}from'../user/user.selectors';import{clearCart,setCartFromFirebase}from'./cart.actions';import{selectCartItems}from'./cart.selectors';import CartActionTypes from'./cart.types';export function clearCartOnSignOut(){return _regeneratorRuntime.wrap(function clearCartOnSignOut$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(clearCart());case 2:case\"end\":return _context.stop();}}},_marked);}export function updateCartInFirebase(){var currentUser,cartRef,cartItems;return _regeneratorRuntime.wrap(function updateCartInFirebase$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return select(selectCurrentUser);case 2:currentUser=_context2.sent;if(!currentUser){_context2.next=18;break;}_context2.prev=4;_context2.next=7;return getUserCartRef(currentUser.id);case 7:cartRef=_context2.sent;_context2.next=10;return select(selectCartItems);case 10:cartItems=_context2.sent;_context2.next=13;return cartRef.update({cartItems:cartItems});case 13:_context2.next=18;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](4);console.log(_context2.t0);case 18:case\"end\":return _context2.stop();}}},_marked2,null,[[4,15]]);}export function checkCartFromFirebase(_ref){var user,cartRef,cartSnapshot;return _regeneratorRuntime.wrap(function checkCartFromFirebase$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:user=_ref.payload;_context3.next=3;return getUserCartRef(user.id);case 3:cartRef=_context3.sent;_context3.next=6;return cartRef.get();case 6:cartSnapshot=_context3.sent;_context3.next=9;return put(setCartFromFirebase(cartSnapshot.data().cartItems));case 9:case\"end\":return _context3.stop();}}},_marked3);}export function onSignOutSuccess(){return _regeneratorRuntime.wrap(function onSignOutSuccess$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return takeLatest(UserActionTypes.SIGN_OUT_SUCCESS,clearCartOnSignOut);case 2:case\"end\":return _context4.stop();}}},_marked4);}export function onUserSignIn(){return _regeneratorRuntime.wrap(function onUserSignIn$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return takeLatest(UserActionTypes.SIGN_IN_SUCCESS,checkCartFromFirebase);case 2:case\"end\":return _context5.stop();}}},_marked5);}export function onCartChange(){return _regeneratorRuntime.wrap(function onCartChange$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return takeLatest([CartActionTypes.ADD_ITEM,CartActionTypes.REMOVE_ITEM,CartActionTypes.CLEAR_ITEM_FROM_CART],updateCartInFirebase);case 2:case\"end\":return _context6.stop();}}},_marked6);}export function cartSagas(){return _regeneratorRuntime.wrap(function cartSagas$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return all([call(onSignOutSuccess),call(onCartChange),call(onUserSignIn)]);case 2:case\"end\":return _context7.stop();}}},_marked7);}","map":{"version":3,"sources":["/Volumes/T7/Sites/music-site/dale-street-studio-music/client/src/redux/cart/cart.sagas.js"],"names":["clearCartOnSignOut","updateCartInFirebase","checkCartFromFirebase","onSignOutSuccess","onUserSignIn","onCartChange","cartSagas","all","call","takeLatest","put","select","getUserCartRef","UserActionTypes","selectCurrentUser","clearCart","setCartFromFirebase","selectCartItems","CartActionTypes","currentUser","id","cartRef","cartItems","update","console","log","user","payload","get","cartSnapshot","data","SIGN_OUT_SUCCESS","SIGN_IN_SUCCESS","ADD_ITEM","REMOVE_ITEM","CLEAR_ITEM_FROM_CART"],"mappings":"4NASiBA,kB,iDAIAC,oB,iDAaAC,qB,iDAMAC,gB,iDAIAC,Y,iDAIAC,Y,iDAWAC,S,EAnDjB,OAASC,GAAT,CAAcC,IAAd,CAAoBC,UAApB,CAAgCC,GAAhC,CAAqCC,MAArC,KAAmD,oBAAnD,CAEA,OAASC,cAAT,KAA+B,+BAA/B,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,CACA,OAASC,SAAT,CAAoBC,mBAApB,KAA+C,gBAA/C,CACA,OAASC,eAAT,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CAEA,MAAO,SAAUlB,CAAAA,kBAAV,8IACL,MAAMU,CAAAA,GAAG,CAACK,SAAS,EAAV,CAAT,CADK,sDAIP,MAAO,SAAUd,CAAAA,oBAAV,sLACe,MAAMU,CAAAA,MAAM,CAACG,iBAAD,CAAZ,CADf,OACCK,WADD,oBAEDA,WAFC,6DAIe,MAAMP,CAAAA,cAAc,CAACO,WAAW,CAACC,EAAb,CAApB,CAJf,OAIKC,OAJL,kCAKiB,MAAMV,CAAAA,MAAM,CAACM,eAAD,CAAZ,CALjB,QAKKK,SALL,kCAMD,MAAMD,CAAAA,OAAO,CAACE,MAAR,CAAe,CAAED,SAAS,CAATA,SAAF,CAAf,CAAN,CANC,6FAQDE,OAAO,CAACC,GAAR,eARC,uEAaP,MAAO,SAAUvB,CAAAA,qBAAV,sKAA2CwB,IAA3C,MAAkCC,OAAlC,kBACW,MAAMf,CAAAA,cAAc,CAACc,IAAI,CAACN,EAAN,CAApB,CADX,OACCC,OADD,iCAEgB,MAAMA,CAAAA,OAAO,CAACO,GAAR,EAAN,CAFhB,OAECC,YAFD,iCAGL,MAAMnB,CAAAA,GAAG,CAACM,mBAAmB,CAACa,YAAY,CAACC,IAAb,GAAoBR,SAArB,CAApB,CAAT,CAHK,wDAMP,MAAO,SAAUnB,CAAAA,gBAAV,gJACN,MAAMM,CAAAA,UAAU,CAACI,eAAe,CAACkB,gBAAjB,CAAmC/B,kBAAnC,CAAhB,CADM,wDAIP,MAAO,SAAUI,CAAAA,YAAV,4IACL,MAAMK,CAAAA,UAAU,CAACI,eAAe,CAACmB,eAAjB,CAAkC9B,qBAAlC,CAAhB,CADK,wDAIP,MAAO,SAAUG,CAAAA,YAAV,4IACL,MAAMI,CAAAA,UAAU,CACd,CACES,eAAe,CAACe,QADlB,CAEEf,eAAe,CAACgB,WAFlB,CAGEhB,eAAe,CAACiB,oBAHlB,CADc,CAMdlC,oBANc,CAAhB,CADK,wDAWP,MAAO,SAAUK,CAAAA,SAAV,yIACL,MAAMC,CAAAA,GAAG,CAAC,CAACC,IAAI,CAACL,gBAAD,CAAL,CAAyBK,IAAI,CAACH,YAAD,CAA7B,CAA6CG,IAAI,CAACJ,YAAD,CAAjD,CAAD,CAAT,CADK","sourcesContent":["import { all, call, takeLatest, put, select } from 'redux-saga/effects';\n\nimport { getUserCartRef } from '../../firebase/firebase.utils';\nimport UserActionTypes from '../user/user.types';\nimport { selectCurrentUser } from '../user/user.selectors';\nimport { clearCart, setCartFromFirebase } from './cart.actions';\nimport { selectCartItems } from './cart.selectors';\nimport CartActionTypes from './cart.types';\n\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nexport function* updateCartInFirebase() {\n  const currentUser = yield select(selectCurrentUser);\n  if (currentUser) {\n    try {\n      const cartRef = yield getUserCartRef(currentUser.id);\n      const cartItems = yield select(selectCartItems);\n      yield cartRef.update({ cartItems });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport function* checkCartFromFirebase({ payload: user }) {\n  const cartRef = yield getUserCartRef(user.id);\n  const cartSnapshot = yield cartRef.get();\n  yield put(setCartFromFirebase(cartSnapshot.data().cartItems));\n}\n\nexport function* onSignOutSuccess() {\n yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut)\n}\n\nexport function* onUserSignIn() {\n  yield takeLatest(UserActionTypes.SIGN_IN_SUCCESS, checkCartFromFirebase);\n}\n\nexport function* onCartChange() {\n  yield takeLatest(\n    [\n      CartActionTypes.ADD_ITEM,\n      CartActionTypes.REMOVE_ITEM,\n      CartActionTypes.CLEAR_ITEM_FROM_CART\n    ],\n    updateCartInFirebase\n  );\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onCartChange), call(onUserSignIn)]);\n}"]},"metadata":{},"sourceType":"module"}