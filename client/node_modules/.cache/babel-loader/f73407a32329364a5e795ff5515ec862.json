{"ast":null,"code":"'use strict'; // based on https://developers.google.com/speed/webp/docs/riff_container\n\nfunction isWebP(buffer) {\n  var riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n  var webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n  var vp8Header = 'VP8' === buffer.toString('ascii', 12, 15);\n  return riffHeader && webpHeader && vp8Header;\n}\n\nfunction calculate(buffer) {\n  var chunkHeader = buffer.toString('ascii', 12, 16);\n  buffer = buffer.slice(20, 30); // Lossless webp stream signature\n\n  if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n    return calculateLossy(buffer);\n  } // Lossy webp stream signature\n\n\n  var signature = buffer.toString('hex', 3, 6);\n\n  if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n    return calculateLossless(buffer);\n  }\n\n  return false;\n}\n\nfunction calculateLossless(buffer) {\n  return {\n    'width': 1 + ((buffer[2] & 0x3F) << 8 | buffer[1]),\n    'height': 1 + ((buffer[4] & 0xF) << 10 | buffer[3] << 2 | (buffer[2] & 0xC0) >> 6)\n  };\n}\n\nfunction calculateLossy(buffer) {\n  // `& 0x3fff` returns the last 14 bits\n  // TO-DO: include webp scaling in the calculations\n  return {\n    'width': buffer.readInt16LE(6) & 0x3fff,\n    'height': buffer.readInt16LE(8) & 0x3fff\n  };\n}\n\nmodule.exports = {\n  'detect': isWebP,\n  'calculate': calculate\n};","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/image-size/lib/types/webp.js"],"names":["isWebP","buffer","riffHeader","toString","webpHeader","vp8Header","calculate","chunkHeader","slice","calculateLossy","signature","calculateLossless","readInt16LE","module","exports"],"mappings":"AAAA,a,CAEA;;AAEA,SAASA,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,MAAIC,UAAU,GAAG,WAAWD,MAAM,CAACE,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAA5B;AACA,MAAIC,UAAU,GAAG,WAAWH,MAAM,CAACE,QAAP,CAAgB,OAAhB,EAAyB,CAAzB,EAA4B,EAA5B,CAA5B;AACA,MAAIE,SAAS,GAAI,UAAWJ,MAAM,CAACE,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAA5B;AACA,SAAQD,UAAU,IAAIE,UAAd,IAA4BC,SAApC;AACD;;AAED,SAASC,SAAT,CAAoBL,MAApB,EAA4B;AAE1B,MAAIM,WAAW,GAAGN,MAAM,CAACE,QAAP,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,CAAlB;AACAF,EAAAA,MAAM,GAAGA,MAAM,CAACO,KAAP,CAAa,EAAb,EAAiB,EAAjB,CAAT,CAH0B,CAK1B;;AACA,MAAID,WAAW,KAAK,MAAhB,IAA0BN,MAAM,CAAC,CAAD,CAAN,KAAc,IAA5C,EAAkD;AAChD,WAAOQ,cAAc,CAACR,MAAD,CAArB;AACD,GARyB,CAU1B;;;AACA,MAAIS,SAAS,GAAGT,MAAM,CAACE,QAAP,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B,CAA1B,CAAhB;;AACA,MAAII,WAAW,KAAK,MAAhB,IAA0BG,SAAS,KAAK,QAA5C,EAAsD;AACpD,WAAOC,iBAAiB,CAACV,MAAD,CAAxB;AACD;;AAED,SAAO,KAAP;AACD;;AAED,SAASU,iBAAT,CAA4BV,MAA5B,EAAoC;AAClC,SAAO;AACL,aAAS,KAAM,CAACA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAb,KAAsB,CAAvB,GAA4BA,MAAM,CAAC,CAAD,CAAvC,CADJ;AAEL,cAAU,KAAM,CAACA,MAAM,CAAC,CAAD,CAAN,GAAY,GAAb,KAAqB,EAAtB,GAA6BA,MAAM,CAAC,CAAD,CAAN,IAAa,CAA1C,GACA,CAACA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAb,KAAsB,CAD3B;AAFL,GAAP;AAKD;;AAED,SAASQ,cAAT,CAAyBR,MAAzB,EAAiC;AAC/B;AACA;AACA,SAAO;AACL,aAASA,MAAM,CAACW,WAAP,CAAmB,CAAnB,IAAwB,MAD5B;AAEL,cAAUX,MAAM,CAACW,WAAP,CAAmB,CAAnB,IAAwB;AAF7B,GAAP;AAID;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACf,YAAUd,MADK;AAEf,eAAaM;AAFE,CAAjB","sourcesContent":["'use strict';\n\n// based on https://developers.google.com/speed/webp/docs/riff_container\n\nfunction isWebP (buffer) {\n  var riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n  var webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n  var vp8Header  = 'VP8'  === buffer.toString('ascii', 12, 15);\n  return (riffHeader && webpHeader && vp8Header);\n}\n\nfunction calculate (buffer) {\n\n  var chunkHeader = buffer.toString('ascii', 12, 16);\n  buffer = buffer.slice(20, 30);\n\n  // Lossless webp stream signature\n  if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n    return calculateLossy(buffer);\n  }\n\n  // Lossy webp stream signature\n  var signature = buffer.toString('hex', 3, 6);\n  if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n    return calculateLossless(buffer);\n  }\n\n  return false;\n}\n\nfunction calculateLossless (buffer) {\n  return {\n    'width': 1 + (((buffer[2] & 0x3F) << 8) | buffer[1]),\n    'height': 1 + (((buffer[4] & 0xF) << 10) | (buffer[3] << 2) |\n                  ((buffer[2] & 0xC0) >> 6))\n  };\n}\n\nfunction calculateLossy (buffer) {\n  // `& 0x3fff` returns the last 14 bits\n  // TO-DO: include webp scaling in the calculations\n  return {\n    'width': buffer.readInt16LE(6) & 0x3fff,\n    'height': buffer.readInt16LE(8) & 0x3fff\n  };\n}\n\nmodule.exports = {\n  'detect': isWebP,\n  'calculate': calculate\n};\n"]},"metadata":{},"sourceType":"script"}