{"ast":null,"code":"var _jsxFileName = \"/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/src/components/music-player/music-player.component.jsx\";\nimport Switch from 'rc-switch';\nimport React from 'react';\nimport { hot } from 'react-hot-loader';\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\nimport Locale from '../src/config/locale';\nimport PLAY_MODE from '../src/config/playMode';\nimport 'react-jinke-music-player/assets/index.css';\nimport { createRandomNum } from '../src/utils';\nimport './music-player.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst audioList1 = [{\n  name: 'Despacito',\n  singer: 'Luis Fonsi',\n  cover: 'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n  musicSrc: 'http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3' // support async fetch music src. eg.\n  // musicSrc: async () => {\n  //   return await fetch('/api')\n  // },\n\n}, {\n  name: 'Dorost Nemisham',\n  singer: 'Sirvan Khosravi',\n  cover: 'https://res.cloudinary.com/ehsanahmadi/image/upload/v1573758778/Sirvan-Khosravi-Dorost-Nemisham_glicks.jpg',\n  musicSrc: 'https://res.cloudinary.com/ehsanahmadi/video/upload/v1573550770/Sirvan-Khosravi-Dorost-Nemisham-128_kb8urq.mp3'\n}];\nconst audioList2 = [{\n  name: 'Bedtime Stories',\n  singer: 'Jay Chou',\n  cover: 'http://res.cloudinary.com/alick/image/upload/v1502375978/bedtime_stories_bywggz.jpg',\n  musicSrc: 'http://res.cloudinary.com/alick/video/upload/v1502375674/Bedtime_Stories.mp3'\n}, {\n  name: 'Dorost Nemisham',\n  singer: 'Sirvan Khosravi',\n  cover: 'https://res.cloudinary.com/ehsanahmadi/image/upload/v1573758778/Sirvan-Khosravi-Dorost-Nemisham_glicks.jpg',\n  musicSrc: () => {\n    return Promise.resolve('https://res.cloudinary.com/ehsanahmadi/video/upload/v1573550770/Sirvan-Khosravi-Dorost-Nemisham-128_kb8urq.mp3');\n  }\n}, {\n  name: 'Despacito',\n  singer: 'Luis Fonsi',\n  cover: 'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n  musicSrc: 'http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3'\n}];\nconst audioList3 = [{\n  name: 'Despacito',\n  singer: 'Luis Fonsi',\n  cover: 'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n  musicSrc: 'http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3'\n}, {\n  name: 'Bedtime Stories',\n  singer: 'Jay Chou',\n  cover: 'http://res.cloudinary.com/alick/image/upload/v1502375978/bedtime_stories_bywggz.jpg',\n  musicSrc: 'http://res.cloudinary.com/alick/video/upload/v1502375674/Bedtime_Stories.mp3'\n}, {\n  name: 'Dorost Nemisham',\n  singer: 'Sirvan Khosravi',\n  cover: 'https://res.cloudinary.com/ehsanahmadi/image/upload/v1573758778/Sirvan-Khosravi-Dorost-Nemisham_glicks.jpg',\n  musicSrc: 'https://res.cloudinary.com/ehsanahmadi/video/upload/v1573550770/Sirvan-Khosravi-Dorost-Nemisham-128_kb8urq.mp3'\n}];\nconst audioList4 = [{\n  name: 'Bedtime Stories',\n  singer: 'Jay Chou',\n  cover: 'http://res.cloudinary.com/alick/image/upload/v1502375978/bedtime_stories_bywggz.jpg',\n  musicSrc: 'http://res.cloudinary.com/alick/video/upload/v1502375674/Bedtime_Stories.mp3'\n}];\nconst options = {\n  // audio lists model\n  audioLists: audioList1,\n  // default play index of the audio player  [type `number` default `0`]\n  defaultPlayIndex: 0,\n  // if you want dynamic change current play audio you can change it [type `number` default `0`]\n  // playIndex: 0,\n  // color of the music player theme    [ type: 'light' | 'dark' | 'auto'  default `dark` ]\n  theme: 'auto',\n  // Specifies movement boundaries. Accepted values:\n  // - `parent` restricts movement within the node's offsetParent\n  //    (nearest node with position relative or absolute), or\n  // - a selector, restricts movement within the targeted node\n  // - An object with `left, top, right, and bottom` properties.\n  //   These indicate how far in each direction the draggable\n  //   can be moved.\n  // Ref: https://github.com/STRML/react-draggable#draggable-api\n  bounds: 'body',\n\n  /**\n   * Don't interrupt current playing state when audio list updated\n   * audioLists eg. (A) is current playing...\n   * [A,B] => [A,C,B]\n   * [A,B] => [A,B,C]\n   *\n   * if (A) not in updated audio lists\n   * [A,B] => [C]\n   * (C) is playing\n   */\n  // [type `boolean`, default `false`]\n  quietUpdate: false,\n  // Replace a new playlist with the first loaded playlist\n  // instead of adding it at the end of it.\n  // [type `boolean`, default `false`]\n  clearPriorAudioLists: false,\n  // Play your new play list right after your new play list is loaded turn false.\n  // [type `boolean`, default `false`]\n  autoPlayInitLoadPlayList: false,\n  // Whether to load audio immediately after the page loads.  [type `Boolean | String`, default `false`]\n  // \"auto|metadata|none\" \"true| false\"\n  preload: false,\n  // Whether the player's background displays frosted glass effect  [type `Boolean`, default `false`]\n  glassBg: false,\n  // The next time you access the player, do you keep the last state  [type `Boolean` default `false`]\n  remember: false,\n  // The Audio Can be deleted  [type `Boolean`, default `true`]\n  remove: true,\n  // audio controller initial position    [ type `Object` default '{top:0,left:0}' ]\n  defaultPosition: {\n    right: 100,\n    bottom: 120\n  },\n  // if you want dynamic change current play mode you can change it\n  // [type`order | orderLoop | singleLoop | shufflePlay`, default `order`]\n  // playMode: 'order',\n  defaultPlayMode: 'order',\n  // audio mode        mini | full          [type `String`  default `mini`]\n  mode: 'full',\n\n  /**\n   * [ type `Boolean` default 'false' ]\n   * The default audioPlay handle function will be played again after each pause, If you only want to trigger it once, you can set 'true'\n   */\n  once: false,\n  // Whether the audio is played after loading is completed. [type `Boolean` default 'true']\n  autoPlay: false,\n  // Whether you can switch between two modes, full => mini  or mini => full   [type 'Boolean' default 'true']\n  toggleMode: true,\n  // audio cover is show of the \"mini\" mode [type `Boolean` default 'true']\n  showMiniModeCover: true,\n  // audio playing progress is show of the \"mini\"  mode\n  showMiniProcessBar: false,\n  // audio controller is can be drag of the \"mini\" mode     [type `Boolean` default `true`]\n  drag: true,\n  // drag the audio progress bar [type `Boolean` default `true`]\n  seeked: true,\n  // Display chrome media session.  [type `Boolean` default `false`]\n  showMediaSession: true,\n  // Displays the audio load progress bar.  [type `Boolean` default `true`]\n  showProgressLoadBar: true,\n  // play button display of the audio player panel   [type `Boolean` default `true`]\n  showPlay: true,\n  // reload button display of the audio player panel   [type `Boolean` default `true`]\n  showReload: true,\n  // download button display of the audio player panel   [type `Boolean` default `true`]\n  showDownload: true,\n  // loop button display of the audio player panel   [type `Boolean` default `true`]\n  showPlayMode: true,\n  // theme toggle switch  display of the audio player panel   [type `Boolean` default `true`]\n  showThemeSwitch: true,\n  // lyric display of the audio player panel   [type `Boolean` default `false`]\n  showLyric: true,\n  // destroy player button display  [type `Boolean` default `false`]\n  showDestroy: true,\n  // Extensible custom content       [type 'Array' default '-' ]\n  extendsContent: null,\n  // default volume of the audio player [type `Number` default `1` range `0-1`]\n  defaultVolume: 1,\n  // playModeText show time [type `Number(ms)` default `700`]\n  playModeShowTime: 600,\n  // Whether to try playing the next audio when the current audio playback fails [type `Boolean` default `true`]\n  loadAudioErrorPlayNext: true,\n  // Auto hide the cover photo if no cover photo is available [type `Boolean` default `false`]\n  autoHiddenCover: false,\n  // Play and pause audio through blank space [type `Boolean` default `false`]\n  spaceBar: true,\n  // international [type `en_US | zh_CN | Object` default `en_US`]\n  locale: Locale.en_US,\n  // Enable responsive player, auto toggle desktop and mobile [type `Boolean` default `true`]\n  responsive: true,\n\n  /**\n   * Custom mobile media query string, eg use the mobile version UI on iPad.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   * [type `String` default '(max-width: 768px) and (orientation : portrait)']\n   */\n  mobileMediaQuery: '(max-width: 1024px)',\n  // Audio volume with fade in and fade out [type `{ fadeIn: number, fadeOut: number }` default `{ fadeIn: 0, fadeOut: 0 }`]\n  volumeFade: {\n    fadeIn: 1000,\n    fadeOut: 1000\n  },\n  // https://github.com/SortableJS/Sortable#options\n  sortableOptions: {},\n\n  // Music is downloaded handle\n  onAudioDownload(audioInfo) {\n    console.log('audio download', audioInfo);\n  },\n\n  // audio play handle\n  onAudioPlay(audioInfo) {\n    console.log('audio playing', audioInfo);\n  },\n\n  // audio pause handle\n  onAudioPause(audioInfo) {\n    console.log('audio pause', audioInfo);\n  },\n\n  // When the user has moved/jumped to a new location in audio\n  onAudioSeeked(audioInfo) {\n    console.log('audio seeked', audioInfo);\n  },\n\n  // When the volume has changed  min = 0.0  max = 1.0\n  onAudioVolumeChange(currentVolume) {\n    console.log('audio volume change', currentVolume);\n  },\n\n  // The single song is ended handle\n  onAudioEnded(currentPlayId, audioLists, audioInfo) {\n    console.log('audio ended', currentPlayId, audioLists, audioInfo);\n  },\n\n  // audio load abort\n  onAudioAbort(currentPlayId, audioLists, audioInfo) {\n    console.log('audio abort', currentPlayId, audioLists, audioInfo);\n  },\n\n  // audio play progress handle\n  // eslint-disable-next-line no-unused-vars\n  onAudioProgress(audioInfo) {// console.log('audio progress', audioInfo)\n  },\n\n  // audio reload handle\n  onAudioReload(audioInfo) {\n    console.log('audio reload:', audioInfo);\n  },\n\n  // audio load failed error handle\n  onAudioError(errMsg, currentPlayId, audioLists, audioInfo) {\n    console.error('audio error', errMsg, currentPlayId, audioLists, audioInfo);\n  },\n\n  // theme change handle\n  // onThemeChange(theme) {\n  //   console.log('theme change:', theme)\n  // },\n  onAudioListsChange(currentPlayId, audioLists, audioInfo) {\n    console.log('audio lists change:', currentPlayId, audioLists, audioInfo);\n  },\n\n  onAudioPlayTrackChange(currentPlayId, audioLists, audioInfo) {\n    console.log('audio play track change:', currentPlayId, audioLists, audioInfo);\n  },\n\n  // onPlayModeChange(playMode) {\n  //   console.log('play mode change:', playMode)\n  // },\n  // onModeChange(mode) {\n  //   console.log('mode change:', mode)\n  // },\n  onAudioListsPanelChange(panelVisible) {\n    console.log('audio lists panel visible:', panelVisible);\n  },\n\n  onAudioListsSortEnd(oldIndex, newIndex) {\n    console.log('audio lists sort end:', oldIndex, newIndex);\n  },\n\n  onAudioLyricChange(lineNum, currentLyric) {\n    console.log('audio lyric change:', lineNum, currentLyric);\n  },\n\n  // custom music player root node\n  getContainer() {\n    return document.body;\n  },\n\n  /**\n   * @description get origin audio element instance , you can use it do everything\n   * @example\n   * audio.playbackRate = 1.5  // set play back rate\n   * audio.crossOrigin = 'xxx' // config cross origin\n   */\n  getAudioInstance(audio) {\n    console.log('audio instance', audio);\n  },\n\n  onBeforeDestroy(currentPlayId, audioLists, audioInfo) {\n    console.log('onBeforeDestroy currentPlayId: ', currentPlayId);\n    console.log('onBeforeDestroy audioLists: ', audioLists);\n    console.log('onBeforeDestroy audioInfo: ', audioInfo);\n    return new Promise((resolve, reject) => {\n      // your custom validate\n      // eslint-disable-next-line no-alert\n      if (window.confirm('Are you confirm destroy the player?')) {\n        // if resolve, player destroyed\n        resolve();\n      } else {\n        // if reject, skip.\n        reject();\n      }\n    });\n  },\n\n  onDestroyed(currentPlayId, audioLists, audioInfo) {\n    console.log('onDestroyed:', currentPlayId, audioLists, audioInfo);\n  },\n\n  onCoverClick(mode, audioLists, audioInfo) {\n    console.log('onCoverClick: ', mode, audioLists, audioInfo);\n  } // custom audio title\n  // renderAudioTitle(audioInfo) {\n  //   return <a href=\"#\">{audioInfo.name}</a>\n  // },\n  // onPlayIndexChange (playIndex) {\n  //   console.log('onPlayIndexChange: ', playIndex);\n  // }\n  // transform audio info like return a Promise\n\n  /**\n   * @return\n   *  {\n   *    src: 'xxx',\n   *    filename: 'xxx',\n   *    mimeType: 'xxx'\n   *  }\n   */\n  // onBeforeAudioDownload() {\n  //   return Promise.resolve({\n  //     src: '1.mp3',\n  //   })\n  // },\n\n  /**\n   * customer download handler\n   * eg. a link , or https://www.npmjs.com/package/file-saver\n   * @param {*} downloadInfo\n   * @example\n   *\n       customDownloader(downloadInfo) {\n        const link = document.createElement('a')\n        link.href = downloadInfo.src\n        link.download = downloadInfo.filename || 'test'\n        document.body.appendChild(link)\n        link.click()\n      },\n   */\n  // customDownloader(downloadInfo) {\n  //   console.log(downloadInfo.src)\n  //   console.log(downloadInfo.filename)\n  //   console.log(downloadInfo.mimeType)\n  // },\n\n\n};\n\nclass MusicPlayer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unmount: false,\n      params: { ...options,\n        getAudioInstance: audio => {\n          this.audio = audio;\n        }\n      }\n    };\n\n    this.onAddAudio = () => {\n      this.updateParams({\n        clearPriorAudioLists: false,\n        audioLists: [...this.state.params.audioLists, {\n          name: \"I'm new here\",\n          singer: 'jack',\n          cover: 'http://www.lijinke.cn/music/1387583682387727.jpg',\n          musicSrc: `http://www.lijinke.cn/music/${Date.now()}.mp3`\n        }]\n      });\n    };\n\n    this.extendsContent = () => {\n      this.updateParams({\n        extendsContent: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            // eslint-disable-next-line no-alert\n            alert(\"I'm extends content\");\n          },\n          children: \"button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 9\n        }, this)\n      });\n    };\n\n    this.onChangeToFirstAudioList = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: false,\n        audioLists: audioList1\n      });\n    };\n\n    this.onChangeToSecondAudioList = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: false,\n        audioLists: audioList2\n      });\n    };\n\n    this.onQuietUpdateAudioList = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: true,\n        audioLists: audioList3\n      });\n    };\n\n    this.onQuietUpdateAudioLis2 = () => {\n      this.updateParams({\n        clearPriorAudioLists: true,\n        quietUpdate: true,\n        audioLists: audioList4\n      });\n    };\n\n    this.onAutoPlayMode = () => {\n      this.updateParams({\n        autoPlay: !this.state.params.autoPlay\n      });\n    };\n\n    this.onAutoPlayInitLoadPlayList = () => {\n      this.updateParams({\n        autoPlayInitLoadPlayList: !this.state.params.autoPlayInitLoadPlayList\n      });\n    };\n\n    this.onClearPriorAudioLists = () => {\n      this.updateParams({\n        clearPriorAudioLists: !this.state.params.clearPriorAudioLists\n      });\n    };\n\n    this.onShowGlassBg = () => {\n      this.onChangeKey('glassBg');\n    };\n\n    this.onDrag = () => {\n      this.onChangeKey('drag');\n    };\n\n    this.onToggleMode = () => {\n      this.onChangeKey('toggleMode');\n    };\n\n    this.onSeeked = () => {\n      this.onChangeKey('seeked');\n    };\n\n    this.onChangeKey = key => {\n      const data = { ...this.state.params,\n        [key]: !this.state.params[key]\n      };\n\n      if (key === 'light' || key === 'dark') {\n        data.theme = key;\n      }\n\n      if (key === 'full' || key === 'mini') {\n        data.mode = key;\n      }\n\n      if (Object.values(Locale).includes(key)) {\n        data.locale = key;\n      }\n\n      this.setState({\n        params: data\n      });\n    };\n\n    this.showMiniProcessBar = () => {\n      this.onChangeKey('showMiniProcessBar');\n    };\n\n    this.showMiniModeCover = () => {\n      this.onChangeKey('showMiniModeCover');\n    };\n\n    this.playModeShowTime = () => {\n      this.updateParams({\n        playModeShowTime: createRandomNum(200, 2000)\n      });\n    };\n\n    this.changePlayIndex = () => {\n      this.updateParams({\n        playIndex: createRandomNum(0, this.state.params.audioLists.length - 1)\n      });\n    };\n\n    this.updateParams = params => {\n      const data = { ...this.state.params,\n        ...params\n      };\n      this.setState({\n        params: data\n      });\n    };\n\n    this.unmountPlayer = () => {\n      this.setState({\n        unmount: true\n      });\n    };\n\n    this.onPlayModeChange = e => {\n      this.updateParams({\n        playMode: e.target.value\n      });\n    };\n\n    this.audio = {};\n  }\n\n  render() {\n    const {\n      params,\n      unmount\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: pkg.repository.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            title: \"go to github\",\n            children: pkg.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"version\",\n          children: [\"doc version: \", pkg.version]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"version\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://badge.fury.io/js/react-jinke-music-playerr\",\n          title: \"npm\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://img.shields.io/npm/v/react-jinke-music-player.svg?style=flat-square\",\n            alt: \"npm version\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"example-title\",\n        children: [\"Drag, Click, or switch to phone mode to try\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          href: \"https://github.com/lijinke666/react-music-player/blob/master/example/example.js\",\n          children: \"(DEMO SOURCE)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"settings\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.onChangeToFirstAudioList,\n          children: [\"change to first audio list (\", audioList1.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.onChangeToSecondAudioList,\n          children: [\"change to second audio list (\", audioList2.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.onQuietUpdateAudioList,\n          children: [\"quiet update audio list (don't interrupt current play state) (\", audioList3.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.onQuietUpdateAudioLis2,\n          children: [\"quiet update audio list (current playing audio not in updated list) (\", audioList4.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.onAddAudio,\n          children: [\"+ add audio (\", params.audioLists.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.extendsContent,\n          children: \"+ add extends content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.playModeShowTime,\n          children: [\"change play mode show time (\", params.playModeShowTime, \" ms)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.changePlayIndex,\n          children: [\"change playIndex (\", params.playIndex || 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.onPlayModeChange,\n          value: params.playMode,\n          children: Object.values(PLAY_MODE).map(playMode => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: playMode,\n            children: [\"playMode: \", playMode]\n          }, playMode, true, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.unmountPlayer,\n          children: \"unmount player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.renderCustomAudioTitle,\n          children: \"render custom audio title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"glassBg\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"glassBg\",\n            onChange: this.onShowGlassBg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 9\n          }, this), \"glassBg\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"drag\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"drag\",\n            checked: params.drag,\n            onChange: this.onDrag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 9\n          }, this), \"drag\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"seeked\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"seeked\",\n            checked: params.seeked,\n            onChange: this.onSeeked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 9\n          }, this), \"seeked\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"toggle\",\n            checked: params.toggleMode,\n            onChange: this.onToggleMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 9\n          }, this), \"toggleMode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"autoPlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"autoPlay\",\n            checked: params.autoPlay,\n            onChange: this.onAutoPlayMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 9\n          }, this), \"autoPlay\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"clearPriorAudioLists\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"clearPriorAudioLists\",\n            checked: params.clearPriorAudioLists,\n            onChange: this.onClearPriorAudioLists\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 9\n          }, this), \"clearPriorAudioLists\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"onAutoPlayInitLoadPlayList\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"onAutoPlayInitLoadPlayList\",\n            checked: params.autoPlayInitLoadPlayList,\n            onChange: this.onAutoPlayInitLoadPlayList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 9\n          }, this), \"autoplayInitLoadPlayList\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showMiniProcessBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showMiniProcessBar\",\n            checked: params.showMiniProcessBar,\n            onChange: this.showMiniProcessBar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 9\n          }, this), \"showMiniProcessBar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showMiniModeCover\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showMiniModeCover\",\n            checked: params.showMiniModeCover,\n            onChange: this.showMiniModeCover\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 9\n          }, this), \"showMiniModeCover\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showProgressLoadBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showProgressLoadBar\",\n            checked: params.showProgressLoadBar,\n            onChange: () => this.onChangeKey('showProgressLoadBar')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 9\n          }, this), \"showProgressLoadBar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showPlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showPlay\",\n            checked: params.showPlay,\n            onChange: () => this.onChangeKey('showPlay')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 9\n          }, this), \"showPlay\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showReload\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showReload\",\n            checked: params.showReload,\n            onChange: () => this.onChangeKey('showReload')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 9\n          }, this), \"showReload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showDownload\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showDownload\",\n            checked: params.showDownload,\n            onChange: () => this.onChangeKey('showDownload')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 9\n          }, this), \"showDownload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showPlayMode\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showPlayMode\",\n            checked: params.showPlayMode,\n            onChange: () => this.onChangeKey('showPlayMode')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 9\n          }, this), \"showPlayMode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showThemeSwitch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showThemeSwitch\",\n            checked: params.showThemeSwitch,\n            onChange: () => this.onChangeKey('showThemeSwitch')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 9\n          }, this), \"showThemeSwitch\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showLyric\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showLyric\",\n            checked: params.showLyric,\n            onChange: () => this.onChangeKey('showLyric')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 9\n          }, this), \"showLyric\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"showDestroy\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showDestroy\",\n            checked: params.showDestroy,\n            onChange: () => this.onChangeKey('showDestroy')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 9\n          }, this), \"showDestroy\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"preload\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"preload\",\n            checked: params.preload,\n            onChange: () => this.onChangeKey('preload')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 9\n          }, this), \"preload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"remove\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"remove\",\n            checked: params.remove,\n            onChange: () => this.onChangeKey('remove')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 9\n          }, this), \"remove\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"remember\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"remember\",\n            checked: params.remember,\n            onChange: () => this.onChangeKey('remember')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 9\n          }, this), \"remember\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"spaceBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"spaceBar\",\n            checked: params.spaceBar,\n            onChange: () => this.onChangeKey('spaceBar')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 9\n          }, this), \"spaceBar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"responsive\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"responsive\",\n            checked: params.responsive,\n            onChange: () => this.onChangeKey('responsive')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 9\n          }, this), \"responsive\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"autoHiddenCover\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"autoHiddenCover\",\n            checked: params.autoHiddenCover,\n            onChange: () => this.onChangeKey('autoHiddenCover')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 9\n          }, this), \"autoHiddenCover\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quietUpdate\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"quietUpdate\",\n            checked: params.quietUpdate,\n            onChange: () => this.onChangeKey('quietUpdate')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 9\n          }, this), \"quietUpdate\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          children: [\"theme :\", params.theme, /*#__PURE__*/_jsxDEV(Switch, {\n            checkedChildren: \"D\",\n            unCheckedChildren: \"L\",\n            checked: params.theme === 'light',\n            onChange: checked => this.onChangeKey(checked ? 'light' : 'dark')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 9\n          }, this), \"mode :\", params.mode, /*#__PURE__*/_jsxDEV(Switch, {\n            checkedChildren: \"M\",\n            unCheckedChildren: \"F\",\n            checked: params.mode === 'mini',\n            onChange: checked => this.onChangeKey(checked ? 'mini' : 'full')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 9\n          }, this), \"language :\", params.locale, /*#__PURE__*/_jsxDEV(Switch, {\n            checkedChildren: \"zh\",\n            unCheckedChildren: \"en\",\n            checked: params.locale === Locale.zh_CN,\n            onChange: checked => this.onChangeKey(checked ? Locale.zh_CN : Locale.en_US)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.renderCustomUI()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 5\n      }, this), unmount ? null : /*#__PURE__*/_jsxDEV(ReactJkMusicPlayer, { ...params,\n        onThemeChange: theme => {\n          console.log('onThemeChange: ', theme);\n          this.updateParams({\n            theme\n          });\n        },\n        onModeChange: mode => {\n          console.log('onModeChange: ', mode);\n          this.updateParams({\n            mode\n          });\n        },\n        onPlayModeChange: playMode => {\n          console.log('onPlayModeChange: ', playMode);\n          this.updateParams({\n            playMode\n          });\n        },\n        onPlayIndexChange: playIndex => {\n          console.log('onPlayIndexChange: ', playIndex);\n          this.updateParams({\n            playIndex\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default MusicPlayer;","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/src/components/music-player/music-player.component.jsx"],"names":["Switch","React","hot","ReactJkMusicPlayer","Locale","PLAY_MODE","createRandomNum","audioList1","name","singer","cover","musicSrc","audioList2","Promise","resolve","audioList3","audioList4","options","audioLists","defaultPlayIndex","theme","bounds","quietUpdate","clearPriorAudioLists","autoPlayInitLoadPlayList","preload","glassBg","remember","remove","defaultPosition","right","bottom","defaultPlayMode","mode","once","autoPlay","toggleMode","showMiniModeCover","showMiniProcessBar","drag","seeked","showMediaSession","showProgressLoadBar","showPlay","showReload","showDownload","showPlayMode","showThemeSwitch","showLyric","showDestroy","extendsContent","defaultVolume","playModeShowTime","loadAudioErrorPlayNext","autoHiddenCover","spaceBar","locale","en_US","responsive","mobileMediaQuery","volumeFade","fadeIn","fadeOut","sortableOptions","onAudioDownload","audioInfo","console","log","onAudioPlay","onAudioPause","onAudioSeeked","onAudioVolumeChange","currentVolume","onAudioEnded","currentPlayId","onAudioAbort","onAudioProgress","onAudioReload","onAudioError","errMsg","error","onAudioListsChange","onAudioPlayTrackChange","onAudioListsPanelChange","panelVisible","onAudioListsSortEnd","oldIndex","newIndex","onAudioLyricChange","lineNum","currentLyric","getContainer","document","body","getAudioInstance","audio","onBeforeDestroy","reject","window","confirm","onDestroyed","onCoverClick","MusicPlayer","PureComponent","constructor","props","state","unmount","params","onAddAudio","updateParams","Date","now","alert","onChangeToFirstAudioList","onChangeToSecondAudioList","onQuietUpdateAudioList","onQuietUpdateAudioLis2","onAutoPlayMode","onAutoPlayInitLoadPlayList","onClearPriorAudioLists","onShowGlassBg","onChangeKey","onDrag","onToggleMode","onSeeked","key","data","Object","values","includes","setState","changePlayIndex","playIndex","length","unmountPlayer","onPlayModeChange","e","playMode","target","value","render","pkg","repository","url","version","map","renderCustomAudioTitle","checked","zh_CN","renderCustomUI"],"mappings":"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","sourcesContent":["import Switch from 'rc-switch';\nimport React from 'react';\nimport { hot } from 'react-hot-loader';\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\nimport Locale from '../src/config/locale';\nimport PLAY_MODE from '../src/config/playMode';\nimport 'react-jinke-music-player/assets/index.css';\nimport { createRandomNum } from '../src/utils'\n\nimport './music-player.styles';\n\nconst audioList1 = [\n  {\n    name: 'Despacito',\n    singer: 'Luis Fonsi',\n    cover:\n      'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n    musicSrc:\n      'http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3',\n    // support async fetch music src. eg.\n    // musicSrc: async () => {\n    //   return await fetch('/api')\n    // },\n  },\n  {\n    name: 'Dorost Nemisham',\n    singer: 'Sirvan Khosravi',\n    cover:\n      'https://res.cloudinary.com/ehsanahmadi/image/upload/v1573758778/Sirvan-Khosravi-Dorost-Nemisham_glicks.jpg',\n    musicSrc:\n      'https://res.cloudinary.com/ehsanahmadi/video/upload/v1573550770/Sirvan-Khosravi-Dorost-Nemisham-128_kb8urq.mp3',\n  },\n]\n\nconst audioList2 = [\n  {\n    name: 'Bedtime Stories',\n    singer: 'Jay Chou',\n    cover:\n      'http://res.cloudinary.com/alick/image/upload/v1502375978/bedtime_stories_bywggz.jpg',\n    musicSrc:\n      'http://res.cloudinary.com/alick/video/upload/v1502375674/Bedtime_Stories.mp3',\n  },\n  {\n    name: 'Dorost Nemisham',\n    singer: 'Sirvan Khosravi',\n    cover:\n      'https://res.cloudinary.com/ehsanahmadi/image/upload/v1573758778/Sirvan-Khosravi-Dorost-Nemisham_glicks.jpg',\n    musicSrc: () => {\n      return Promise.resolve(\n        'https://res.cloudinary.com/ehsanahmadi/video/upload/v1573550770/Sirvan-Khosravi-Dorost-Nemisham-128_kb8urq.mp3',\n      )\n    },\n  },\n  {\n    name: 'Despacito',\n    singer: 'Luis Fonsi',\n    cover:\n      'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n    musicSrc:\n      'http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3',\n  },\n]\n\nconst audioList3 = [\n  {\n    name: 'Despacito',\n    singer: 'Luis Fonsi',\n    cover:\n      'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n    musicSrc:\n      'http://res.cloudinary.com/alick/video/upload/v1502689683/Luis_Fonsi_-_Despacito_ft._Daddy_Yankee_uyvqw9.mp3',\n  },\n  {\n    name: 'Bedtime Stories',\n    singer: 'Jay Chou',\n    cover:\n      'http://res.cloudinary.com/alick/image/upload/v1502375978/bedtime_stories_bywggz.jpg',\n    musicSrc:\n      'http://res.cloudinary.com/alick/video/upload/v1502375674/Bedtime_Stories.mp3',\n  },\n  {\n    name: 'Dorost Nemisham',\n    singer: 'Sirvan Khosravi',\n    cover:\n      'https://res.cloudinary.com/ehsanahmadi/image/upload/v1573758778/Sirvan-Khosravi-Dorost-Nemisham_glicks.jpg',\n    musicSrc:\n      'https://res.cloudinary.com/ehsanahmadi/video/upload/v1573550770/Sirvan-Khosravi-Dorost-Nemisham-128_kb8urq.mp3',\n  },\n]\n\nconst audioList4 = [\n  {\n    name: 'Bedtime Stories',\n    singer: 'Jay Chou',\n    cover:\n      'http://res.cloudinary.com/alick/image/upload/v1502375978/bedtime_stories_bywggz.jpg',\n    musicSrc:\n      'http://res.cloudinary.com/alick/video/upload/v1502375674/Bedtime_Stories.mp3',\n  },\n]\n\nconst options = {\n  // audio lists model\n  audioLists: audioList1,\n\n  // default play index of the audio player  [type `number` default `0`]\n  defaultPlayIndex: 0,\n\n  // if you want dynamic change current play audio you can change it [type `number` default `0`]\n  // playIndex: 0,\n\n  // color of the music player theme    [ type: 'light' | 'dark' | 'auto'  default `dark` ]\n  theme: 'auto',\n\n  // Specifies movement boundaries. Accepted values:\n  // - `parent` restricts movement within the node's offsetParent\n  //    (nearest node with position relative or absolute), or\n  // - a selector, restricts movement within the targeted node\n  // - An object with `left, top, right, and bottom` properties.\n  //   These indicate how far in each direction the draggable\n  //   can be moved.\n  // Ref: https://github.com/STRML/react-draggable#draggable-api\n  bounds: 'body',\n\n  /**\n   * Don't interrupt current playing state when audio list updated\n   * audioLists eg. (A) is current playing...\n   * [A,B] => [A,C,B]\n   * [A,B] => [A,B,C]\n   *\n   * if (A) not in updated audio lists\n   * [A,B] => [C]\n   * (C) is playing\n   */\n  // [type `boolean`, default `false`]\n  quietUpdate: false,\n\n  // Replace a new playlist with the first loaded playlist\n  // instead of adding it at the end of it.\n  // [type `boolean`, default `false`]\n  clearPriorAudioLists: false,\n\n  // Play your new play list right after your new play list is loaded turn false.\n  // [type `boolean`, default `false`]\n  autoPlayInitLoadPlayList: false,\n\n  // Whether to load audio immediately after the page loads.  [type `Boolean | String`, default `false`]\n  // \"auto|metadata|none\" \"true| false\"\n  preload: false,\n\n  // Whether the player's background displays frosted glass effect  [type `Boolean`, default `false`]\n  glassBg: false,\n\n  // The next time you access the player, do you keep the last state  [type `Boolean` default `false`]\n  remember: false,\n\n  // The Audio Can be deleted  [type `Boolean`, default `true`]\n  remove: true,\n\n  // audio controller initial position    [ type `Object` default '{top:0,left:0}' ]\n  defaultPosition: {\n    right: 100,\n    bottom: 120,\n  },\n\n  // if you want dynamic change current play mode you can change it\n  // [type`order | orderLoop | singleLoop | shufflePlay`, default `order`]\n  // playMode: 'order',\n  defaultPlayMode: 'order',\n\n  // audio mode        mini | full          [type `String`  default `mini`]\n  mode: 'full',\n\n  /**\n   * [ type `Boolean` default 'false' ]\n   * The default audioPlay handle function will be played again after each pause, If you only want to trigger it once, you can set 'true'\n   */\n  once: false,\n\n  // Whether the audio is played after loading is completed. [type `Boolean` default 'true']\n  autoPlay: false,\n\n  // Whether you can switch between two modes, full => mini  or mini => full   [type 'Boolean' default 'true']\n  toggleMode: true,\n\n  // audio cover is show of the \"mini\" mode [type `Boolean` default 'true']\n  showMiniModeCover: true,\n\n  // audio playing progress is show of the \"mini\"  mode\n  showMiniProcessBar: false,\n\n  // audio controller is can be drag of the \"mini\" mode     [type `Boolean` default `true`]\n  drag: true,\n\n  // drag the audio progress bar [type `Boolean` default `true`]\n  seeked: true,\n\n  // Display chrome media session.  [type `Boolean` default `false`]\n  showMediaSession: true,\n\n  // Displays the audio load progress bar.  [type `Boolean` default `true`]\n  showProgressLoadBar: true,\n\n  // play button display of the audio player panel   [type `Boolean` default `true`]\n  showPlay: true,\n\n  // reload button display of the audio player panel   [type `Boolean` default `true`]\n  showReload: true,\n\n  // download button display of the audio player panel   [type `Boolean` default `true`]\n  showDownload: true,\n\n  // loop button display of the audio player panel   [type `Boolean` default `true`]\n  showPlayMode: true,\n\n  // theme toggle switch  display of the audio player panel   [type `Boolean` default `true`]\n  showThemeSwitch: true,\n\n  // lyric display of the audio player panel   [type `Boolean` default `false`]\n  showLyric: true,\n\n  // destroy player button display  [type `Boolean` default `false`]\n  showDestroy: true,\n\n  // Extensible custom content       [type 'Array' default '-' ]\n  extendsContent: null,\n\n  // default volume of the audio player [type `Number` default `1` range `0-1`]\n  defaultVolume: 1,\n\n  // playModeText show time [type `Number(ms)` default `700`]\n  playModeShowTime: 600,\n\n  // Whether to try playing the next audio when the current audio playback fails [type `Boolean` default `true`]\n  loadAudioErrorPlayNext: true,\n\n  // Auto hide the cover photo if no cover photo is available [type `Boolean` default `false`]\n  autoHiddenCover: false,\n\n  // Play and pause audio through blank space [type `Boolean` default `false`]\n  spaceBar: true,\n\n  // international [type `en_US | zh_CN | Object` default `en_US`]\n  locale: Locale.en_US,\n\n  // Enable responsive player, auto toggle desktop and mobile [type `Boolean` default `true`]\n  responsive: true,\n\n  /**\n   * Custom mobile media query string, eg use the mobile version UI on iPad.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   * [type `String` default '(max-width: 768px) and (orientation : portrait)']\n   */\n  mobileMediaQuery: '(max-width: 1024px)',\n\n  // Audio volume with fade in and fade out [type `{ fadeIn: number, fadeOut: number }` default `{ fadeIn: 0, fadeOut: 0 }`]\n  volumeFade: {\n    fadeIn: 1000,\n    fadeOut: 1000,\n  },\n\n  // https://github.com/SortableJS/Sortable#options\n  sortableOptions: {},\n\n  // Music is downloaded handle\n  onAudioDownload(audioInfo) {\n    console.log('audio download', audioInfo)\n  },\n\n  // audio play handle\n  onAudioPlay(audioInfo) {\n    console.log('audio playing', audioInfo)\n  },\n\n  // audio pause handle\n  onAudioPause(audioInfo) {\n    console.log('audio pause', audioInfo)\n  },\n\n  // When the user has moved/jumped to a new location in audio\n  onAudioSeeked(audioInfo) {\n    console.log('audio seeked', audioInfo)\n  },\n\n  // When the volume has changed  min = 0.0  max = 1.0\n  onAudioVolumeChange(currentVolume) {\n    console.log('audio volume change', currentVolume)\n  },\n\n  // The single song is ended handle\n  onAudioEnded(currentPlayId, audioLists, audioInfo) {\n    console.log('audio ended', currentPlayId, audioLists, audioInfo)\n  },\n\n  // audio load abort\n  onAudioAbort(currentPlayId, audioLists, audioInfo) {\n    console.log('audio abort', currentPlayId, audioLists, audioInfo)\n  },\n\n  // audio play progress handle\n  // eslint-disable-next-line no-unused-vars\n  onAudioProgress(audioInfo) {\n    // console.log('audio progress', audioInfo)\n  },\n\n  // audio reload handle\n  onAudioReload(audioInfo) {\n    console.log('audio reload:', audioInfo)\n  },\n\n  // audio load failed error handle\n  onAudioError(errMsg, currentPlayId, audioLists, audioInfo) {\n    console.error('audio error', errMsg, currentPlayId, audioLists, audioInfo)\n  },\n\n  // theme change handle\n  // onThemeChange(theme) {\n  //   console.log('theme change:', theme)\n  // },\n\n  onAudioListsChange(currentPlayId, audioLists, audioInfo) {\n    console.log('audio lists change:', currentPlayId, audioLists, audioInfo)\n  },\n\n  onAudioPlayTrackChange(currentPlayId, audioLists, audioInfo) {\n    console.log(\n      'audio play track change:',\n      currentPlayId,\n      audioLists,\n      audioInfo,\n    )\n  },\n\n  // onPlayModeChange(playMode) {\n  //   console.log('play mode change:', playMode)\n  // },\n\n  // onModeChange(mode) {\n  //   console.log('mode change:', mode)\n  // },\n\n  onAudioListsPanelChange(panelVisible) {\n    console.log('audio lists panel visible:', panelVisible)\n  },\n\n  onAudioListsSortEnd(oldIndex, newIndex) {\n    console.log('audio lists sort end:', oldIndex, newIndex)\n  },\n\n  onAudioLyricChange(lineNum, currentLyric) {\n    console.log('audio lyric change:', lineNum, currentLyric)\n  },\n\n  // custom music player root node\n  getContainer() {\n    return document.body\n  },\n\n  /**\n   * @description get origin audio element instance , you can use it do everything\n   * @example\n   * audio.playbackRate = 1.5  // set play back rate\n   * audio.crossOrigin = 'xxx' // config cross origin\n   */\n  getAudioInstance(audio) {\n    console.log('audio instance', audio)\n  },\n\n  onBeforeDestroy(currentPlayId, audioLists, audioInfo) {\n    console.log('onBeforeDestroy currentPlayId: ', currentPlayId)\n    console.log('onBeforeDestroy audioLists: ', audioLists)\n    console.log('onBeforeDestroy audioInfo: ', audioInfo)\n    return new Promise((resolve, reject) => {\n      // your custom validate\n      // eslint-disable-next-line no-alert\n      if (window.confirm('Are you confirm destroy the player?')) {\n        // if resolve, player destroyed\n        resolve()\n      } else {\n        // if reject, skip.\n        reject()\n      }\n    })\n  },\n\n  onDestroyed(currentPlayId, audioLists, audioInfo) {\n    console.log('onDestroyed:', currentPlayId, audioLists, audioInfo)\n  },\n\n  onCoverClick(mode, audioLists, audioInfo) {\n    console.log('onCoverClick: ', mode, audioLists, audioInfo)\n  },\n\n  // custom audio title\n  // renderAudioTitle(audioInfo) {\n  //   return <a href=\"#\">{audioInfo.name}</a>\n  // },\n\n  // onPlayIndexChange (playIndex) {\n  //   console.log('onPlayIndexChange: ', playIndex);\n  // }\n\n  // transform audio info like return a Promise\n\n  /**\n   * @return\n   *  {\n   *    src: 'xxx',\n   *    filename: 'xxx',\n   *    mimeType: 'xxx'\n   *  }\n   */\n  // onBeforeAudioDownload() {\n  //   return Promise.resolve({\n  //     src: '1.mp3',\n  //   })\n  // },\n\n  /**\n   * customer download handler\n   * eg. a link , or https://www.npmjs.com/package/file-saver\n   * @param {*} downloadInfo\n   * @example\n   *\n       customDownloader(downloadInfo) {\n        const link = document.createElement('a')\n        link.href = downloadInfo.src\n        link.download = downloadInfo.filename || 'test'\n        document.body.appendChild(link)\n        link.click()\n      },\n   */\n  // customDownloader(downloadInfo) {\n  //   console.log(downloadInfo.src)\n  //   console.log(downloadInfo.filename)\n  //   console.log(downloadInfo.mimeType)\n  // },\n}\n\nclass MusicPlayer extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.audio = {}\n  }\n\n  state = {\n    unmount: false,\n    params: {\n      ...options,\n      getAudioInstance: (audio) => {\n        this.audio = audio\n      },\n    },\n  }\n\n  onAddAudio = () => {\n    this.updateParams({\n      clearPriorAudioLists: false,\n      audioLists: [\n        ...this.state.params.audioLists,\n        {\n          name: \"I'm new here\",\n          singer: 'jack',\n          cover: 'http://www.lijinke.cn/music/1387583682387727.jpg',\n          musicSrc: `http://www.lijinke.cn/music/${Date.now()}.mp3`,\n        },\n      ],\n    })\n  }\n\n  extendsContent = () => {\n    this.updateParams({\n      extendsContent: (\n        <button\n          type=\"button\"\n          onClick={() => {\n            // eslint-disable-next-line no-alert\n            alert(\"I'm extends content\")\n          }}\n        >\n          button\n        </button>\n      ),\n    })\n  }\n\n  onChangeToFirstAudioList = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: false,\n      audioLists: audioList1,\n    })\n  }\n\n  onChangeToSecondAudioList = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: false,\n      audioLists: audioList2,\n    })\n  }\n\n  onQuietUpdateAudioList = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: true,\n      audioLists: audioList3,\n    })\n  }\n\n  onQuietUpdateAudioLis2 = () => {\n    this.updateParams({\n      clearPriorAudioLists: true,\n      quietUpdate: true,\n      audioLists: audioList4,\n    })\n  }\n\n  onAutoPlayMode = () => {\n    this.updateParams({\n      autoPlay: !this.state.params.autoPlay,\n    })\n  }\n\n  onAutoPlayInitLoadPlayList = () => {\n    this.updateParams({\n      autoPlayInitLoadPlayList: !this.state.params.autoPlayInitLoadPlayList,\n    })\n  }\n\n  onClearPriorAudioLists = () => {\n    this.updateParams({\n      clearPriorAudioLists: !this.state.params.clearPriorAudioLists,\n    })\n  }\n\n  onShowGlassBg = () => {\n    this.onChangeKey('glassBg')\n  }\n\n  onDrag = () => {\n    this.onChangeKey('drag')\n  }\n\n  onToggleMode = () => {\n    this.onChangeKey('toggleMode')\n  }\n\n  onSeeked = () => {\n    this.onChangeKey('seeked')\n  }\n\n  onChangeKey = (key) => {\n    const data = {\n      ...this.state.params,\n      [key]: !this.state.params[key],\n    }\n    if (key === 'light' || key === 'dark') {\n      data.theme = key\n    }\n    if (key === 'full' || key === 'mini') {\n      data.mode = key\n    }\n    if (Object.values(Locale).includes(key)) {\n      data.locale = key\n    }\n    this.setState({ params: data })\n  }\n\n  showMiniProcessBar = () => {\n    this.onChangeKey('showMiniProcessBar')\n  }\n\n  showMiniModeCover = () => {\n    this.onChangeKey('showMiniModeCover')\n  }\n\n  playModeShowTime = () => {\n    this.updateParams({\n      playModeShowTime: createRandomNum(200, 2000),\n    })\n  }\n\n  changePlayIndex = () => {\n    this.updateParams({\n      playIndex: createRandomNum(0, this.state.params.audioLists.length - 1),\n    })\n  }\n\n  updateParams = (params) => {\n    const data = {\n      ...this.state.params,\n      ...params,\n    }\n    this.setState({\n      params: data,\n    })\n  }\n\n  unmountPlayer = () => {\n    this.setState({ unmount: true })\n  }\n\n  onPlayModeChange = (e) => {\n    this.updateParams({ playMode: e.target.value })\n  }\n\n  \n\n\n  render() {\n    const { params, unmount } = this.state\n\n    return (\n      <div>\n      <h1 className=\"title\">\n      <span className=\"name\">\n        <a\n          href={pkg.repository.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"go to github\"\n        >\n          {pkg.name}\n        </a>\n      </span>\n      <span className=\"version\">doc version: {pkg.version}</span>\n    </h1>\n    <p className=\"version\">\n      <a\n        href=\"https://badge.fury.io/js/react-jinke-music-playerr\"\n        title=\"npm\"\n      >\n        <img\n          src=\"https://img.shields.io/npm/v/react-jinke-music-player.svg?style=flat-square\"\n          alt=\"npm version\"\n        />\n      </a>\n    </p>\n    <h2 className=\"example-title\">\n      Drag, Click, or switch to phone mode to try{' '}\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/lijinke666/react-music-player/blob/master/example/example.js\"\n      >\n        (DEMO SOURCE)\n      </a>\n    </h2>\n    <section className=\"settings\">\n      <button type=\"button\" onClick={this.onChangeToFirstAudioList}>\n        change to first audio list ({audioList1.length})\n      </button>\n      <button type=\"button\" onClick={this.onChangeToSecondAudioList}>\n        change to second audio list ({audioList2.length})\n      </button>\n      <button type=\"button\" onClick={this.onQuietUpdateAudioList}>\n        quiet update audio list (don't interrupt current play state) (\n        {audioList3.length})\n      </button>\n      <button type=\"button\" onClick={this.onQuietUpdateAudioLis2}>\n        quiet update audio list (current playing audio not in updated list)\n        ({audioList4.length})\n      </button>\n      <button type=\"button\" onClick={this.onAddAudio}>\n        + add audio ({params.audioLists.length})\n      </button>\n      <button type=\"button\" onClick={this.extendsContent}>\n        + add extends content\n      </button>\n      <button type=\"button\" onClick={this.playModeShowTime}>\n        change play mode show time ({params.playModeShowTime} ms)\n      </button>\n      <button type=\"button\" onClick={this.changePlayIndex}>\n        change playIndex ({params.playIndex || 0})\n      </button>\n      <select onChange={this.onPlayModeChange} value={params.playMode}>\n        {Object.values(PLAY_MODE).map((playMode) => (\n          <option value={playMode} key={playMode}>\n            playMode: {playMode}\n          </option>\n        ))}\n      </select>\n      <button type=\"button\" onClick={this.unmountPlayer}>\n        unmount player\n      </button>\n      <button type=\"button\" onClick={this.renderCustomAudioTitle}>\n        render custom audio title\n      </button>\n      <br />\n      <br />\n      <label htmlFor=\"glassBg\">\n        <input type=\"checkbox\" id=\"glassBg\" onChange={this.onShowGlassBg} />\n        glassBg\n      </label>\n      <label htmlFor=\"drag\">\n        <input\n          type=\"checkbox\"\n          id=\"drag\"\n          checked={params.drag}\n          onChange={this.onDrag}\n        />\n        drag\n      </label>\n      <label htmlFor=\"seeked\">\n        <input\n          type=\"checkbox\"\n          id=\"seeked\"\n          checked={params.seeked}\n          onChange={this.onSeeked}\n        />\n        seeked\n      </label>\n      <label htmlFor=\"toggle\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle\"\n          checked={params.toggleMode}\n          onChange={this.onToggleMode}\n        />\n        toggleMode\n      </label>\n      <label htmlFor=\"autoPlay\">\n        <input\n          type=\"checkbox\"\n          id=\"autoPlay\"\n          checked={params.autoPlay}\n          onChange={this.onAutoPlayMode}\n        />\n        autoPlay\n      </label>\n      <label htmlFor=\"clearPriorAudioLists\">\n        <input\n          type=\"checkbox\"\n          id=\"clearPriorAudioLists\"\n          checked={params.clearPriorAudioLists}\n          onChange={this.onClearPriorAudioLists}\n        />\n        clearPriorAudioLists\n      </label>\n      <label htmlFor=\"onAutoPlayInitLoadPlayList\">\n        <input\n          type=\"checkbox\"\n          id=\"onAutoPlayInitLoadPlayList\"\n          checked={params.autoPlayInitLoadPlayList}\n          onChange={this.onAutoPlayInitLoadPlayList}\n        />\n        autoplayInitLoadPlayList\n      </label>\n      <label htmlFor=\"showMiniProcessBar\">\n        <input\n          type=\"checkbox\"\n          id=\"showMiniProcessBar\"\n          checked={params.showMiniProcessBar}\n          onChange={this.showMiniProcessBar}\n        />\n        showMiniProcessBar\n      </label>\n      <label htmlFor=\"showMiniModeCover\">\n        <input\n          type=\"checkbox\"\n          id=\"showMiniModeCover\"\n          checked={params.showMiniModeCover}\n          onChange={this.showMiniModeCover}\n        />\n        showMiniModeCover\n      </label>\n      <label htmlFor=\"showProgressLoadBar\">\n        <input\n          type=\"checkbox\"\n          id=\"showProgressLoadBar\"\n          checked={params.showProgressLoadBar}\n          onChange={() => this.onChangeKey('showProgressLoadBar')}\n        />\n        showProgressLoadBar\n      </label>\n      <label htmlFor=\"showPlay\">\n        <input\n          type=\"checkbox\"\n          id=\"showPlay\"\n          checked={params.showPlay}\n          onChange={() => this.onChangeKey('showPlay')}\n        />\n        showPlay\n      </label>\n      <label htmlFor=\"showReload\">\n        <input\n          type=\"checkbox\"\n          id=\"showReload\"\n          checked={params.showReload}\n          onChange={() => this.onChangeKey('showReload')}\n        />\n        showReload\n      </label>\n      <label htmlFor=\"showDownload\">\n        <input\n          type=\"checkbox\"\n          id=\"showDownload\"\n          checked={params.showDownload}\n          onChange={() => this.onChangeKey('showDownload')}\n        />\n        showDownload\n      </label>\n      <label htmlFor=\"showPlayMode\">\n        <input\n          type=\"checkbox\"\n          id=\"showPlayMode\"\n          checked={params.showPlayMode}\n          onChange={() => this.onChangeKey('showPlayMode')}\n        />\n        showPlayMode\n      </label>\n      <label htmlFor=\"showThemeSwitch\">\n        <input\n          type=\"checkbox\"\n          id=\"showThemeSwitch\"\n          checked={params.showThemeSwitch}\n          onChange={() => this.onChangeKey('showThemeSwitch')}\n        />\n        showThemeSwitch\n      </label>\n      <label htmlFor=\"showLyric\">\n        <input\n          type=\"checkbox\"\n          id=\"showLyric\"\n          checked={params.showLyric}\n          onChange={() => this.onChangeKey('showLyric')}\n        />\n        showLyric\n      </label>\n      <label htmlFor=\"showDestroy\">\n        <input\n          type=\"checkbox\"\n          id=\"showDestroy\"\n          checked={params.showDestroy}\n          onChange={() => this.onChangeKey('showDestroy')}\n        />\n        showDestroy\n      </label>\n      <label htmlFor=\"preload\">\n        <input\n          type=\"checkbox\"\n          id=\"preload\"\n          checked={params.preload}\n          onChange={() => this.onChangeKey('preload')}\n        />\n        preload\n      </label>\n      <label htmlFor=\"remove\">\n        <input\n          type=\"checkbox\"\n          id=\"remove\"\n          checked={params.remove}\n          onChange={() => this.onChangeKey('remove')}\n        />\n        remove\n      </label>\n      <label htmlFor=\"remember\">\n        <input\n          type=\"checkbox\"\n          id=\"remember\"\n          checked={params.remember}\n          onChange={() => this.onChangeKey('remember')}\n        />\n        remember\n      </label>\n      <label htmlFor=\"spaceBar\">\n        <input\n          type=\"checkbox\"\n          id=\"spaceBar\"\n          checked={params.spaceBar}\n          onChange={() => this.onChangeKey('spaceBar')}\n        />\n        spaceBar\n      </label>\n      <label htmlFor=\"responsive\">\n        <input\n          type=\"checkbox\"\n          id=\"responsive\"\n          checked={params.responsive}\n          onChange={() => this.onChangeKey('responsive')}\n        />\n        responsive\n      </label>\n      <label htmlFor=\"autoHiddenCover\">\n        <input\n          type=\"checkbox\"\n          id=\"autoHiddenCover\"\n          checked={params.autoHiddenCover}\n          onChange={() => this.onChangeKey('autoHiddenCover')}\n        />\n        autoHiddenCover\n      </label>\n      <label htmlFor=\"quietUpdate\">\n        <input\n          type=\"checkbox\"\n          id=\"quietUpdate\"\n          checked={params.quietUpdate}\n          onChange={() => this.onChangeKey('quietUpdate')}\n        />\n        quietUpdate\n      </label>\n      <div className=\"toggle\">\n        theme :{params.theme}\n        <Switch\n          checkedChildren=\"D\"\n          unCheckedChildren=\"L\"\n          checked={params.theme === 'light'}\n          onChange={(checked) =>\n            this.onChangeKey(checked ? 'light' : 'dark')\n          }\n        />\n        mode :{params.mode}\n        <Switch\n          checkedChildren=\"M\"\n          unCheckedChildren=\"F\"\n          checked={params.mode === 'mini'}\n          onChange={(checked) =>\n            this.onChangeKey(checked ? 'mini' : 'full')\n          }\n        />\n        language :{params.locale}\n        <Switch\n          checkedChildren=\"zh\"\n          unCheckedChildren=\"en\"\n          checked={params.locale === Locale.zh_CN}\n          onChange={(checked) =>\n            this.onChangeKey(checked ? Locale.zh_CN : Locale.en_US)\n          }\n        />\n      </div>\n      <div>{this.renderCustomUI()}</div>\n    </section>\n    {unmount ? null : (\n      <ReactJkMusicPlayer\n        {...params}\n        onThemeChange={(theme) => {\n          console.log('onThemeChange: ', theme)\n          this.updateParams({ theme })\n        }}\n        onModeChange={(mode) => {\n          console.log('onModeChange: ', mode)\n          this.updateParams({ mode })\n        }}\n        onPlayModeChange={(playMode) => {\n          console.log('onPlayModeChange: ', playMode)\n          this.updateParams({ playMode })\n        }}\n        onPlayIndexChange={(playIndex) => {\n          console.log('onPlayIndexChange: ', playIndex)\n          this.updateParams({ playIndex })\n        }}\n      />\n    )}\n      </div>\n    )\n  }\n};\n \nexport default MusicPlayer;"]},"metadata":{},"sourceType":"module"}