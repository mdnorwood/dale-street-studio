{"ast":null,"code":"\"use strict\";\n\nvar hasSyncZlib = true;\n\nvar zlib = require(\"zlib\");\n\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\n\nvar constants = require(\"./constants\");\n\nvar Packer = require(\"./packer\");\n\nmodule.exports = function (metaData, opt) {\n  if (!hasSyncZlib) {\n    throw new Error(\"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\");\n  }\n\n  var options = opt || {};\n  var packer = new Packer(options);\n  var chunks = []; // Signature\n\n  chunks.push(Buffer.from(constants.PNG_SIGNATURE)); // Header\n\n  chunks.push(packer.packIHDR(metaData.width, metaData.height));\n\n  if (metaData.gamma) {\n    chunks.push(packer.packGAMA(metaData.gamma));\n  }\n\n  var filteredData = packer.filterData(metaData.data, metaData.width, metaData.height); // compress it\n\n  var compressedData = zlib.deflateSync(filteredData, packer.getDeflateOptions());\n  filteredData = null;\n\n  if (!compressedData || !compressedData.length) {\n    throw new Error(\"bad png - invalid compressed data response\");\n  }\n\n  chunks.push(packer.packIDAT(compressedData)); // End\n\n  chunks.push(packer.packIEND());\n  return Buffer.concat(chunks);\n};","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/pngjs/lib/packer-sync.js"],"names":["hasSyncZlib","zlib","require","deflateSync","constants","Packer","module","exports","metaData","opt","Error","options","packer","chunks","push","Buffer","from","PNG_SIGNATURE","packIHDR","width","height","gamma","packGAMA","filteredData","filterData","data","compressedData","getDeflateOptions","length","packIDAT","packIEND","concat"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAG,IAAlB;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAI,CAACD,IAAI,CAACE,WAAV,EAAuB;AACrBH,EAAAA,WAAW,GAAG,KAAd;AACD;;AACD,IAAII,SAAS,GAAGF,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAApB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoBC,GAApB,EAAyB;AACxC,MAAI,CAACT,WAAL,EAAkB;AAChB,UAAM,IAAIU,KAAJ,CACJ,6FADI,CAAN;AAGD;;AAED,MAAIC,OAAO,GAAGF,GAAG,IAAI,EAArB;AAEA,MAAIG,MAAM,GAAG,IAAIP,MAAJ,CAAWM,OAAX,CAAb;AAEA,MAAIE,MAAM,GAAG,EAAb,CAXwC,CAaxC;;AACAA,EAAAA,MAAM,CAACC,IAAP,CAAYC,MAAM,CAACC,IAAP,CAAYZ,SAAS,CAACa,aAAtB,CAAZ,EAdwC,CAgBxC;;AACAJ,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACM,QAAP,CAAgBV,QAAQ,CAACW,KAAzB,EAAgCX,QAAQ,CAACY,MAAzC,CAAZ;;AAEA,MAAIZ,QAAQ,CAACa,KAAb,EAAoB;AAClBR,IAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACU,QAAP,CAAgBd,QAAQ,CAACa,KAAzB,CAAZ;AACD;;AAED,MAAIE,YAAY,GAAGX,MAAM,CAACY,UAAP,CACjBhB,QAAQ,CAACiB,IADQ,EAEjBjB,QAAQ,CAACW,KAFQ,EAGjBX,QAAQ,CAACY,MAHQ,CAAnB,CAvBwC,CA6BxC;;AACA,MAAIM,cAAc,GAAGzB,IAAI,CAACE,WAAL,CACnBoB,YADmB,EAEnBX,MAAM,CAACe,iBAAP,EAFmB,CAArB;AAIAJ,EAAAA,YAAY,GAAG,IAAf;;AAEA,MAAI,CAACG,cAAD,IAAmB,CAACA,cAAc,CAACE,MAAvC,EAA+C;AAC7C,UAAM,IAAIlB,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACDG,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACiB,QAAP,CAAgBH,cAAhB,CAAZ,EAvCwC,CAyCxC;;AACAb,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACkB,QAAP,EAAZ;AAEA,SAAOf,MAAM,CAACgB,MAAP,CAAclB,MAAd,CAAP;AACD,CA7CD","sourcesContent":["\"use strict\";\n\nlet hasSyncZlib = true;\nlet zlib = require(\"zlib\");\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nlet constants = require(\"./constants\");\nlet Packer = require(\"./packer\");\n\nmodule.exports = function (metaData, opt) {\n  if (!hasSyncZlib) {\n    throw new Error(\n      \"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\"\n    );\n  }\n\n  let options = opt || {};\n\n  let packer = new Packer(options);\n\n  let chunks = [];\n\n  // Signature\n  chunks.push(Buffer.from(constants.PNG_SIGNATURE));\n\n  // Header\n  chunks.push(packer.packIHDR(metaData.width, metaData.height));\n\n  if (metaData.gamma) {\n    chunks.push(packer.packGAMA(metaData.gamma));\n  }\n\n  let filteredData = packer.filterData(\n    metaData.data,\n    metaData.width,\n    metaData.height\n  );\n\n  // compress it\n  let compressedData = zlib.deflateSync(\n    filteredData,\n    packer.getDeflateOptions()\n  );\n  filteredData = null;\n\n  if (!compressedData || !compressedData.length) {\n    throw new Error(\"bad png - invalid compressed data response\");\n  }\n  chunks.push(packer.packIDAT(compressedData));\n\n  // End\n  chunks.push(packer.packIEND());\n\n  return Buffer.concat(chunks);\n};\n"]},"metadata":{},"sourceType":"script"}