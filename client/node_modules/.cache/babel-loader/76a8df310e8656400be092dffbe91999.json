{"ast":null,"code":"// Generate our exports\nmodule.exports = {\n  // I know -- every time this code runs, god kills a kitten\n  'streamToString': function streamToString(stream, cb) {\n    // Generate imgData to store chunks\n    var imgData = [],\n        errOccurred = false; // On data, add it to imgData\n    // Note: We must save in 'binary' since utf8 strings don't support any possible character that a file might use\n\n    stream.on('data', function (chunk) {\n      var binaryStr = chunk.toString('binary');\n      imgData.push(binaryStr);\n    }); // DEV: Originally, this collected errors for stream.on('end') but Cairo won't callback on error =(\n    // On error\n\n    stream.on('error', function (err) {\n      // If this is the first error\n      if (!errOccurred) {\n        // Make a note that it occurred and callback\n        errOccurred = true;\n        cb(err);\n      } else {\n        // Otherwise, abandon ship and notify the user\n        console.error('MULTIPLE SPRITESMTIH ERRORS: ', err);\n      }\n    }); // When complete\n\n    stream.on('end', function () {\n      // If there was an error, do nothing (callback already fired)\n      if (errOccurred) {\n        return;\n      } // Otherwise, join together image data and callback\n\n\n      var retStr = imgData.join('');\n      cb(null, retStr);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/canvassmith/lib/utils/index.js"],"names":["module","exports","streamToString","stream","cb","imgData","errOccurred","on","chunk","binaryStr","toString","push","err","console","error","retStr","join"],"mappings":"AAAA;AACAA,MAAM,CAACC,OAAP,GAAiB;AACf;AACA,oBAAkB,SAASC,cAAT,CAAyBC,MAAzB,EAAiCC,EAAjC,EAAqC;AACrD;AACA,QAAIC,OAAO,GAAG,EAAd;AAAA,QACIC,WAAW,GAAG,KADlB,CAFqD,CAKrD;AACA;;AACAH,IAAAA,MAAM,CAACI,EAAP,CAAU,MAAV,EAAkB,UAAUC,KAAV,EAAiB;AACjC,UAAIC,SAAS,GAAGD,KAAK,CAACE,QAAN,CAAe,QAAf,CAAhB;AACAL,MAAAA,OAAO,CAACM,IAAR,CAAaF,SAAb;AACD,KAHD,EAPqD,CAYrD;AACA;;AACAN,IAAAA,MAAM,CAACI,EAAP,CAAU,OAAV,EAAmB,UAAUK,GAAV,EAAe;AAChC;AACA,UAAI,CAACN,WAAL,EAAkB;AAChB;AACAA,QAAAA,WAAW,GAAG,IAAd;AACAF,QAAAA,EAAE,CAACQ,GAAD,CAAF;AACD,OAJD,MAIO;AACP;AACEC,QAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;AACF,KAVD,EAdqD,CA0BrD;;AACAT,IAAAA,MAAM,CAACI,EAAP,CAAU,KAAV,EAAiB,YAAY;AAC3B;AACA,UAAID,WAAJ,EAAiB;AACf;AACD,OAJ0B,CAM3B;;;AACA,UAAIS,MAAM,GAAGV,OAAO,CAACW,IAAR,CAAa,EAAb,CAAb;AACAZ,MAAAA,EAAE,CAAC,IAAD,EAAOW,MAAP,CAAF;AACD,KATD;AAUD;AAvCc,CAAjB","sourcesContent":["// Generate our exports\nmodule.exports = {\n  // I know -- every time this code runs, god kills a kitten\n  'streamToString': function streamToString (stream, cb) {\n    // Generate imgData to store chunks\n    var imgData = [],\n        errOccurred = false;\n\n    // On data, add it to imgData\n    // Note: We must save in 'binary' since utf8 strings don't support any possible character that a file might use\n    stream.on('data', function (chunk) {\n      var binaryStr = chunk.toString('binary');\n      imgData.push(binaryStr);\n    });\n\n    // DEV: Originally, this collected errors for stream.on('end') but Cairo won't callback on error =(\n    // On error\n    stream.on('error', function (err) {\n      // If this is the first error\n      if (!errOccurred) {\n        // Make a note that it occurred and callback\n        errOccurred = true;\n        cb(err);\n      } else {\n      // Otherwise, abandon ship and notify the user\n        console.error('MULTIPLE SPRITESMTIH ERRORS: ', err);\n      }\n    });\n\n    // When complete\n    stream.on('end', function () {\n      // If there was an error, do nothing (callback already fired)\n      if (errOccurred) {\n        return;\n      }\n\n      // Otherwise, join together image data and callback\n      var retStr = imgData.join('');\n      cb(null, retStr);\n    });\n  }\n};"]},"metadata":{},"sourceType":"script"}