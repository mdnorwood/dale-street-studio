{"ast":null,"code":"import _defineProperty from\"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/T7/Sites/music-site/dale-street-studio-music/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import Switch from'rc-switch';import React,{useEffect}from'react';import ReactJkMusicPlayer from'react-jinke-music-player';import'react-jinke-music-player/assets/index.css';import{MusicPlayerButtonList,MusicPlayerListButton}from'./music-player.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var topPosition=40;var leftPosition=140;var audioList1=[{name:'Slow It Down - Hybrid Master',singer:'M.D. Norwood',cover:'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FSlowItDown.jpg?alt=media&token=6978deb7-a7de-41cc-9c26-4585a1c090ba',musicSrc:'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSlow-It-Down-Analog-Master.wav?alt=media&token=68be23f4-78f0-4e0f-9ecc-71bd45cca3ad'// support async fetch music src. eg.\n// musicSrc: async () => {\n//   return await fetch('/api')\n// },\n},{name:'Small Wonders',singer:'The Jam - Master',cover:'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FSWs.jpeg?alt=media&token=2922d128-b04f-49ea-ab0e-bf3cc6ea873d',musicSrc:'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSmall-Wonders-The-Jam-MASTER.wav?alt=media&token=28fc0158-2f0f-4149-9928-9915d2c22e2e'},{name:'The Low Mids',singer:'Moonlight - Hybrid Master',cover:'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FLow-Mids-Moonlight.png?alt=media&token=8f07993d-37b3-467a-82bd-989e15cea7d2',musicSrc:'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FLow-Mids-feat-SteelyDanimal-Moonlight-Master.wav?alt=media&token=2b6e5a8c-99a7-4396-a574-861b8850cdd3 '},{name:'S.T.E.V.E.',singer:'Bright Sized Life - Master',cover:'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2Fjazz.png?alt=media&token=ca292504-027e-4920-b34a-6bf694d30a62',musicSrc:'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FBright-Sized-Life-Jazz-Analog-Master.wav?alt=media&token=e19c975a-8f38-4235-a389-a8ac5b710465'}];var options={// audio lists model\naudioLists:audioList1,// default play index of the audio player  [type `number` default `0`]\ndefaultPlayIndex:0,// if you want dynamic change current play audio you can change it [type `number` default `0`]\n// playIndex: 0,\n// color of the music player theme    [ type: 'light' | 'dark' | 'auto'  default `dark` ]\ntheme:'auto',// Specifies movement boundaries. Accepted values:\n// - `parent` restricts movement within the node's offsetParent\n//    (nearest node with position relative or absolute), or\n// - a selector, restricts movement within the targeted node\n// - An object with `left, top, right, and bottom` properties.\n//   These indicate how far in each direction the draggable\n//   can be moved.\n// Ref: https://github.com/STRML/react-draggable#draggable-api\nbounds:'body',/**\n   * Don't interrupt current playing state when audio list updated\n   * audioLists eg. (A) is current playing...\n   * [A,B] => [A,C,B]\n   * [A,B] => [A,B,C]\n   *\n   * if (A) not in updated audio lists\n   * [A,B] => [C]\n   * (C) is playing\n   */ // [type `boolean`, default `false`]\nquietUpdate:false,// Replace a new playlist with the first loaded playlist\n// instead of adding it at the end of it.\n// [type `boolean`, default `false`]\nclearPriorAudioLists:false,// Play your new play list right after your new play list is loaded turn false.\n// [type `boolean`, default `false`]\nautoPlayInitLoadPlayList:false,// Whether to load audio immediately after the page loads.  [type `Boolean | String`, default `false`]\n// \"auto|metadata|none\" \"true| false\"\npreload:false,// Whether the player's background displays frosted glass effect  [type `Boolean`, default `false`]\nglassBg:true,// The next time you access the player, do you keep the last state  [type `Boolean` default `false`]\nremember:false,// The Audio Can be deleted  [type `Boolean`, default `true`]\nremove:true,// audio controller initial position    [ type `Object` default '{top:0,left:0}' ]\ndefaultPosition:{left:leftPosition,top:topPosition},// if you want dynamic change current play mode you can change it\n// [type`order | orderLoop | singleLoop | shufflePlay`, default `order`]\n// playMode: 'order',\ndefaultPlayMode:'order',// audio mode        mini | full          [type `String`  default `mini`]\nmode:'mini',/**\n   * [ type `Boolean` default 'false' ]\n   * The default audioPlay handle function will be played again after each pause, If you only want to trigger it once, you can set 'true'\n   */once:false,// Whether the audio is played after loading is completed. [type `Boolean` default 'true']\nautoPlay:false,// Whether you can switch between two modes, full => mini  or mini => full   [type 'Boolean' default 'true']\ntoggleMode:true,// audio cover is show of the \"mini\" mode [type `Boolean` default 'true']\nshowMiniModeCover:true,// audio playing progress is show of the \"mini\"  mode\nshowMiniProcessBar:false,// audio controller is can be drag of the \"mini\" mode     [type `Boolean` default `true`]\ndrag:true,// drag the audio progress bar [type `Boolean` default `true`]\nseeked:true,// Display chrome media session.  [type `Boolean` default `false`]\nshowMediaSession:true,// Displays the audio load progress bar.  [type `Boolean` default `true`]\nshowProgressLoadBar:true,// play button display of the audio player panel   [type `Boolean` default `true`]\nshowPlay:true,// reload button display of the audio player panel   [type `Boolean` default `true`]\nshowReload:true,// download button display of the audio player panel   [type `Boolean` default `true`]\nshowDownload:false,// loop button display of the audio player panel   [type `Boolean` default `true`]\nshowPlayMode:true,// theme toggle switch  display of the audio player panel   [type `Boolean` default `true`]\nshowThemeSwitch:true,// lyric display of the audio player panel   [type `Boolean` default `false`]\nshowLyric:false,// destroy player button display  [type `Boolean` default `false`]\nshowDestroy:false,// Extensible custom content       [type 'Array' default '-' ]\nextendsContent:null,// default volume of the audio player [type `Number` default `1` range `0-1`]\ndefaultVolume:1,// playModeText show time [type `Number(ms)` default `700`]\nplayModeShowTime:600,// Whether to try playing the next audio when the current audio playback fails [type `Boolean` default `true`]\nloadAudioErrorPlayNext:true,// Auto hide the cover photo if no cover photo is available [type `Boolean` default `false`]\nautoHiddenCover:false,// Play and pause audio through blank space [type `Boolean` default `false`]\nspaceBar:true,// Enable responsive player, auto toggle desktop and mobile [type `Boolean` default `true`]\nresponsive:true,/**\n   * Custom mobile media query string, eg use the mobile version UI on iPad.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   * [type `String` default '(max-width: 768px) and (orientation : portrait)']\n   */mobileMediaQuery:'(max-width: 1024px)',// Audio volume with fade in and fade out [type `{ fadeIn: number, fadeOut: number }` default `{ fadeIn: 0, fadeOut: 0 }`]\nvolumeFade:{fadeIn:1000,fadeOut:1000},// https://github.com/SortableJS/Sortable#options\nsortableOptions:{},// Music is downloaded handle\nonAudioDownload:function onAudioDownload(audioInfo){console.log('audio download',audioInfo);},// audio play handle\nonAudioPlay:function onAudioPlay(audioInfo){console.log('audio playing',audioInfo);},// audio pause handle\nonAudioPause:function onAudioPause(audioInfo){console.log('audio pause',audioInfo);},// When the user has moved/jumped to a new location in audio\nonAudioSeeked:function onAudioSeeked(audioInfo){console.log('audio seeked',audioInfo);},// When the volume has changed  min = 0.0  max = 1.0\nonAudioVolumeChange:function onAudioVolumeChange(currentVolume){console.log('audio volume change',currentVolume);},// The single song is ended handle\nonAudioEnded:function onAudioEnded(currentPlayId,audioLists,audioInfo){console.log('audio ended',currentPlayId,audioLists,audioInfo);},// audio load abort\nonAudioAbort:function onAudioAbort(currentPlayId,audioLists,audioInfo){console.log('audio abort',currentPlayId,audioLists,audioInfo);},// audio play progress handle\n// eslint-disable-next-line no-unused-vars\nonAudioProgress:function onAudioProgress(audioInfo){// console.log('audio progress', audioInfo)\n},// audio reload handle\nonAudioReload:function onAudioReload(audioInfo){console.log('audio reload:',audioInfo);},// audio load failed error handle\nonAudioError:function onAudioError(errMsg,currentPlayId,audioLists,audioInfo){console.error('audio error',errMsg,currentPlayId,audioLists,audioInfo);},// theme change handle\n// onThemeChange(theme) {\n//   console.log('theme change:', theme)\n// },\nonAudioListsChange:function onAudioListsChange(currentPlayId,audioLists,audioInfo){console.log('audio lists change:',currentPlayId,audioLists,audioInfo);},onAudioPlayTrackChange:function onAudioPlayTrackChange(currentPlayId,audioLists,audioInfo){console.log('audio play track change:',currentPlayId,audioLists,audioInfo);},// onPlayModeChange(playMode) {\n//   console.log('play mode change:', playMode)\n// },\n// onModeChange(mode) {\n//   console.log('mode change:', mode)\n// },\nonAudioListsPanelChange:function onAudioListsPanelChange(panelVisible){console.log('audio lists panel visible:',panelVisible);},onAudioListsSortEnd:function onAudioListsSortEnd(oldIndex,newIndex){console.log('audio lists sort end:',oldIndex,newIndex);},onAudioLyricChange:function onAudioLyricChange(lineNum,currentLyric){console.log('audio lyric change:',lineNum,currentLyric);},// custom music player root node\ngetContainer:function getContainer(){return document.body;},/**\n   * @description get origin audio element instance , you can use it do everything\n   * @example\n   * audio.playbackRate = 1.5  // set play back rate\n   * audio.crossOrigin = 'xxx' // config cross origin\n   */getAudioInstance:function getAudioInstance(audio){console.log('audio instance',audio);},onBeforeDestroy:function onBeforeDestroy(currentPlayId,audioLists,audioInfo){console.log('onBeforeDestroy currentPlayId: ',currentPlayId);console.log('onBeforeDestroy audioLists: ',audioLists);console.log('onBeforeDestroy audioInfo: ',audioInfo);return new Promise(function(resolve,reject){// your custom validate\n// eslint-disable-next-line no-alert\nif(window.confirm('Are you confirm destroy the player?')){// if resolve, player destroyed\nresolve();}else{// if reject, skip.\nreject();}});},onDestroyed:function onDestroyed(currentPlayId,audioLists,audioInfo){console.log('onDestroyed:',currentPlayId,audioLists,audioInfo);},onCoverClick:function onCoverClick(mode,audioLists,audioInfo){console.log('onCoverClick: ',mode,audioLists,audioInfo);}// custom audio title\n// renderAudioTitle(audioInfo) {\n//   return <a href=\"#\">{audioInfo.name}</a>\n// },\n// onPlayIndexChange (playIndex) {\n//   console.log('onPlayIndexChange: ', playIndex);\n// }\n// transform audio info like return a Promise\n/**\n   * @return\n   *  {\n   *    src: 'xxx',\n   *    filename: 'xxx',\n   *    mimeType: 'xxx'\n   *  }\n   */ // onBeforeAudioDownload() {\n//   return Promise.resolve({\n//     src: '1.mp3',\n//   })\n// },\n/**\n   * customer download handler\n   * eg. a link , or https://www.npmjs.com/package/file-saver\n   * @param {*} downloadInfo\n   * @example\n   *\n        customDownloader(downloadInfo) {\n        const link = document.createElement('a')\n        link.href = downloadInfo.src\n        link.download = downloadInfo.filename || 'test'\n        document.body.appendChild(link)\n        link.click()\n      },\n   */ // customDownloader(downloadInfo) {\n//   console.log(downloadInfo.src)\n//   console.log(downloadInfo.filename)\n//   console.log(downloadInfo.mimeType)\n// },\n};var MusicPlayer=/*#__PURE__*/function(_React$PureComponent){_inherits(MusicPlayer,_React$PureComponent);var _super=_createSuper(MusicPlayer);function MusicPlayer(props){var _this;_classCallCheck(this,MusicPlayer);_this=_super.call(this,props);_this.state={unmount:false,params:_objectSpread(_objectSpread({},options),{},{getAudioInstance:function getAudioInstance(audio){_this.audio=audio;}}),screenWidth:null,updateWindowDimensions:_this.updateWindowDimensions.bind(_assertThisInitialized(_this))};_this.onAddAudio=function(){_this.updateParams({clearPriorAudioLists:false,audioLists:[].concat(_toConsumableArray(_this.state.params.audioLists),[{name:\"I'm new here\",singer:'jack',cover:'http://www.lijinke.cn/music/1387583682387727.jpg',musicSrc:\"http://www.lijinke.cn/music/\".concat(Date.now(),\".mp3\")}])});};_this.extendsContent=function(){_this.updateParams({extendsContent:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){// eslint-disable-next-line no-alert\nalert(\"I'm extends content\");},children:\"button\"})});};_this.onAutoPlayMode=function(){_this.updateParams({autoPlay:!_this.state.params.autoPlay});};_this.onAutoPlayInitLoadPlayList=function(){_this.updateParams({autoPlayInitLoadPlayList:!_this.state.params.autoPlayInitLoadPlayList});};_this.onClearPriorAudioLists=function(){_this.updateParams({clearPriorAudioLists:!_this.state.params.clearPriorAudioLists});};_this.onShowGlassBg=function(){_this.onChangeKey('glassBg');};_this.onDrag=function(){_this.onChangeKey('drag');};_this.onToggleMode=function(){_this.onChangeKey('toggleMode');};_this.onSeeked=function(){_this.onChangeKey('seeked');};_this.onChangeKey=function(key){var data=_objectSpread(_objectSpread({},_this.state.params),{},_defineProperty({},key,!_this.state.params[key]));if(key==='light'||key==='dark'){data.theme=key;}if(key==='full'||key==='mini'){data.mode=key;}_this.setState({params:data});};_this.showMiniProcessBar=function(){_this.onChangeKey('showMiniProcessBar');};_this.showMiniModeCover=function(){_this.onChangeKey('showMiniModeCover');};_this.updateParams=function(params){var data=_objectSpread(_objectSpread({},_this.state.params),params);_this.setState({params:data});};_this.unmountPlayer=function(){_this.setState({unmount:true});};_this.onPlayModeChange=function(e){_this.updateParams({playMode:e.target.value});};_this.audio={};return _this;}_createClass(MusicPlayer,[{key:\"componentDidMount\",value:function componentDidMount(){window.addEventListener(\"resize\",this.updateWindowDimensions());}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener(\"resize\",this.updateWindowDimensions);}},{key:\"updateWindowDimensions\",value:function updateWindowDimensions(){this.setState({screenWidth:window.innerWidth});}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,params=_this$state.params,unmount=_this$state.unmount;return/*#__PURE__*/_jsxs(\"div\",{children:[params.mode==='full'?/*#__PURE__*/_jsx(MusicPlayerButtonList,{children:/*#__PURE__*/_jsx(\"section\",{className:\"settings\",children:/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center'},children:\"Mastered by Dale St. Studio\"})})}):/*#__PURE__*/_jsx(\"div\",{style:{display:'none'}}),unmount?null:/*#__PURE__*/_jsx(ReactJkMusicPlayer,_objectSpread(_objectSpread({},params),{},{onThemeChange:function onThemeChange(theme){console.log('onThemeChange: ',theme);_this2.updateParams({theme:theme});},onModeChange:function onModeChange(mode){console.log('onModeChange: ',mode);_this2.updateParams({mode:mode});},onPlayModeChange:function onPlayModeChange(playMode){console.log('onPlayModeChange: ',playMode);_this2.updateParams({playMode:playMode});},onPlayIndexChange:function onPlayIndexChange(playIndex){console.log('onPlayIndexChange: ',playIndex);_this2.updateParams({playIndex:playIndex});}}))]});}}]);return MusicPlayer;}(React.PureComponent);;export default MusicPlayer;","map":{"version":3,"sources":["/Volumes/T7/Sites/music-site/dale-street-studio-music/client/src/components/music-player/music-player.component.jsx"],"names":["Switch","React","useEffect","ReactJkMusicPlayer","MusicPlayerButtonList","MusicPlayerListButton","topPosition","leftPosition","audioList1","name","singer","cover","musicSrc","options","audioLists","defaultPlayIndex","theme","bounds","quietUpdate","clearPriorAudioLists","autoPlayInitLoadPlayList","preload","glassBg","remember","remove","defaultPosition","left","top","defaultPlayMode","mode","once","autoPlay","toggleMode","showMiniModeCover","showMiniProcessBar","drag","seeked","showMediaSession","showProgressLoadBar","showPlay","showReload","showDownload","showPlayMode","showThemeSwitch","showLyric","showDestroy","extendsContent","defaultVolume","playModeShowTime","loadAudioErrorPlayNext","autoHiddenCover","spaceBar","responsive","mobileMediaQuery","volumeFade","fadeIn","fadeOut","sortableOptions","onAudioDownload","audioInfo","console","log","onAudioPlay","onAudioPause","onAudioSeeked","onAudioVolumeChange","currentVolume","onAudioEnded","currentPlayId","onAudioAbort","onAudioProgress","onAudioReload","onAudioError","errMsg","error","onAudioListsChange","onAudioPlayTrackChange","onAudioListsPanelChange","panelVisible","onAudioListsSortEnd","oldIndex","newIndex","onAudioLyricChange","lineNum","currentLyric","getContainer","document","body","getAudioInstance","audio","onBeforeDestroy","Promise","resolve","reject","window","confirm","onDestroyed","onCoverClick","MusicPlayer","props","state","unmount","params","screenWidth","updateWindowDimensions","bind","onAddAudio","updateParams","Date","now","alert","onAutoPlayMode","onAutoPlayInitLoadPlayList","onClearPriorAudioLists","onShowGlassBg","onChangeKey","onDrag","onToggleMode","onSeeked","key","data","setState","unmountPlayer","onPlayModeChange","e","playMode","target","value","addEventListener","removeEventListener","innerWidth","textAlign","display","playIndex","PureComponent"],"mappings":"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","sourcesContent":["import Switch from 'rc-switch';\nimport React, { useEffect } from 'react';\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\nimport 'react-jinke-music-player/assets/index.css';\nimport { MusicPlayerButtonList, MusicPlayerListButton } from './music-player.styles';\n\nlet topPosition = 40;\nlet leftPosition = 140;\n\n\nconst audioList1 = [\n  {\n    name: 'Slow It Down - Hybrid Master',\n    singer: 'M.D. Norwood',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FSlowItDown.jpg?alt=media&token=6978deb7-a7de-41cc-9c26-4585a1c090ba',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSlow-It-Down-Analog-Master.wav?alt=media&token=68be23f4-78f0-4e0f-9ecc-71bd45cca3ad',\n    // support async fetch music src. eg.\n    // musicSrc: async () => {\n    //   return await fetch('/api')\n    // },\n  },\n  {\n    name: 'Small Wonders',\n    singer: 'The Jam - Master',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FSWs.jpeg?alt=media&token=2922d128-b04f-49ea-ab0e-bf3cc6ea873d',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FSmall-Wonders-The-Jam-MASTER.wav?alt=media&token=28fc0158-2f0f-4149-9928-9915d2c22e2e',\n  },\n  {\n    name: 'The Low Mids',\n    singer: 'Moonlight - Hybrid Master',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2FLow-Mids-Moonlight.png?alt=media&token=8f07993d-37b3-467a-82bd-989e15cea7d2',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FLow-Mids-feat-SteelyDanimal-Moonlight-Master.wav?alt=media&token=2b6e5a8c-99a7-4396-a574-861b8850cdd3 ',\n  },\n  {\n    name: 'S.T.E.V.E.',\n    singer: 'Bright Sized Life - Master',\n    cover:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/images%2Fjazz.png?alt=media&token=ca292504-027e-4920-b34a-6bf694d30a62',\n    musicSrc:\n      'https://firebasestorage.googleapis.com/v0/b/definition-music-and-mastering.appspot.com/o/wavs%2FBright-Sized-Life-Jazz-Analog-Master.wav?alt=media&token=e19c975a-8f38-4235-a389-a8ac5b710465',\n  },\n]\n\n\n\n\n\nconst options = {\n  // audio lists model\n  audioLists: audioList1,\n\n  // default play index of the audio player  [type `number` default `0`]\n  defaultPlayIndex: 0,\n\n  // if you want dynamic change current play audio you can change it [type `number` default `0`]\n  // playIndex: 0,\n\n  // color of the music player theme    [ type: 'light' | 'dark' | 'auto'  default `dark` ]\n  theme: 'auto',\n\n  // Specifies movement boundaries. Accepted values:\n  // - `parent` restricts movement within the node's offsetParent\n  //    (nearest node with position relative or absolute), or\n  // - a selector, restricts movement within the targeted node\n  // - An object with `left, top, right, and bottom` properties.\n  //   These indicate how far in each direction the draggable\n  //   can be moved.\n  // Ref: https://github.com/STRML/react-draggable#draggable-api\n  bounds: 'body',\n\n  /**\n   * Don't interrupt current playing state when audio list updated\n   * audioLists eg. (A) is current playing...\n   * [A,B] => [A,C,B]\n   * [A,B] => [A,B,C]\n   *\n   * if (A) not in updated audio lists\n   * [A,B] => [C]\n   * (C) is playing\n   */\n  // [type `boolean`, default `false`]\n  quietUpdate: false,\n\n  // Replace a new playlist with the first loaded playlist\n  // instead of adding it at the end of it.\n  // [type `boolean`, default `false`]\n  clearPriorAudioLists: false,\n\n  // Play your new play list right after your new play list is loaded turn false.\n  // [type `boolean`, default `false`]\n  autoPlayInitLoadPlayList: false,\n\n  // Whether to load audio immediately after the page loads.  [type `Boolean | String`, default `false`]\n  // \"auto|metadata|none\" \"true| false\"\n  preload: false,\n\n  // Whether the player's background displays frosted glass effect  [type `Boolean`, default `false`]\n  glassBg: true,\n\n  // The next time you access the player, do you keep the last state  [type `Boolean` default `false`]\n  remember: false,\n\n  // The Audio Can be deleted  [type `Boolean`, default `true`]\n  remove: true,\n\n  // audio controller initial position    [ type `Object` default '{top:0,left:0}' ]\n\n  defaultPosition: {\n    left: leftPosition,\n    top: topPosition,\n  },\n\n  // if you want dynamic change current play mode you can change it\n  // [type`order | orderLoop | singleLoop | shufflePlay`, default `order`]\n  // playMode: 'order',\n  defaultPlayMode: 'order',\n\n  // audio mode        mini | full          [type `String`  default `mini`]\n  mode: 'mini',\n\n  /**\n   * [ type `Boolean` default 'false' ]\n   * The default audioPlay handle function will be played again after each pause, If you only want to trigger it once, you can set 'true'\n   */\n  once: false,\n\n  // Whether the audio is played after loading is completed. [type `Boolean` default 'true']\n  autoPlay: false,\n\n  // Whether you can switch between two modes, full => mini  or mini => full   [type 'Boolean' default 'true']\n  toggleMode: true,\n\n  // audio cover is show of the \"mini\" mode [type `Boolean` default 'true']\n  showMiniModeCover: true,\n\n  // audio playing progress is show of the \"mini\"  mode\n  showMiniProcessBar: false,\n\n  // audio controller is can be drag of the \"mini\" mode     [type `Boolean` default `true`]\n  drag: true,\n\n  // drag the audio progress bar [type `Boolean` default `true`]\n  seeked: true,\n\n  // Display chrome media session.  [type `Boolean` default `false`]\n  showMediaSession: true,\n\n  // Displays the audio load progress bar.  [type `Boolean` default `true`]\n  showProgressLoadBar: true,\n\n  // play button display of the audio player panel   [type `Boolean` default `true`]\n  showPlay: true,\n\n  // reload button display of the audio player panel   [type `Boolean` default `true`]\n  showReload: true,\n\n  // download button display of the audio player panel   [type `Boolean` default `true`]\n  showDownload: false,\n\n  // loop button display of the audio player panel   [type `Boolean` default `true`]\n  showPlayMode: true,\n\n  // theme toggle switch  display of the audio player panel   [type `Boolean` default `true`]\n  showThemeSwitch: true,\n\n  // lyric display of the audio player panel   [type `Boolean` default `false`]\n  showLyric: false,\n\n  // destroy player button display  [type `Boolean` default `false`]\n  showDestroy: false,\n\n  // Extensible custom content       [type 'Array' default '-' ]\n  extendsContent: null,\n\n  // default volume of the audio player [type `Number` default `1` range `0-1`]\n  defaultVolume: 1,\n\n  // playModeText show time [type `Number(ms)` default `700`]\n  playModeShowTime: 600,\n\n  // Whether to try playing the next audio when the current audio playback fails [type `Boolean` default `true`]\n  loadAudioErrorPlayNext: true,\n\n  // Auto hide the cover photo if no cover photo is available [type `Boolean` default `false`]\n  autoHiddenCover: false,\n\n  // Play and pause audio through blank space [type `Boolean` default `false`]\n  spaceBar: true,\n\n\n\n  // Enable responsive player, auto toggle desktop and mobile [type `Boolean` default `true`]\n  responsive: true,\n\n  /**\n   * Custom mobile media query string, eg use the mobile version UI on iPad.\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n   * [type `String` default '(max-width: 768px) and (orientation : portrait)']\n   */\n  mobileMediaQuery: '(max-width: 1024px)',\n\n  // Audio volume with fade in and fade out [type `{ fadeIn: number, fadeOut: number }` default `{ fadeIn: 0, fadeOut: 0 }`]\n  volumeFade: {\n    fadeIn: 1000,\n    fadeOut: 1000,\n  },\n\n  // https://github.com/SortableJS/Sortable#options\n  sortableOptions: {},\n\n  // Music is downloaded handle\n  onAudioDownload(audioInfo) {\n    console.log('audio download', audioInfo)\n  },\n\n  // audio play handle\n  onAudioPlay(audioInfo) {\n    console.log('audio playing', audioInfo)\n  },\n\n  // audio pause handle\n  onAudioPause(audioInfo) {\n    console.log('audio pause', audioInfo)\n  },\n\n  // When the user has moved/jumped to a new location in audio\n  onAudioSeeked(audioInfo) {\n    console.log('audio seeked', audioInfo)\n  },\n\n  // When the volume has changed  min = 0.0  max = 1.0\n  onAudioVolumeChange(currentVolume) {\n    console.log('audio volume change', currentVolume)\n  },\n\n  // The single song is ended handle\n  onAudioEnded(currentPlayId, audioLists, audioInfo) {\n    console.log('audio ended', currentPlayId, audioLists, audioInfo)\n  },\n\n  // audio load abort\n  onAudioAbort(currentPlayId, audioLists, audioInfo) {\n    console.log('audio abort', currentPlayId, audioLists, audioInfo)\n  },\n\n  // audio play progress handle\n  // eslint-disable-next-line no-unused-vars\n  onAudioProgress(audioInfo) {\n    // console.log('audio progress', audioInfo)\n  },\n\n  // audio reload handle\n  onAudioReload(audioInfo) {\n    console.log('audio reload:', audioInfo)\n  },\n\n  // audio load failed error handle\n  onAudioError(errMsg, currentPlayId, audioLists, audioInfo) {\n    console.error('audio error', errMsg, currentPlayId, audioLists, audioInfo)\n  },\n\n  // theme change handle\n  // onThemeChange(theme) {\n  //   console.log('theme change:', theme)\n  // },\n\n  onAudioListsChange(currentPlayId, audioLists, audioInfo) {\n    console.log('audio lists change:', currentPlayId, audioLists, audioInfo)\n  },\n\n  onAudioPlayTrackChange(currentPlayId, audioLists, audioInfo) {\n    console.log(\n      'audio play track change:',\n      currentPlayId,\n      audioLists,\n      audioInfo,\n    )\n  },\n\n  // onPlayModeChange(playMode) {\n  //   console.log('play mode change:', playMode)\n  // },\n\n  // onModeChange(mode) {\n  //   console.log('mode change:', mode)\n  // },\n\n  onAudioListsPanelChange(panelVisible) {\n    console.log('audio lists panel visible:', panelVisible)\n  },\n\n  onAudioListsSortEnd(oldIndex, newIndex) {\n    console.log('audio lists sort end:', oldIndex, newIndex)\n  },\n\n  onAudioLyricChange(lineNum, currentLyric) {\n    console.log('audio lyric change:', lineNum, currentLyric)\n  },\n\n  // custom music player root node\n  getContainer() {\n    return document.body\n  },\n\n  /**\n   * @description get origin audio element instance , you can use it do everything\n   * @example\n   * audio.playbackRate = 1.5  // set play back rate\n   * audio.crossOrigin = 'xxx' // config cross origin\n   */\n  getAudioInstance(audio) {\n    console.log('audio instance', audio)\n  },\n\n  onBeforeDestroy(currentPlayId, audioLists, audioInfo) {\n    console.log('onBeforeDestroy currentPlayId: ', currentPlayId)\n    console.log('onBeforeDestroy audioLists: ', audioLists)\n    console.log('onBeforeDestroy audioInfo: ', audioInfo)\n    return new Promise((resolve, reject) => {\n      // your custom validate\n      // eslint-disable-next-line no-alert\n      if (window.confirm('Are you confirm destroy the player?')) {\n        // if resolve, player destroyed\n        resolve()\n      } else {\n        // if reject, skip.\n        reject()\n      }\n    })\n  },\n\n  onDestroyed(currentPlayId, audioLists, audioInfo) {\n    console.log('onDestroyed:', currentPlayId, audioLists, audioInfo)\n  },\n\n  onCoverClick(mode, audioLists, audioInfo) {\n    console.log('onCoverClick: ', mode, audioLists, audioInfo)\n  },\n\n  // custom audio title\n  // renderAudioTitle(audioInfo) {\n  //   return <a href=\"#\">{audioInfo.name}</a>\n  // },\n\n  // onPlayIndexChange (playIndex) {\n  //   console.log('onPlayIndexChange: ', playIndex);\n  // }\n\n  // transform audio info like return a Promise\n\n  /**\n   * @return\n   *  {\n   *    src: 'xxx',\n   *    filename: 'xxx',\n   *    mimeType: 'xxx'\n   *  }\n   */\n  // onBeforeAudioDownload() {\n  //   return Promise.resolve({\n  //     src: '1.mp3',\n  //   })\n  // },\n\n  /**\n   * customer download handler\n   * eg. a link , or https://www.npmjs.com/package/file-saver\n   * @param {*} downloadInfo\n   * @example\n   *\n        customDownloader(downloadInfo) {\n        const link = document.createElement('a')\n        link.href = downloadInfo.src\n        link.download = downloadInfo.filename || 'test'\n        document.body.appendChild(link)\n        link.click()\n      },\n   */\n  // customDownloader(downloadInfo) {\n  //   console.log(downloadInfo.src)\n  //   console.log(downloadInfo.filename)\n  //   console.log(downloadInfo.mimeType)\n  // },\n}\n\nclass MusicPlayer extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.audio = {}\n  }\n\n  state = {\n    unmount: false,\n    params: {\n      ...options,\n      getAudioInstance: (audio) => {\n        this.audio = audio\n      },\n    },\n    screenWidth: null,\n    updateWindowDimensions: this.updateWindowDimensions.bind(this),\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWindowDimensions());\n}\n\ncomponentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions)\n}\n\nupdateWindowDimensions() {\n   this.setState({ screenWidth: window.innerWidth });\n}\n\n  onAddAudio = () => {\n    this.updateParams({\n      clearPriorAudioLists: false,\n      audioLists: [\n        ...this.state.params.audioLists,\n        {\n          name: \"I'm new here\",\n          singer: 'jack',\n          cover: 'http://www.lijinke.cn/music/1387583682387727.jpg',\n          musicSrc: `http://www.lijinke.cn/music/${Date.now()}.mp3`,\n        },\n      ],\n    })\n  }\n\n  extendsContent = () => {\n    this.updateParams({\n      extendsContent: (\n        <button\n          type=\"button\"\n          onClick={() => {\n            // eslint-disable-next-line no-alert\n            alert(\"I'm extends content\")\n          }}\n        >\n          button\n        </button>\n      ),\n    })\n  }\n\n\n  \n\n  onAutoPlayMode = () => {\n    this.updateParams({\n      autoPlay: !this.state.params.autoPlay,\n    })\n  }\n\n  onAutoPlayInitLoadPlayList = () => {\n    this.updateParams({\n      autoPlayInitLoadPlayList: !this.state.params.autoPlayInitLoadPlayList,\n    })\n  }\n\n  onClearPriorAudioLists = () => {\n    this.updateParams({\n      clearPriorAudioLists: !this.state.params.clearPriorAudioLists,\n    })\n  }\n\n  onShowGlassBg = () => {\n    this.onChangeKey('glassBg')\n  }\n\n  onDrag = () => {\n    this.onChangeKey('drag')\n  }\n\n  onToggleMode = () => {\n    this.onChangeKey('toggleMode')\n  }\n\n  onSeeked = () => {\n    this.onChangeKey('seeked')\n  }\n\n  onChangeKey = (key) => {\n    const data = {\n      ...this.state.params,\n      [key]: !this.state.params[key],\n    }\n    if (key === 'light' || key === 'dark') {\n      data.theme = key\n    }\n    if (key === 'full' || key === 'mini') {\n      data.mode = key\n    }\n    this.setState({ params: data })\n  }\n\n  showMiniProcessBar = () => {\n    this.onChangeKey('showMiniProcessBar')\n  }\n\n  showMiniModeCover = () => {\n    this.onChangeKey('showMiniModeCover')\n  }\n\n  updateParams = (params) => {\n    const data = {\n      ...this.state.params,\n      ...params,\n    }\n    this.setState({\n      params: data,\n    })\n  }\n\n  unmountPlayer = () => {\n    this.setState({ unmount: true })\n  }\n\n  onPlayModeChange = (e) => {\n    this.updateParams({ playMode: e.target.value })\n  }\n  \n\n\n\n  render() {\n    const { params, unmount } = this.state\n\n    return (\n      <div>\n      {(params.mode === 'full') ? (\n        <MusicPlayerButtonList>\n        <section className=\"settings\">\n        <h2 style={{textAlign: 'center'}}>Mastered by Dale St. Studio</h2>\n          \n      </section>\n      </MusicPlayerButtonList>\n      ) : (\n        <div style={{ display: 'none'}}></div>\n      )}\n\n    {unmount ? null : (\n      <ReactJkMusicPlayer\n        {...params}\n        onThemeChange={(theme) => {\n          console.log('onThemeChange: ', theme)\n          this.updateParams({ theme })\n        }}\n        onModeChange={(mode) => {\n          console.log('onModeChange: ', mode)\n          this.updateParams({ mode })\n        }}\n        onPlayModeChange={(playMode) => {\n          console.log('onPlayModeChange: ', playMode)\n          this.updateParams({ playMode })\n        }}\n        onPlayIndexChange={(playIndex) => {\n          console.log('onPlayIndexChange: ', playIndex)\n          this.updateParams({ playIndex })\n        }}\n      />\n    )}\n      </div>\n    )\n  }\n};\n \nexport default MusicPlayer;"]},"metadata":{},"sourceType":"module"}