{"ast":null,"code":"\"use strict\"; // Adam 7\n//   0 1 2 3 4 5 6 7\n// 0 x 6 4 6 x 6 4 6\n// 1 7 7 7 7 7 7 7 7\n// 2 5 6 5 6 5 6 5 6\n// 3 7 7 7 7 7 7 7 7\n// 4 3 6 4 6 3 6 4 6\n// 5 7 7 7 7 7 7 7 7\n// 6 5 6 5 6 5 6 5 6\n// 7 7 7 7 7 7 7 7 7\n\nvar imagePasses = [{\n  // pass 1 - 1px\n  x: [0],\n  y: [0]\n}, {\n  // pass 2 - 1px\n  x: [4],\n  y: [0]\n}, {\n  // pass 3 - 2px\n  x: [0, 4],\n  y: [4]\n}, {\n  // pass 4 - 4px\n  x: [2, 6],\n  y: [0, 4]\n}, {\n  // pass 5 - 8px\n  x: [0, 2, 4, 6],\n  y: [2, 6]\n}, {\n  // pass 6 - 16px\n  x: [1, 3, 5, 7],\n  y: [0, 2, 4, 6]\n}, {\n  // pass 7 - 32px\n  x: [0, 1, 2, 3, 4, 5, 6, 7],\n  y: [1, 3, 5, 7]\n}];\n\nexports.getImagePasses = function (width, height) {\n  var images = [];\n  var xLeftOver = width % 8;\n  var yLeftOver = height % 8;\n  var xRepeats = (width - xLeftOver) / 8;\n  var yRepeats = (height - yLeftOver) / 8;\n\n  for (var i = 0; i < imagePasses.length; i++) {\n    var pass = imagePasses[i];\n    var passWidth = xRepeats * pass.x.length;\n    var passHeight = yRepeats * pass.y.length;\n\n    for (var j = 0; j < pass.x.length; j++) {\n      if (pass.x[j] < xLeftOver) {\n        passWidth++;\n      } else {\n        break;\n      }\n    }\n\n    for (var _j = 0; _j < pass.y.length; _j++) {\n      if (pass.y[_j] < yLeftOver) {\n        passHeight++;\n      } else {\n        break;\n      }\n    }\n\n    if (passWidth > 0 && passHeight > 0) {\n      images.push({\n        width: passWidth,\n        height: passHeight,\n        index: i\n      });\n    }\n  }\n\n  return images;\n};\n\nexports.getInterlaceIterator = function (width) {\n  return function (x, y, pass) {\n    var outerXLeftOver = x % imagePasses[pass].x.length;\n    var outerX = (x - outerXLeftOver) / imagePasses[pass].x.length * 8 + imagePasses[pass].x[outerXLeftOver];\n    var outerYLeftOver = y % imagePasses[pass].y.length;\n    var outerY = (y - outerYLeftOver) / imagePasses[pass].y.length * 8 + imagePasses[pass].y[outerYLeftOver];\n    return outerX * 4 + outerY * width * 4;\n  };\n};","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/pngjs/lib/interlace.js"],"names":["imagePasses","x","y","exports","getImagePasses","width","height","images","xLeftOver","yLeftOver","xRepeats","yRepeats","i","length","pass","passWidth","passHeight","j","push","index","getInterlaceIterator","outerXLeftOver","outerX","outerYLeftOver","outerY"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// Adam 7\n//   0 1 2 3 4 5 6 7\n// 0 x 6 4 6 x 6 4 6\n// 1 7 7 7 7 7 7 7 7\n// 2 5 6 5 6 5 6 5 6\n// 3 7 7 7 7 7 7 7 7\n// 4 3 6 4 6 3 6 4 6\n// 5 7 7 7 7 7 7 7 7\n// 6 5 6 5 6 5 6 5 6\n// 7 7 7 7 7 7 7 7 7\n\nlet imagePasses = [\n  {\n    // pass 1 - 1px\n    x: [0],\n    y: [0],\n  },\n  {\n    // pass 2 - 1px\n    x: [4],\n    y: [0],\n  },\n  {\n    // pass 3 - 2px\n    x: [0, 4],\n    y: [4],\n  },\n  {\n    // pass 4 - 4px\n    x: [2, 6],\n    y: [0, 4],\n  },\n  {\n    // pass 5 - 8px\n    x: [0, 2, 4, 6],\n    y: [2, 6],\n  },\n  {\n    // pass 6 - 16px\n    x: [1, 3, 5, 7],\n    y: [0, 2, 4, 6],\n  },\n  {\n    // pass 7 - 32px\n    x: [0, 1, 2, 3, 4, 5, 6, 7],\n    y: [1, 3, 5, 7],\n  },\n];\n\nexports.getImagePasses = function (width, height) {\n  let images = [];\n  let xLeftOver = width % 8;\n  let yLeftOver = height % 8;\n  let xRepeats = (width - xLeftOver) / 8;\n  let yRepeats = (height - yLeftOver) / 8;\n  for (let i = 0; i < imagePasses.length; i++) {\n    let pass = imagePasses[i];\n    let passWidth = xRepeats * pass.x.length;\n    let passHeight = yRepeats * pass.y.length;\n    for (let j = 0; j < pass.x.length; j++) {\n      if (pass.x[j] < xLeftOver) {\n        passWidth++;\n      } else {\n        break;\n      }\n    }\n    for (let j = 0; j < pass.y.length; j++) {\n      if (pass.y[j] < yLeftOver) {\n        passHeight++;\n      } else {\n        break;\n      }\n    }\n    if (passWidth > 0 && passHeight > 0) {\n      images.push({ width: passWidth, height: passHeight, index: i });\n    }\n  }\n  return images;\n};\n\nexports.getInterlaceIterator = function (width) {\n  return function (x, y, pass) {\n    let outerXLeftOver = x % imagePasses[pass].x.length;\n    let outerX =\n      ((x - outerXLeftOver) / imagePasses[pass].x.length) * 8 +\n      imagePasses[pass].x[outerXLeftOver];\n    let outerYLeftOver = y % imagePasses[pass].y.length;\n    let outerY =\n      ((y - outerYLeftOver) / imagePasses[pass].y.length) * 8 +\n      imagePasses[pass].y[outerYLeftOver];\n    return outerX * 4 + outerY * width * 4;\n  };\n};\n"]},"metadata":{},"sourceType":"script"}