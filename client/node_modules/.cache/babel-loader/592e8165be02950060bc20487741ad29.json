{"ast":null,"code":"module.exports = {\n  writeUInt8: write_uint8,\n  writeInt8: write_int8,\n  writeUInt16LE: write_uint16_le,\n  writeUInt32LE: write_uint32_le,\n  writeInt16LE: write_int16_le,\n  writeInt32LE: write_int32_le,\n  writeFloatLE: write_float_le,\n  writeDoubleLE: write_double_le,\n  writeUInt16BE: write_uint16_be,\n  writeUInt32BE: write_uint32_be,\n  writeInt16BE: write_int16_be,\n  writeInt32BE: write_int32_be,\n  writeFloatBE: write_float_be,\n  writeDoubleBE: write_double_be\n};\n\nvar map = require('./mapped.js');\n\nfunction write_uint8(target, value, at) {\n  return target[at] = value;\n}\n\nfunction write_int8(target, value, at) {\n  return target[at] = value < 0 ? value + 0x100 : value;\n}\n\nfunction write_uint16_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint16(at + target.byteOffset, value, true);\n}\n\nfunction write_uint32_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint32(at + target.byteOffset, value, true);\n}\n\nfunction write_int16_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt16(at + target.byteOffset, value, true);\n}\n\nfunction write_int32_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt32(at + target.byteOffset, value, true);\n}\n\nfunction write_float_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat32(at + target.byteOffset, value, true);\n}\n\nfunction write_double_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat64(at + target.byteOffset, value, true);\n}\n\nfunction write_uint16_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint16(at + target.byteOffset, value, false);\n}\n\nfunction write_uint32_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint32(at + target.byteOffset, value, false);\n}\n\nfunction write_int16_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt16(at + target.byteOffset, value, false);\n}\n\nfunction write_int32_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt32(at + target.byteOffset, value, false);\n}\n\nfunction write_float_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat32(at + target.byteOffset, value, false);\n}\n\nfunction write_double_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat64(at + target.byteOffset, value, false);\n}","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/bops/typedarray/write.js"],"names":["module","exports","writeUInt8","write_uint8","writeInt8","write_int8","writeUInt16LE","write_uint16_le","writeUInt32LE","write_uint32_le","writeInt16LE","write_int16_le","writeInt32LE","write_int32_le","writeFloatLE","write_float_le","writeDoubleLE","write_double_le","writeUInt16BE","write_uint16_be","writeUInt32BE","write_uint32_be","writeInt16BE","write_int16_be","writeInt32BE","write_int32_be","writeFloatBE","write_float_be","writeDoubleBE","write_double_be","map","require","target","value","at","dv","get","setUint16","byteOffset","setUint32","setInt16","setInt32","setFloat32","setFloat64"],"mappings":"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","sourcesContent":["module.exports = {\n    writeUInt8:      write_uint8\n  , writeInt8:       write_int8\n  , writeUInt16LE:   write_uint16_le\n  , writeUInt32LE:   write_uint32_le\n  , writeInt16LE:    write_int16_le\n  , writeInt32LE:    write_int32_le\n  , writeFloatLE:    write_float_le\n  , writeDoubleLE:   write_double_le\n  , writeUInt16BE:   write_uint16_be\n  , writeUInt32BE:   write_uint32_be\n  , writeInt16BE:    write_int16_be\n  , writeInt32BE:    write_int32_be\n  , writeFloatBE:    write_float_be\n  , writeDoubleBE:   write_double_be\n}\n\nvar map = require('./mapped.js')\n\nfunction write_uint8(target, value, at) {\n  return target[at] = value\n}\n\nfunction write_int8(target, value, at) {\n  return target[at] = value < 0 ? value + 0x100 : value\n}\n\nfunction write_uint16_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint16(at + target.byteOffset, value, true)\n}\n\nfunction write_uint32_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint32(at + target.byteOffset, value, true)\n}\n\nfunction write_int16_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt16(at + target.byteOffset, value, true)\n}\n\nfunction write_int32_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt32(at + target.byteOffset, value, true)\n}\n\nfunction write_float_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat32(at + target.byteOffset, value, true)\n}\n\nfunction write_double_le(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat64(at + target.byteOffset, value, true)\n}\n\nfunction write_uint16_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint16(at + target.byteOffset, value, false)\n}\n\nfunction write_uint32_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setUint32(at + target.byteOffset, value, false)\n}\n\nfunction write_int16_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt16(at + target.byteOffset, value, false)\n}\n\nfunction write_int32_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setInt32(at + target.byteOffset, value, false)\n}\n\nfunction write_float_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat32(at + target.byteOffset, value, false)\n}\n\nfunction write_double_be(target, value, at) {\n  var dv = map.get(target);\n  return dv.setFloat64(at + target.byteOffset, value, false)\n}\n"]},"metadata":{},"sourceType":"script"}