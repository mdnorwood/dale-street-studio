{"ast":null,"code":"\"use strict\";\n\nvar SyncReader = module.exports = function (buffer) {\n  this._buffer = buffer;\n  this._reads = [];\n};\n\nSyncReader.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length),\n    // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback\n  });\n};\n\nSyncReader.prototype.process = function () {\n  // as long as there is any data and read requests\n  while (this._reads.length > 0 && this._buffer.length) {\n    var read = this._reads[0];\n\n    if (this._buffer.length && (this._buffer.length >= read.length || read.allowLess)) {\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n\n      var buf = this._buffer;\n      this._buffer = buf.slice(read.length);\n      read.func.call(this, buf.slice(0, read.length));\n    } else {\n      break;\n    }\n  }\n\n  if (this._reads.length > 0) {\n    throw new Error(\"There are some read requests waitng on finished stream\");\n  }\n\n  if (this._buffer.length > 0) {\n    throw new Error(\"unrecognised content at end of stream\");\n  }\n};","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/pngjs/lib/sync-reader.js"],"names":["SyncReader","module","exports","buffer","_buffer","_reads","prototype","read","length","callback","push","Math","abs","allowLess","func","process","shift","buf","slice","call","Error"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAIC,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkB;AACnD,OAAKC,OAAL,GAAeD,MAAf;AACA,OAAKE,MAAL,GAAc,EAAd;AACD,CAHD;;AAKAL,UAAU,CAACM,SAAX,CAAqBC,IAArB,GAA4B,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACtD,OAAKJ,MAAL,CAAYK,IAAZ,CAAiB;AACfF,IAAAA,MAAM,EAAEG,IAAI,CAACC,GAAL,CAASJ,MAAT,CADO;AACW;AAC1BK,IAAAA,SAAS,EAAEL,MAAM,GAAG,CAFL;AAGfM,IAAAA,IAAI,EAAEL;AAHS,GAAjB;AAKD,CAND;;AAQAT,UAAU,CAACM,SAAX,CAAqBS,OAArB,GAA+B,YAAY;AACzC;AACA,SAAO,KAAKV,MAAL,CAAYG,MAAZ,GAAqB,CAArB,IAA0B,KAAKJ,OAAL,CAAaI,MAA9C,EAAsD;AACpD,QAAID,IAAI,GAAG,KAAKF,MAAL,CAAY,CAAZ,CAAX;;AAEA,QACE,KAAKD,OAAL,CAAaI,MAAb,KACC,KAAKJ,OAAL,CAAaI,MAAb,IAAuBD,IAAI,CAACC,MAA5B,IAAsCD,IAAI,CAACM,SAD5C,CADF,EAGE;AACA;AACA,WAAKR,MAAL,CAAYW,KAAZ,GAFA,CAEqB;;;AAErB,UAAIC,GAAG,GAAG,KAAKb,OAAf;AAEA,WAAKA,OAAL,GAAea,GAAG,CAACC,KAAJ,CAAUX,IAAI,CAACC,MAAf,CAAf;AAEAD,MAAAA,IAAI,CAACO,IAAL,CAAUK,IAAV,CAAe,IAAf,EAAqBF,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAaX,IAAI,CAACC,MAAlB,CAArB;AACD,KAZD,MAYO;AACL;AACD;AACF;;AAED,MAAI,KAAKH,MAAL,CAAYG,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,UAAM,IAAIY,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,MAAI,KAAKhB,OAAL,CAAaI,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,UAAM,IAAIY,KAAJ,CAAU,uCAAV,CAAN;AACD;AACF,CA7BD","sourcesContent":["\"use strict\";\n\nlet SyncReader = (module.exports = function (buffer) {\n  this._buffer = buffer;\n  this._reads = [];\n});\n\nSyncReader.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length), // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback,\n  });\n};\n\nSyncReader.prototype.process = function () {\n  // as long as there is any data and read requests\n  while (this._reads.length > 0 && this._buffer.length) {\n    let read = this._reads[0];\n\n    if (\n      this._buffer.length &&\n      (this._buffer.length >= read.length || read.allowLess)\n    ) {\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n      let buf = this._buffer;\n\n      this._buffer = buf.slice(read.length);\n\n      read.func.call(this, buf.slice(0, read.length));\n    } else {\n      break;\n    }\n  }\n\n  if (this._reads.length > 0) {\n    throw new Error(\"There are some read requests waitng on finished stream\");\n  }\n\n  if (this._buffer.length > 0) {\n    throw new Error(\"unrecognised content at end of stream\");\n  }\n};\n"]},"metadata":{},"sourceType":"script"}