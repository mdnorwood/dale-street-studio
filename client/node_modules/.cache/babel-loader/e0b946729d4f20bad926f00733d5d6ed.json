{"ast":null,"code":"var stream = require('stream');\n\nvar bops = require('bops');\n\nvar util = require('util');\n\nfunction ConcatStream(cb) {\n  stream.Stream.call(this);\n  this.writable = true;\n  if (cb) this.cb = cb;\n  this.body = [];\n  this.on('error', function (err) {// no-op\n  });\n}\n\nutil.inherits(ConcatStream, stream.Stream);\n\nConcatStream.prototype.write = function (chunk) {\n  this.emit('data', chunk);\n  this.body.push(chunk);\n};\n\nConcatStream.prototype.destroy = function () {};\n\nConcatStream.prototype.arrayConcat = function (arrs) {\n  if (arrs.length === 0) return [];\n  if (arrs.length === 1) return arrs[0];\n  return arrs.reduce(function (a, b) {\n    return a.concat(b);\n  });\n};\n\nConcatStream.prototype.isArray = function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\nConcatStream.prototype.getBody = function () {\n  if (this.body.length === 0) return bops.from(0);\n  if (typeof this.body[0] === \"string\") return this.body.join('');\n  if (this.isArray(this.body[0])) return this.arrayConcat(this.body);\n  if (bops.is(this.body[0])) return bops.join(this.body);\n  return this.body;\n};\n\nConcatStream.prototype.end = function (chunk) {\n  if (chunk) this.write(chunk);\n  this.emit('end');\n  if (this.cb) this.cb(this.getBody());\n};\n\nmodule.exports = function (cb) {\n  return new ConcatStream(cb);\n};\n\nmodule.exports.ConcatStream = ConcatStream;","map":{"version":3,"sources":["/Users/marcusnorwood/Sites/music-site/dale-street-studio-music/client/node_modules/concat-stream/index.js"],"names":["stream","require","bops","util","ConcatStream","cb","Stream","call","writable","body","on","err","inherits","prototype","write","chunk","emit","push","destroy","arrayConcat","arrs","length","reduce","a","b","concat","isArray","arr","Object","toString","getBody","from","join","is","end","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AAEA,SAASG,YAAT,CAAsBC,EAAtB,EAA0B;AACxBL,EAAAA,MAAM,CAACM,MAAP,CAAcC,IAAd,CAAmB,IAAnB;AACA,OAAKC,QAAL,GAAgB,IAAhB;AACA,MAAIH,EAAJ,EAAQ,KAAKA,EAAL,GAAUA,EAAV;AACR,OAAKI,IAAL,GAAY,EAAZ;AACA,OAAKC,EAAL,CAAQ,OAAR,EAAiB,UAASC,GAAT,EAAc,CAC7B;AACD,GAFD;AAGD;;AAEDR,IAAI,CAACS,QAAL,CAAcR,YAAd,EAA4BJ,MAAM,CAACM,MAAnC;;AAEAF,YAAY,CAACS,SAAb,CAAuBC,KAAvB,GAA+B,UAASC,KAAT,EAAgB;AAC7C,OAAKC,IAAL,CAAU,MAAV,EAAkBD,KAAlB;AACA,OAAKN,IAAL,CAAUQ,IAAV,CAAeF,KAAf;AACD,CAHD;;AAKAX,YAAY,CAACS,SAAb,CAAuBK,OAAvB,GAAiC,YAAW,CAAE,CAA9C;;AAEAd,YAAY,CAACS,SAAb,CAAuBM,WAAvB,GAAqC,UAASC,IAAT,EAAe;AAClD,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB,OAAO,EAAP;AACvB,MAAID,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB,OAAOD,IAAI,CAAC,CAAD,CAAX;AACvB,SAAOA,IAAI,CAACE,MAAL,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAOD,CAAC,CAACE,MAAF,CAASD,CAAT,CAAP;AAAoB,GAAlD,CAAP;AACD,CAJD;;AAMApB,YAAY,CAACS,SAAb,CAAuBa,OAAvB,GAAiC,UAASC,GAAT,EAAc;AAC7C,SAAOC,MAAM,CAACf,SAAP,CAAiBgB,QAAjB,CAA0BtB,IAA1B,CAA+BoB,GAA/B,KAAuC,gBAA9C;AACD,CAFD;;AAIAvB,YAAY,CAACS,SAAb,CAAuBiB,OAAvB,GAAiC,YAAY;AAC3C,MAAI,KAAKrB,IAAL,CAAUY,MAAV,KAAqB,CAAzB,EAA4B,OAAOnB,IAAI,CAAC6B,IAAL,CAAU,CAAV,CAAP;AAC5B,MAAI,OAAO,KAAKtB,IAAL,CAAU,CAAV,CAAP,KAAyB,QAA7B,EAAuC,OAAO,KAAKA,IAAL,CAAUuB,IAAV,CAAe,EAAf,CAAP;AACvC,MAAI,KAAKN,OAAL,CAAa,KAAKjB,IAAL,CAAU,CAAV,CAAb,CAAJ,EAAgC,OAAO,KAAKU,WAAL,CAAiB,KAAKV,IAAtB,CAAP;AAChC,MAAIP,IAAI,CAAC+B,EAAL,CAAQ,KAAKxB,IAAL,CAAU,CAAV,CAAR,CAAJ,EAA2B,OAAOP,IAAI,CAAC8B,IAAL,CAAU,KAAKvB,IAAf,CAAP;AAC3B,SAAO,KAAKA,IAAZ;AACD,CAND;;AAQAL,YAAY,CAACS,SAAb,CAAuBqB,GAAvB,GAA6B,UAASnB,KAAT,EAAgB;AAC3C,MAAIA,KAAJ,EAAW,KAAKD,KAAL,CAAWC,KAAX;AACX,OAAKC,IAAL,CAAU,KAAV;AACA,MAAI,KAAKX,EAAT,EAAa,KAAKA,EAAL,CAAQ,KAAKyB,OAAL,EAAR;AACd,CAJD;;AAMAK,MAAM,CAACC,OAAP,GAAiB,UAAS/B,EAAT,EAAa;AAC5B,SAAO,IAAID,YAAJ,CAAiBC,EAAjB,CAAP;AACD,CAFD;;AAIA8B,MAAM,CAACC,OAAP,CAAehC,YAAf,GAA8BA,YAA9B","sourcesContent":["var stream = require('stream')\nvar bops = require('bops')\nvar util = require('util')\n\nfunction ConcatStream(cb) {\n  stream.Stream.call(this)\n  this.writable = true\n  if (cb) this.cb = cb\n  this.body = []\n  this.on('error', function(err) {\n    // no-op\n  })\n}\n\nutil.inherits(ConcatStream, stream.Stream)\n\nConcatStream.prototype.write = function(chunk) {\n  this.emit('data', chunk)\n  this.body.push(chunk)\n}\n\nConcatStream.prototype.destroy = function() {}\n\nConcatStream.prototype.arrayConcat = function(arrs) {\n  if (arrs.length === 0) return []\n  if (arrs.length === 1) return arrs[0]\n  return arrs.reduce(function (a, b) { return a.concat(b) })\n}\n\nConcatStream.prototype.isArray = function(arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]'\n}\n\nConcatStream.prototype.getBody = function () {\n  if (this.body.length === 0) return bops.from(0)\n  if (typeof(this.body[0]) === \"string\") return this.body.join('')\n  if (this.isArray(this.body[0])) return this.arrayConcat(this.body)\n  if (bops.is(this.body[0])) return bops.join(this.body)\n  return this.body\n}\n\nConcatStream.prototype.end = function(chunk) {\n  if (chunk) this.write(chunk)\n  this.emit('end')\n  if (this.cb) this.cb(this.getBody())\n}\n\nmodule.exports = function(cb) {\n  return new ConcatStream(cb)\n}\n\nmodule.exports.ConcatStream = ConcatStream\n"]},"metadata":{},"sourceType":"script"}