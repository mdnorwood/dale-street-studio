{"version":3,"sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["subColor","shrinkLabelStyles","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","props","onChange","className","value","length","SignInContainer","SignInTitle","h2","ButtonsBarContainer","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","SignUpContainer","SignUpTitle","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpContainer","SignInAndSignUpPage"],"mappings":"iRAEMA,EAAW,OAGXC,EAAoBC,YAAH,6EAFL,SAQLC,EAAiBC,IAAOC,IAAV,qIASdC,EAAqBF,IAAOG,MAAV,yVAGpBP,EAOkBA,EAQvBC,GAIOO,EAAiBJ,IAAOK,MAAV,+NAChBT,EAULC,G,OClCSS,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcF,EAAjB,EAAiBA,MAAUG,EAA3B,+CAChB,eAACT,EAAD,WACE,cAACG,EAAD,aAAoBO,SAAUF,GAAkBC,IAC/CH,EACC,cAACD,EAAD,CAAgBM,UAAWF,EAAMG,MAAMC,OAAS,SAAW,GAA3D,SACGP,IAED,S,iBCbKQ,EAAkBb,IAAOC,IAAV,iOAafa,EAAcd,IAAOe,GAAV,+CAIXC,EAAsBhB,IAAOC,IAAV,iFC2DjBgB,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACtCC,kBAAmB,kBAAMD,EAASC,gBAClCC,iBAAkB,SAACC,EAAOC,GAAR,OAChBJ,EAASE,YAAiB,CAAEC,QAAOC,kBAGxBL,EAhEA,SAAC,GAA6C,IAA3CG,EAA0C,EAA1CA,iBAAkBD,EAAwB,EAAxBA,kBAAwB,EAChBI,mBAAS,CAClDF,MAAO,GACPC,SAAU,KAH+C,mBACpDE,EADoD,KACnCC,EADmC,KAMlDJ,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAETI,EAAY,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sDACnBD,EAAME,iBACER,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAEfF,EAAiBC,EAAOC,GAJL,2CAAH,sDAOZf,EAAe,SAAAoB,GAAU,IAAD,EACJA,EAAMG,OAAtBnB,EADoB,EACpBA,MAAOoB,EADa,EACbA,KAEfN,EAAe,2BAAKD,GAAN,kBAAwBO,EAAOpB,MAG7C,OACE,eAACE,EAAD,WACE,cAACC,EAAD,wCACA,wEAEA,uBAAMkB,SAAUN,EAAhB,UACE,cAAC,EAAD,CACEK,KAAK,QACLE,KAAK,QACL1B,aAAcA,EACdI,MAAOU,EACPhB,MAAM,QACN6B,UAAQ,IAEV,cAAC,EAAD,CACEH,KAAK,WACLE,KAAK,WACLtB,MAAOW,EACPf,aAAcA,EACdF,MAAM,WACN6B,UAAQ,IAEV,eAAClB,EAAD,WACE,cAAC,IAAD,CAAciB,KAAK,SAAnB,uBACA,cAAC,IAAD,CACEA,KAAK,SACLE,QAAShB,EACTiB,gBAAc,EAHhB,6CCzDCC,EAAkBrC,IAAOC,IAAV,iOAafqC,EAActC,IAAOe,GAAV,+CCwETE,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCqB,YAAa,SAAAf,GAAe,OAAIN,EAASqB,YAAYf,QAGxCP,EA7EA,SAAC,GAAmB,IAAlBsB,EAAiB,EAAjBA,YAAiB,EAEchB,mBAAS,CACrDiB,YAAa,GACbnB,MAAO,GACPC,SAAU,GACVmB,gBAAiB,KANa,mBAEzBjB,EAFyB,KAERkB,EAFQ,KASxBF,EAAkDhB,EAAlDgB,YAAanB,EAAqCG,EAArCH,MAAOC,EAA8BE,EAA9BF,SAAUmB,EAAoBjB,EAApBiB,gBAEhCf,EAAY,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACnBD,EAAME,iBAEFP,IAAamB,EAHE,uBAIjBE,MAAM,yBAJW,0BAQnBJ,EAAY,CAAEC,cAAanB,QAAOC,aARf,2CAAH,sDAWZf,EAAe,SAAAoB,GAAU,IAAD,EACJA,EAAMG,OAAtBC,EADoB,EACpBA,KAAMpB,EADc,EACdA,MAEd+B,EAAmB,2BAAKlB,GAAN,kBAAwBO,EAAOpB,MAIjD,OACE,eAAC0B,EAAD,WACE,cAACC,EAAD,sCACA,wEACA,uBAAM5B,UAAU,eAAesB,SAAUN,EAAzC,UACE,cAAC,EAAD,CACEO,KAAK,OACLF,KAAK,cACLpB,MAAO6B,EACP/B,SAAUF,EACVF,MAAM,eACN6B,UAAQ,IAEV,cAAC,EAAD,CACED,KAAK,QACLF,KAAK,QACLpB,MAAOU,EACPZ,SAAUF,EACVF,MAAM,QACN6B,UAAQ,IAEV,cAAC,EAAD,CACED,KAAK,WACLF,KAAK,WACLpB,MAAOW,EACPb,SAAUF,EACVF,MAAM,WACN6B,UAAQ,IAEV,cAAC,EAAD,CACED,KAAK,WACLF,KAAK,kBACLpB,MAAO8B,EACPhC,SAAUF,EACVF,MAAM,mBACN6B,UAAQ,IAEV,cAAC,IAAD,CAAcD,KAAK,SAAnB,8BCzEGW,EAA2B5C,IAAOC,IAAV,wgBCWtB4C,UAPa,kBAC1B,eAACD,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/20.3d1eed15.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst subColor = 'grey';\nconst mainColor = 'black';\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${mainColor};\n`;\n\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 45px 0;\n\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${subColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subColor};\n  margin: 25px 0;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus ~ label {\n    ${shrinkLabelStyles}\n  }\n`;\n\nexport const FormInputLabel = styled.label`\n  color: ${subColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n`;\n","import React from 'react';\n\nimport {\n  GroupContainer,\n  FormInputContainer,\n  FormInputLabel\n} from './form-input.styles';\n\nconst FormInput = ({ handleChange, label, ...props }) => (\n  <GroupContainer>\n    <FormInputContainer onChange={handleChange} {...props} />\n    {label ? (\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\n        {label}\n      </FormInputLabel>\n    ) : null}\n  </GroupContainer>\n);\n\nexport default FormInput;","import styled from 'styled-components';\n\nexport const SignInContainer = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (max-width: 800px) {\n    margin-left: 0;\n    margin-right: 0;\n    margin-top: 50px;\n    width: 100%;\n    }\n`;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from './sign-in.styles';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n const [userCredentials, setCredentials ] = useState({\n   email: '',\n   password: ''\n  });\n\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const { email, password } = userCredentials;\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n    return (\n      <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange}\n            value={email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={password}\n            handleChange={handleChange}\n            label='password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton\n              type='button'\n              onClick={googleSignInStart}\n              isGoogleSignIn\n            >\n              Sign in with Google\n            </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>\n    );\n  }\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import styled from 'styled-components';\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n\n  @media screen and (max-width: 800px) {\n    margin-left: 0;\n    margin-right: 0;\n    margin-top: 50px;\n    width: 100%;\n    }\n`;\n\nexport const SignUpTitle = styled.h2`\n  margin: 10px 0;\n`;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart } from '../../redux/user/user.actions';\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nconst SignUp = ({signUpStart}) => {\n\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({ displayName, email, password });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n\n    return (\n      <SignUpContainer>\n        <SignUpTitle>I do not have a account</SignUpTitle>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={handleChange}\n            label='Display Name'\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            label='Email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={handleChange}\n            label='Confirm Password'\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </SignUpContainer>\n    );\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n","import styled from 'styled-components';\n\n\nexport const SignInAndSignUpContainer = styled.div`\n  width: 850px;\n  display: flex;\n  justify-content: space-between;\n  margin: 30px auto;\n\n  -webkit-columns: 2 425px;\n  -moz-columns: 2 425px;\n  columns: 2 425px;\n  -webkit-column-gap: 4em;\n  -moz-column-gap: 4em;\n  column-gap: 4em;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    width: 450px;\n    -webkit-columns: 1 100%;\n    -moz-columns: 1 100%;\n    columns: 1 100%;\n    -webkit-column-gap: 5px;\n    -moz-column-gap: 5px;\n    column-gap: 5px;\n    }\n`;\n\n","import React from 'react';\n\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nimport { SignInAndSignUpContainer } from './sign-in-and-sign-up.styles';\n\nconst SignInAndSignUpPage = () => (\n  <SignInAndSignUpContainer>\n    <SignIn />\n    <SignUp />\n  </SignInAndSignUpContainer>\n);\n\nexport default SignInAndSignUpPage;"],"sourceRoot":""}