{"version":3,"sources":["components/post/use-reducer.component.jsx"],"names":["INITIAL_STATE","user","searchQuery","reducer","state","action","type","payload","setUser","UseReducerExample","useReducer","dispatch","useEffect","length","a","fetch","response","json","resJson","fetchFunc","value","onChange","event","target","name","username","email"],"mappings":"4NAEMA,EAAgB,CACpBC,KAAM,KACNC,YAAa,QAGTC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BAAKF,GAAZ,IAAmBH,KAAMI,EAAOE,UAClC,IAAK,mBACH,OAAO,2BAAKH,GAAZ,IAAmBF,YAAaG,EAAOE,UACzC,QACE,OAAOH,IAIPI,EAAU,SAAAP,GAAI,MAAK,CACvBK,KAAM,WACNC,QAAQN,IA8CKQ,UAtCW,WAAO,IAAD,EACJC,qBAAWP,EAASH,GADhB,mBACvBI,EADuB,KAChBO,EADgB,KAEtBV,EAAsBG,EAAtBH,KAAMC,EAAgBE,EAAhBF,YAgBd,OAdAU,qBAAU,WACLV,EAAYW,OAAS,GACP,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,uDAAD,OAC6Bb,IAFzC,cACVc,EADU,gBAIMA,EAASC,OAJf,OAIVC,EAJU,OAKhBP,EAASH,EAAQU,EAAQ,KALT,2CAAH,oDAQfC,KAED,CAACjB,IAGF,gCACE,uBACEI,KAAK,SACLc,MAAOlB,EACPmB,SAAU,SAAAC,GAAK,OAAIX,EA5BY,CACrCL,KAAM,mBACNC,QA0BiDe,EAAMC,OAAOH,WAEzDnB,EACC,gCACE,6BAAKA,EAAKuB,OACV,6BAAKvB,EAAKwB,WACV,6BAAKxB,EAAKyB,WAGZ","file":"static/js/15.cd5342c8.chunk.js","sourcesContent":["import React, { useEffect, useReducer } from 'react';\n\nconst INITIAL_STATE = {\n  user: null,\n  searchQuery: 'Bret'\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...state, user: action.payload };\n    case 'SET_SEARCH_QUERY':\n      return { ...state, searchQuery: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst setUser = user => ({\n  type: 'SET_USER',\n  payload:user\n});\n\nconst setSearchQuery = queryString => ({\n  type: 'SET_SEARCH_QUERY',\n  payload: queryString\n});\n\nconst UseReducerExample = () => {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n  const { user, searchQuery } = state;\n\n  useEffect(() => {\n    if(searchQuery.length > 0) {\n      const fetchFunc = async () => {\n        const response = await fetch(\n          `https://jsonplaceholder.typicode.com/users?username=${searchQuery}`\n        );\n        const resJson = await response.json();\n        dispatch(setUser(resJson[0]));\n      };\n\n      fetchFunc();\n    }\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <input\n        type='search'\n        value={searchQuery}\n        onChange={event => dispatch(setSearchQuery(event.target.value))}\n      />\n      {user ? (\n        <div>\n          <h3>{user.name}</h3>\n          <h3>{user.username}</h3>\n          <h3>{user.email}</h3>\n        </div>\n      ) : (\n        <p>No user found</p>\n      )}\n    </div>\n  );\n};\n\nexport default UseReducerExample;"],"sourceRoot":""}